	.arch armv8-a
	.file	"filter.c"
	.text
	.align	2
	.global	darray_init
	.type	darray_init, %function
darray_init:
	stp	x29, x30, [sp, -48]!
	add	x29, sp, 0
	str	w0, [x29, 28]
	ldrsw	x0, [x29, 28]
	mov	x1, 8
	bl	calloc
	str	x0, [x29, 40]
	ldr	x0, [x29, 40]
	ldp	x29, x30, [sp], 48
	ret
	.size	darray_init, .-darray_init
	.align	2
	.global	darray_put
	.type	darray_put, %function
darray_put:
	sub	sp, sp, #32
	str	x0, [sp, 24]
	str	w1, [sp, 20]
	str	d0, [sp, 8]
	ldrsw	x0, [sp, 20]
	lsl	x0, x0, 3
	ldr	x1, [sp, 24]
	add	x0, x1, x0
	ldr	d0, [sp, 8]
	str	d0, [x0]
	nop
	add	sp, sp, 32
	ret
	.size	darray_put, .-darray_put
	.align	2
	.global	darray_get
	.type	darray_get, %function
darray_get:
	sub	sp, sp, #16
	str	x0, [sp, 8]
	str	w1, [sp, 4]
	ldrsw	x0, [sp, 4]
	lsl	x0, x0, 3
	ldr	x1, [sp, 8]
	add	x0, x1, x0
	ldr	d0, [x0]
	add	sp, sp, 16
	ret
	.size	darray_get, .-darray_get
	.align	2
	.global	darray_free
	.type	darray_free, %function
darray_free:
	stp	x29, x30, [sp, -32]!
	add	x29, sp, 0
	str	x0, [x29, 24]
	ldr	x0, [x29, 24]
	bl	free
	nop
	ldp	x29, x30, [sp], 32
	ret
	.size	darray_free, .-darray_free
	.align	2
	.global	buffer_init
	.type	buffer_init, %function
buffer_init:
	stp	x29, x30, [sp, -48]!
	add	x29, sp, 0
	str	w0, [x29, 28]
	mov	x1, 16
	mov	x0, 1
	bl	calloc
	str	x0, [x29, 40]
	ldr	x0, [x29, 40]
	cmp	x0, 0
	bne	.L8
	mov	x0, 0
	b	.L9
.L8:
	ldr	x0, [x29, 40]
	ldr	w1, [x29, 28]
	str	w1, [x0]
	ldr	x0, [x29, 40]
	str	wzr, [x0, 4]
	ldrsw	x0, [x29, 28]
	mov	x1, 8
	bl	calloc
	mov	x1, x0
	ldr	x0, [x29, 40]
	str	x1, [x0, 8]
	str	wzr, [x29, 36]
	b	.L10
.L11:
	ldr	x0, [x29, 40]
	ldr	x1, [x0, 8]
	ldrsw	x0, [x29, 36]
	lsl	x0, x0, 3
	add	x0, x1, x0
	str	xzr, [x0]
	ldr	w0, [x29, 36]
	add	w0, w0, 1
	str	w0, [x29, 36]
.L10:
	ldr	w1, [x29, 36]
	ldr	w0, [x29, 28]
	cmp	w1, w0
	blt	.L11
	ldr	x0, [x29, 40]
.L9:
	ldp	x29, x30, [sp], 48
	ret
	.size	buffer_init, .-buffer_init
	.align	2
	.global	buffer_put
	.type	buffer_put, %function
buffer_put:
	sub	sp, sp, #16
	str	x0, [sp, 8]
	str	d0, [sp]
	ldr	x0, [sp, 8]
	ldr	x1, [x0, 8]
	ldr	x0, [sp, 8]
	ldr	w0, [x0, 4]
	add	w3, w0, 1
	ldr	x2, [sp, 8]
	str	w3, [x2, 4]
	sxtw	x0, w0
	lsl	x0, x0, 3
	add	x0, x1, x0
	ldr	d0, [sp]
	str	d0, [x0]
	ldr	x0, [sp, 8]
	ldr	w1, [x0, 4]
	ldr	x0, [sp, 8]
	ldr	w0, [x0]
	cmp	w1, w0
	blt	.L14
	ldr	x0, [sp, 8]
	str	wzr, [x0, 4]
.L14:
	nop
	add	sp, sp, 16
	ret
	.size	buffer_put, .-buffer_put
	.align	2
	.global	buffer_get
	.type	buffer_get, %function
buffer_get:
	sub	sp, sp, #32
	str	x0, [sp, 8]
	str	w1, [sp, 4]
	ldr	x0, [sp, 8]
	ldr	w1, [x0, 4]
	ldr	w0, [sp, 4]
	sub	w0, w1, w0
	sub	w0, w0, #1
	str	w0, [sp, 28]
	ldr	w0, [sp, 28]
	cmp	w0, 0
	bge	.L16
	ldr	x0, [sp, 8]
	ldr	w0, [x0]
	ldr	w1, [sp, 28]
	add	w0, w1, w0
	str	w0, [sp, 28]
.L16:
	ldr	x0, [sp, 8]
	ldr	x1, [x0, 8]
	ldrsw	x0, [sp, 28]
	lsl	x0, x0, 3
	add	x0, x1, x0
	ldr	d0, [x0]
	add	sp, sp, 32
	ret
	.size	buffer_get, .-buffer_get
	.align	2
	.global	buffer_get_all
	.type	buffer_get_all, %function
buffer_get_all:
	stp	x29, x30, [sp, -64]!
	add	x29, sp, 0
	str	x19, [sp, 16]
	str	x0, [x29, 40]
	str	x1, [x29, 32]
	str	wzr, [x29, 60]
	b	.L19
.L20:
	ldrsw	x0, [x29, 60]
	lsl	x0, x0, 3
	ldr	x1, [x29, 32]
	add	x19, x1, x0
	ldr	w1, [x29, 60]
	ldr	x0, [x29, 40]
	bl	buffer_get
	str	d0, [x19]
	ldr	w0, [x29, 60]
	add	w0, w0, 1
	str	w0, [x29, 60]
.L19:
	ldr	x0, [x29, 40]
	ldr	w0, [x0]
	ldr	w1, [x29, 60]
	cmp	w1, w0
	blt	.L20
	nop
	ldr	x19, [sp, 16]
	ldp	x29, x30, [sp], 64
	ret
	.size	buffer_get_all, .-buffer_get_all
	.align	2
	.global	buffer_weighted_sum
	.type	buffer_weighted_sum, %function
buffer_weighted_sum:
	stp	x29, x30, [sp, -48]!
	add	x29, sp, 0
	str	x0, [x29, 24]
	str	x1, [x29, 16]
	str	xzr, [x29, 40]
	str	wzr, [x29, 36]
	b	.L22
.L23:
	ldr	w1, [x29, 36]
	ldr	x0, [x29, 24]
	bl	buffer_get
	fmov	d1, d0
	ldrsw	x0, [x29, 36]
	lsl	x0, x0, 3
	ldr	x1, [x29, 16]
	add	x0, x1, x0
	ldr	d0, [x0]
	fmul	d0, d1, d0
	ldr	d1, [x29, 40]
	fadd	d0, d1, d0
	str	d0, [x29, 40]
	ldr	w0, [x29, 36]
	add	w0, w0, 1
	str	w0, [x29, 36]
.L22:
	ldr	x0, [x29, 24]
	ldr	w0, [x0]
	ldr	w1, [x29, 36]
	cmp	w1, w0
	blt	.L23
	ldr	d0, [x29, 40]
	ldp	x29, x30, [sp], 48
	ret
	.size	buffer_weighted_sum, .-buffer_weighted_sum
	.align	2
	.global	buffer_reset
	.type	buffer_reset, %function
buffer_reset:
	sub	sp, sp, #32
	str	x0, [sp, 8]
	str	wzr, [sp, 28]
	b	.L26
.L27:
	ldr	x0, [sp, 8]
	ldr	x1, [x0, 8]
	ldrsw	x0, [sp, 28]
	lsl	x0, x0, 3
	add	x0, x1, x0
	str	xzr, [x0]
	ldr	w0, [sp, 28]
	add	w0, w0, 1
	str	w0, [sp, 28]
.L26:
	ldr	x0, [sp, 8]
	ldr	w0, [x0]
	ldr	w1, [sp, 28]
	cmp	w1, w0
	blt	.L27
	nop
	add	sp, sp, 32
	ret
	.size	buffer_reset, .-buffer_reset
	.align	2
	.global	buffer_free
	.type	buffer_free, %function
buffer_free:
	stp	x29, x30, [sp, -32]!
	add	x29, sp, 0
	str	x0, [x29, 24]
	ldr	x0, [x29, 24]
	ldr	x0, [x0, 8]
	bl	free
	ldr	x0, [x29, 24]
	bl	free
	nop
	ldp	x29, x30, [sp], 32
	ret
	.size	buffer_free, .-buffer_free
	.align	2
	.global	filter_init
	.type	filter_init, %function
filter_init:
	stp	x29, x30, [sp, -64]!
	add	x29, sp, 0
	str	x0, [x29, 40]
	str	w1, [x29, 36]
	str	x2, [x29, 24]
	str	w3, [x29, 32]
	mov	x1, 48
	mov	x0, 1
	bl	calloc
	str	x0, [x29, 56]
	ldr	x0, [x29, 56]
	cmp	x0, 0
	bne	.L30
	mov	x0, 0
	b	.L31
.L30:
	ldr	x0, [x29, 56]
	ldr	w1, [x29, 32]
	str	w1, [x0, 8]
	ldr	x0, [x29, 56]
	ldr	w1, [x29, 36]
	str	w1, [x0, 24]
	ldr	x0, [x29, 56]
	ldr	x1, [x29, 24]
	str	x1, [x0]
	ldr	x0, [x29, 56]
	ldr	x1, [x29, 40]
	str	x1, [x0, 16]
	ldr	w0, [x29, 36]
	bl	buffer_init
	mov	x1, x0
	ldr	x0, [x29, 56]
	str	x1, [x0, 32]
	ldr	w0, [x29, 32]
	bl	buffer_init
	mov	x1, x0
	ldr	x0, [x29, 56]
	str	x1, [x0, 40]
	ldr	x0, [x29, 56]
.L31:
	ldp	x29, x30, [sp], 64
	ret
	.size	filter_init, .-filter_init
	.align	2
	.global	filter_proceed
	.type	filter_proceed, %function
filter_proceed:
	stp	x29, x30, [sp, -48]!
	add	x29, sp, 0
	str	x0, [x29, 24]
	str	d0, [x29, 16]
	ldr	x0, [x29, 24]
	ldr	x0, [x0, 32]
	ldr	d0, [x29, 16]
	bl	buffer_put
	ldr	x0, [x29, 24]
	ldr	x2, [x0, 32]
	ldr	x0, [x29, 24]
	ldr	x0, [x0, 16]
	mov	x1, x0
	mov	x0, x2
	bl	buffer_weighted_sum
	str	d0, [x29, 32]
	ldr	x0, [x29, 24]
	ldr	x2, [x0, 40]
	ldr	x0, [x29, 24]
	ldr	x0, [x0]
	mov	x1, x0
	mov	x0, x2
	bl	buffer_weighted_sum
	str	d0, [x29, 40]
	ldr	d1, [x29, 32]
	ldr	d0, [x29, 40]
	fsub	d0, d1, d0
	str	d0, [x29, 32]
	ldr	x0, [x29, 24]
	ldr	x0, [x0, 40]
	ldr	d0, [x29, 32]
	bl	buffer_put
	ldr	d0, [x29, 32]
	ldp	x29, x30, [sp], 48
	ret
	.size	filter_proceed, .-filter_proceed
	.align	2
	.global	filter_array
	.type	filter_array, %function
filter_array:
	stp	x29, x30, [sp, -64]!
	add	x29, sp, 0
	str	x0, [x29, 40]
	str	x1, [x29, 32]
	str	x2, [x29, 24]
	str	w3, [x29, 20]
	str	wzr, [x29, 52]
	b	.L35
.L36:
	ldrsw	x0, [x29, 52]
	lsl	x0, x0, 3
	ldr	x1, [x29, 32]
	add	x0, x1, x0
	ldr	d0, [x0]
	ldr	x0, [x29, 40]
	bl	filter_proceed
	str	d0, [x29, 56]
	ldrsw	x0, [x29, 52]
	lsl	x0, x0, 3
	ldr	x1, [x29, 24]
	add	x0, x1, x0
	ldr	d0, [x29, 56]
	str	d0, [x0]
	ldr	w0, [x29, 52]
	add	w0, w0, 1
	str	w0, [x29, 52]
.L35:
	ldr	w1, [x29, 52]
	ldr	w0, [x29, 20]
	cmp	w1, w0
	blt	.L36
	nop
	ldp	x29, x30, [sp], 64
	ret
	.size	filter_array, .-filter_array
	.align	2
	.global	filter_reset
	.type	filter_reset, %function
filter_reset:
	stp	x29, x30, [sp, -32]!
	add	x29, sp, 0
	str	x0, [x29, 24]
	ldr	x0, [x29, 24]
	ldr	x0, [x0, 32]
	bl	buffer_reset
	ldr	x0, [x29, 24]
	ldr	x0, [x0, 40]
	bl	buffer_reset
	nop
	ldp	x29, x30, [sp], 32
	ret
	.size	filter_reset, .-filter_reset
	.align	2
	.global	filter_free
	.type	filter_free, %function
filter_free:
	stp	x29, x30, [sp, -32]!
	add	x29, sp, 0
	str	x0, [x29, 24]
	ldr	x0, [x29, 24]
	ldr	x0, [x0, 32]
	bl	buffer_free
	ldr	x0, [x29, 24]
	ldr	x0, [x0, 40]
	bl	buffer_free
	ldr	x0, [x29, 24]
	bl	free
	nop
	ldp	x29, x30, [sp], 32
	ret
	.size	filter_free, .-filter_free
	.ident	"GCC: (Ubuntu/Linaro 7.5.0-3ubuntu1~18.04) 7.5.0"
	.section	.note.GNU-stack,"",@progbits
