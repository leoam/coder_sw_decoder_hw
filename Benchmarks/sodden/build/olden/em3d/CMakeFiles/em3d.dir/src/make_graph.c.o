	.file	"make_graph.c"
	.text
.Ltext0:
	.comm	NumMisses,4,4
	.comm	n_nodes,4,4
	.comm	d_nodes,4,4
	.comm	local_p,4,4
	.section	.rodata
.LC0:
	.string	"Assertion failure"
	.text
	.globl	make_table
	.type	make_table, @function
make_table:
.LFB0:
	.file 1 "../olden/em3d/src/make_graph.c"
	.loc 1 25 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	.loc 1 26 0
	movl	-20(%rbp), %eax
	cltq
	salq	$3, %rax
	movq	%rax, %rdi
	call	malloc@PLT
	movq	%rax, -8(%rbp)
	.loc 1 27 0
	cmpq	$0, -8(%rbp)
	jne	.L2
	.loc 1 27 0 is_stmt 0 discriminator 1
	leaq	.LC0(%rip), %rdi
	call	puts@PLT
	movl	$-1, %edi
	call	exit@PLT
.L2:
	.loc 1 28 0 is_stmt 1
	movq	-8(%rbp), %rax
	.loc 1 29 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE0:
	.size	make_table, .-make_table
	.globl	fill_table
	.type	fill_table, @function
fill_table:
.LFB1:
	.loc 1 33 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$64, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movl	%edx, -52(%rbp)
	movl	%ecx, -56(%rbp)
	.loc 1 37 0
	movl	$48, %edi
	call	malloc@PLT
	movq	%rax, -8(%rbp)
	.loc 1 38 0
	movq	-40(%rbp), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, (%rax)
	.loc 1 39 0
	call	gen_uniform_double@PLT
	movq	%xmm0, %rdx
	movq	-48(%rbp), %rax
	movq	%rdx, (%rax)
	.loc 1 40 0
	movq	-48(%rbp), %rax
	leaq	8(%rax), %rdx
	movq	%rdx, -48(%rbp)
	movq	-8(%rbp), %rdx
	movq	%rax, (%rdx)
	.loc 1 41 0
	movq	-8(%rbp), %rax
	movl	$0, 40(%rax)
	.loc 1 44 0
	movl	$1, -20(%rbp)
	jmp	.L5
.L6:
	.loc 1 45 0 discriminator 3
	movl	$48, %edi
	call	malloc@PLT
	movq	%rax, -16(%rbp)
	.loc 1 46 0 discriminator 3
	call	gen_uniform_double@PLT
	movq	%xmm0, %rdx
	movq	-48(%rbp), %rax
	movq	%rdx, (%rax)
	.loc 1 47 0 discriminator 3
	movq	-48(%rbp), %rax
	leaq	8(%rax), %rdx
	movq	%rdx, -48(%rbp)
	movq	-16(%rbp), %rdx
	movq	%rax, (%rdx)
	.loc 1 48 0 discriminator 3
	movq	-16(%rbp), %rax
	movl	$0, 40(%rax)
	.loc 1 49 0 discriminator 3
	movl	-20(%rbp), %eax
	cltq
	leaq	0(,%rax,8), %rdx
	movq	-40(%rbp), %rax
	addq	%rax, %rdx
	movq	-16(%rbp), %rax
	movq	%rax, (%rdx)
	.loc 1 50 0 discriminator 3
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, 8(%rax)
	.loc 1 51 0 discriminator 3
	movq	-16(%rbp), %rax
	movq	%rax, -8(%rbp)
	.loc 1 44 0 discriminator 3
	addl	$1, -20(%rbp)
.L5:
	.loc 1 44 0 is_stmt 0 discriminator 1
	movl	-20(%rbp), %eax
	cmpl	-52(%rbp), %eax
	jl	.L6
	.loc 1 53 0 is_stmt 1
	movq	-16(%rbp), %rax
	movq	$0, 8(%rax)
	.loc 1 54 0
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE1:
	.size	fill_table, .-fill_table
	.section	.rodata
.LC1:
	.string	"Uncaught malloc error"
.LC2:
	.string	"Error! on dest %d @ %d\n"
.LC3:
	.string	"Error! no to_nodes filed!"
	.text
	.globl	make_neighbors
	.type	make_neighbors, @function
make_neighbors:
.LFB2:
	.loc 1 58 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$80, %rsp
	movq	%rdi, -56(%rbp)
	movq	%rsi, -64(%rbp)
	movl	%edx, -68(%rbp)
	movl	%ecx, -72(%rbp)
	movl	%r8d, -76(%rbp)
	movl	%r9d, -80(%rbp)
	.loc 1 61 0
	movq	-56(%rbp), %rax
	movq	%rax, -24(%rbp)
	jmp	.L8
.L21:
.LBB2:
	.loc 1 66 0
	movl	-72(%rbp), %eax
	cltq
	salq	$3, %rax
	movq	%rax, %rdi
	call	malloc@PLT
	movq	%rax, %rdx
	movq	-24(%rbp), %rax
	movq	%rdx, 16(%rax)
	.loc 1 67 0
	movq	-24(%rbp), %rax
	movq	16(%rax), %rax
	testq	%rax, %rax
	jne	.L9
	.loc 1 68 0
	leaq	.LC1(%rip), %rdi
	call	puts@PLT
	.loc 1 69 0
	movl	$0, %edi
	call	exit@PLT
.L9:
	.loc 1 72 0
	movl	$0, -40(%rbp)
	jmp	.L10
.L18:
.LBB3:
	.loc 1 75 0
	movl	-68(%rbp), %eax
	movl	%eax, %edi
	call	gen_number@PLT
	movl	%eax, -28(%rbp)
	.loc 1 77 0
	movl	-76(%rbp), %eax
	movl	%eax, %edi
	call	check_percent@PLT
	testl	%eax, %eax
	je	.L11
	.loc 1 78 0
	movl	-80(%rbp), %eax
	movl	%eax, -32(%rbp)
	jmp	.L12
.L11:
	.loc 1 80 0
	movl	$1, %edi
	call	gen_signed_number@PLT
	movl	$0, -32(%rbp)
.L12:
	.loc 1 84 0
	movl	-32(%rbp), %eax
	cltq
	leaq	0(,%rax,8), %rdx
	movq	-64(%rbp), %rax
	addq	%rdx, %rax
	movq	(%rax), %rax
	movq	%rax, -16(%rbp)
	.loc 1 85 0
	movl	-28(%rbp), %eax
	cltq
	leaq	0(,%rax,8), %rdx
	movq	-16(%rbp), %rax
	addq	%rdx, %rax
	movq	(%rax), %rax
	movq	%rax, -8(%rbp)
	.loc 1 86 0
	cmpq	$0, -8(%rbp)
	jne	.L13
	.loc 1 87 0
	movl	-32(%rbp), %edx
	movl	-28(%rbp), %eax
	movl	%eax, %esi
	leaq	.LC2(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	.loc 1 88 0
	movl	$1, %edi
	call	exit@PLT
.L13:
	.loc 1 91 0
	movl	$0, -36(%rbp)
	jmp	.L14
.L17:
	.loc 1 92 0
	movq	-24(%rbp), %rax
	movq	16(%rax), %rax
	movl	-36(%rbp), %edx
	movslq	%edx, %rdx
	salq	$3, %rdx
	addq	%rdx, %rax
	movq	(%rax), %rax
	cmpq	%rax, -8(%rbp)
	je	.L22
	.loc 1 91 0 discriminator 2
	addl	$1, -36(%rbp)
.L14:
	.loc 1 91 0 is_stmt 0 discriminator 1
	movl	-36(%rbp), %eax
	cmpl	-40(%rbp), %eax
	jl	.L17
	jmp	.L16
.L22:
	.loc 1 92 0 is_stmt 1
	nop
.L16:
.LBE3:
	.loc 1 101 0
	movl	-36(%rbp), %eax
	cmpl	-40(%rbp), %eax
	jl	.L18
	.loc 1 103 0
	cmpq	$0, -24(%rbp)
	je	.L19
	.loc 1 103 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax
	movq	16(%rax), %rax
	testq	%rax, %rax
	jne	.L20
.L19:
	.loc 1 104 0 is_stmt 1
	leaq	.LC3(%rip), %rdi
	call	puts@PLT
	.loc 1 105 0
	movl	$1, %edi
	call	exit@PLT
.L20:
	.loc 1 108 0 discriminator 2
	movq	-24(%rbp), %rax
	movq	16(%rax), %rax
	movl	-40(%rbp), %edx
	movslq	%edx, %rdx
	salq	$3, %rdx
	addq	%rax, %rdx
	movq	-8(%rbp), %rax
	movq	%rax, (%rdx)
	.loc 1 113 0 discriminator 2
	movq	-8(%rbp), %rax
	movl	40(%rax), %eax
	leal	1(%rax), %edx
	movq	-8(%rbp), %rax
	movl	%edx, 40(%rax)
	.loc 1 72 0 discriminator 2
	addl	$1, -40(%rbp)
.L10:
	.loc 1 72 0 is_stmt 0 discriminator 1
	movl	-40(%rbp), %eax
	cmpl	-72(%rbp), %eax
	jl	.L18
.LBE2:
	.loc 1 61 0 is_stmt 1 discriminator 2
	movq	-24(%rbp), %rax
	movq	8(%rax), %rax
	movq	%rax, -24(%rbp)
.L8:
	.loc 1 61 0 is_stmt 0 discriminator 1
	cmpq	$0, -24(%rbp)
	jne	.L21
	.loc 1 116 0 is_stmt 1
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE2:
	.size	make_neighbors, .-make_neighbors
	.section	.rodata
	.align 8
.LC4:
	.string	"Help! no from count (from_count=%d) \n"
	.text
	.globl	update_from_coeffs
	.type	update_from_coeffs, @function
update_from_coeffs:
.LFB3:
	.loc 1 118 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	.loc 1 122 0
	movq	-24(%rbp), %rax
	movq	%rax, -8(%rbp)
	jmp	.L24
.L27:
.LBB4:
	.loc 1 123 0
	movq	-8(%rbp), %rax
	movl	40(%rax), %eax
	movl	%eax, -12(%rbp)
	.loc 1 125 0
	cmpl	$0, -12(%rbp)
	jg	.L25
	.loc 1 126 0
	movl	-12(%rbp), %eax
	movl	%eax, %esi
	leaq	.LC4(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	.loc 1 127 0
	movl	$160, %edi
	call	malloc@PLT
	movq	%rax, %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, 24(%rax)
	.loc 1 128 0
	movl	$160, %edi
	call	malloc@PLT
	movq	%rax, %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, 32(%rax)
	.loc 1 129 0
	movq	-8(%rbp), %rax
	movl	$0, 44(%rax)
	jmp	.L26
.L25:
	.loc 1 131 0
	movl	-12(%rbp), %eax
	cltq
	salq	$3, %rax
	movq	%rax, %rdi
	call	malloc@PLT
	movq	%rax, %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, 24(%rax)
	.loc 1 132 0
	movl	-12(%rbp), %eax
	cltq
	salq	$3, %rax
	movq	%rax, %rdi
	call	malloc@PLT
	movq	%rax, %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, 32(%rax)
	.loc 1 133 0
	movq	-8(%rbp), %rax
	movl	$0, 44(%rax)
.L26:
.LBE4:
	.loc 1 122 0 discriminator 2
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	%rax, -8(%rbp)
.L24:
	.loc 1 122 0 is_stmt 0 discriminator 1
	cmpq	$0, -8(%rbp)
	jne	.L27
	.loc 1 136 0 is_stmt 1
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3:
	.size	update_from_coeffs, .-update_from_coeffs
	.section	.rodata
.LC5:
	.string	"Help!!"
	.text
	.globl	fill_from_fields
	.type	fill_from_fields, @function
fill_from_fields:
.LFB4:
	.loc 1 138 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	pushq	%rbx
	subq	$72, %rsp
	.cfi_offset 3, -24
	movq	%rdi, -72(%rbp)
	movl	%esi, -76(%rbp)
	.loc 1 140 0
	movq	-72(%rbp), %rax
	movq	%rax, -48(%rbp)
	jmp	.L29
.L34:
.LBB5:
	.loc 1 143 0
	movl	$0, -60(%rbp)
	jmp	.L30
.L33:
.LBB6:
	.loc 1 145 0
	movq	-48(%rbp), %rax
	movq	16(%rax), %rax
	movl	-60(%rbp), %edx
	movslq	%edx, %rdx
	salq	$3, %rdx
	addq	%rdx, %rax
	movq	(%rax), %rax
	movq	%rax, -32(%rbp)
	.loc 1 147 0
	movq	-48(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, -24(%rbp)
	.loc 1 149 0
	cmpq	$0, -32(%rbp)
	jne	.L31
	.loc 1 149 0 is_stmt 0 discriminator 1
	leaq	.LC5(%rip), %rdi
	call	puts@PLT
.L31:
	.loc 1 150 0 is_stmt 1
	movq	-32(%rbp), %rax
	movl	44(%rax), %eax
	leal	1(%rax), %ecx
	movq	-32(%rbp), %rdx
	movl	%ecx, 44(%rdx)
	movl	%eax, -56(%rbp)
	.loc 1 151 0
	movq	-32(%rbp), %rax
	movq	24(%rax), %rax
	movq	%rax, -40(%rbp)
	.loc 1 152 0
	movq	-32(%rbp), %rax
	movl	40(%rax), %eax
	movl	%eax, -52(%rbp)
	.loc 1 153 0
	cmpq	$0, -40(%rbp)
	jne	.L32
	.loc 1 156 0
	movq	-32(%rbp), %rax
	movq	24(%rax), %rax
	movq	%rax, -40(%rbp)
.L32:
	.loc 1 160 0 discriminator 2
	movl	-56(%rbp), %eax
	cltq
	leaq	0(,%rax,8), %rdx
	movq	-40(%rbp), %rax
	addq	%rax, %rdx
	movq	-24(%rbp), %rax
	movq	%rax, (%rdx)
	.loc 1 163 0 discriminator 2
	movq	-32(%rbp), %rax
	movq	32(%rax), %rax
	movl	-56(%rbp), %edx
	movslq	%edx, %rdx
	salq	$3, %rdx
	leaq	(%rax,%rdx), %rbx
	call	gen_uniform_double@PLT
	movq	%xmm0, %rax
	movq	%rax, (%rbx)
.LBE6:
	.loc 1 143 0 discriminator 2
	addl	$1, -60(%rbp)
.L30:
	.loc 1 143 0 is_stmt 0 discriminator 1
	movl	-60(%rbp), %eax
	cmpl	-76(%rbp), %eax
	jl	.L33
.LBE5:
	.loc 1 140 0 is_stmt 1 discriminator 2
	movq	-48(%rbp), %rax
	movq	8(%rax), %rax
	movq	%rax, -48(%rbp)
.L29:
	.loc 1 140 0 is_stmt 0 discriminator 1
	cmpq	$0, -48(%rbp)
	jne	.L34
	.loc 1 166 0 is_stmt 1
	nop
	addq	$72, %rsp
	popq	%rbx
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE4:
	.size	fill_from_fields, .-fill_from_fields
	.globl	localize_local
	.type	localize_local, @function
localize_local:
.LFB5:
	.loc 1 168 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	movq	%rdi, -24(%rbp)
	.loc 1 171 0
	movq	-24(%rbp), %rax
	movq	%rax, -8(%rbp)
	jmp	.L36
.L37:
	.loc 1 172 0 discriminator 3
	movq	-8(%rbp), %rax
	movq	32(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, 32(%rax)
	.loc 1 173 0 discriminator 3
	movq	-8(%rbp), %rax
	movq	24(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, 24(%rax)
	.loc 1 174 0 discriminator 3
	movq	-8(%rbp), %rax
	movq	(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	.loc 1 171 0 discriminator 3
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	%rax, -8(%rbp)
.L36:
	.loc 1 171 0 is_stmt 0 discriminator 1
	cmpq	$0, -8(%rbp)
	jne	.L37
	.loc 1 176 0 is_stmt 1
	nop
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE5:
	.size	localize_local, .-localize_local
	.globl	make_tables
	.type	make_tables, @function
make_tables:
.LFB6:
	.loc 1 179 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$64, %rsp
	movq	%rdi, -56(%rbp)
	movl	%esi, -60(%rbp)
	.loc 1 182 0
	movl	$0, -36(%rbp)
	.loc 1 184 0
	movl	-60(%rbp), %eax
	imull	$793, %eax, %eax
	movl	%eax, %edi
	call	init_random@PLT
	.loc 1 185 0
	movl	n_nodes(%rip), %eax
	cltq
	salq	$3, %rax
	movq	%rax, %rdi
	call	malloc@PLT
	movq	%rax, -32(%rbp)
	.loc 1 186 0
	movl	n_nodes(%rip), %eax
	movl	-36(%rbp), %edx
	movl	%edx, %esi
	movl	%eax, %edi
	call	make_table
	movq	%rax, -24(%rbp)
	.loc 1 187 0
	movl	n_nodes(%rip), %edx
	movl	-36(%rbp), %ecx
	movq	-32(%rbp), %rsi
	movq	-24(%rbp), %rax
	movq	%rax, %rdi
	call	fill_table
	.loc 1 188 0
	movl	n_nodes(%rip), %eax
	cltq
	salq	$3, %rax
	movq	%rax, %rdi
	call	malloc@PLT
	movq	%rax, -16(%rbp)
	.loc 1 189 0
	movl	n_nodes(%rip), %eax
	movl	-36(%rbp), %edx
	movl	%edx, %esi
	movl	%eax, %edi
	call	make_table
	movq	%rax, -8(%rbp)
	.loc 1 190 0
	movl	n_nodes(%rip), %edx
	movl	-36(%rbp), %ecx
	movq	-16(%rbp), %rsi
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	call	fill_table
	.loc 1 194 0
	movq	-56(%rbp), %rax
	movl	-60(%rbp), %edx
	movslq	%edx, %rdx
	movq	-8(%rbp), %rcx
	movq	%rcx, (%rax,%rdx,8)
	.loc 1 195 0
	movq	-56(%rbp), %rax
	movl	-60(%rbp), %edx
	movslq	%edx, %rdx
	movq	-24(%rbp), %rcx
	movq	%rcx, 8(%rax,%rdx,8)
	.loc 1 196 0
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE6:
	.size	make_tables, .-make_tables
	.globl	make_all_neighbors
	.type	make_all_neighbors, @function
make_all_neighbors:
.LFB7:
	.loc 1 198 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movl	%esi, -44(%rbp)
	.loc 1 203 0
	movl	-44(%rbp), %eax
	imull	$39, %eax, %eax
	movl	%eax, %edi
	call	init_random@PLT
	.loc 1 205 0
	movq	-40(%rbp), %rax
	movl	-44(%rbp), %edx
	movslq	%edx, %rdx
	movq	8(%rax,%rdx,8), %rax
	movq	%rax, -24(%rbp)
	.loc 1 206 0
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	.loc 1 207 0
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, -8(%rbp)
	.loc 1 208 0
	movl	local_p(%rip), %edi
	movl	d_nodes(%rip), %ecx
	movl	n_nodes(%rip), %edx
	movl	-44(%rbp), %r8d
	movq	-16(%rbp), %rsi
	movq	-8(%rbp), %rax
	movl	%r8d, %r9d
	movl	%edi, %r8d
	movq	%rax, %rdi
	call	make_neighbors
	.loc 1 212 0
	movq	-40(%rbp), %rax
	movl	-44(%rbp), %edx
	movslq	%edx, %rdx
	movq	(%rax,%rdx,8), %rax
	movq	%rax, -24(%rbp)
	.loc 1 213 0
	movq	-40(%rbp), %rax
	addq	$8, %rax
	movq	%rax, -16(%rbp)
	.loc 1 214 0
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, -8(%rbp)
	.loc 1 215 0
	movl	local_p(%rip), %edi
	movl	d_nodes(%rip), %ecx
	movl	n_nodes(%rip), %edx
	movl	-44(%rbp), %r8d
	movq	-16(%rbp), %rsi
	movq	-8(%rbp), %rax
	movl	%r8d, %r9d
	movl	%edi, %r8d
	movq	%rax, %rdi
	call	make_neighbors
	.loc 1 218 0
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE7:
	.size	make_all_neighbors, .-make_all_neighbors
	.globl	update_all_from_coeffs
	.type	update_all_from_coeffs, @function
update_all_from_coeffs:
.LFB8:
	.loc 1 221 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	.loc 1 226 0
	movq	-24(%rbp), %rax
	movl	-28(%rbp), %edx
	movslq	%edx, %rdx
	movq	8(%rax,%rdx,8), %rax
	movq	%rax, -16(%rbp)
	.loc 1 228 0
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, -8(%rbp)
	.loc 1 229 0
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	call	update_from_coeffs
	.loc 1 231 0
	movq	-24(%rbp), %rax
	movl	-28(%rbp), %edx
	movslq	%edx, %rdx
	movq	(%rax,%rdx,8), %rax
	movq	%rax, -16(%rbp)
	.loc 1 232 0
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, -8(%rbp)
	.loc 1 233 0
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	call	update_from_coeffs
	.loc 1 234 0
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE8:
	.size	update_all_from_coeffs, .-update_all_from_coeffs
	.globl	fill_all_from_fields
	.type	fill_all_from_fields, @function
fill_all_from_fields:
.LFB9:
	.loc 1 237 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	.loc 1 241 0
	movl	-28(%rbp), %edx
	movl	%edx, %eax
	sall	$4, %eax
	addl	%edx, %eax
	movl	%eax, %edi
	call	init_random@PLT
	.loc 1 242 0
	movq	-24(%rbp), %rax
	movl	-28(%rbp), %edx
	movslq	%edx, %rdx
	movq	8(%rax,%rdx,8), %rax
	movq	%rax, -16(%rbp)
	.loc 1 243 0
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, -8(%rbp)
	.loc 1 244 0
	movl	d_nodes(%rip), %edx
	movq	-8(%rbp), %rax
	movl	%edx, %esi
	movq	%rax, %rdi
	call	fill_from_fields
	.loc 1 246 0
	movq	-24(%rbp), %rax
	movl	-28(%rbp), %edx
	movslq	%edx, %rdx
	movq	(%rax,%rdx,8), %rax
	movq	%rax, -16(%rbp)
	.loc 1 247 0
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, -8(%rbp)
	.loc 1 248 0
	movl	d_nodes(%rip), %edx
	movq	-8(%rbp), %rax
	movl	%edx, %esi
	movq	%rax, %rdi
	call	fill_from_fields
	.loc 1 249 0
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE9:
	.size	fill_all_from_fields, .-fill_all_from_fields
	.globl	localize
	.type	localize, @function
localize:
.LFB10:
	.loc 1 252 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	.loc 1 256 0
	movq	-24(%rbp), %rax
	movl	-28(%rbp), %edx
	movslq	%edx, %rdx
	movq	8(%rax,%rdx,8), %rax
	movq	%rax, -16(%rbp)
	.loc 1 257 0
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, -8(%rbp)
	.loc 1 258 0
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	call	localize_local
	.loc 1 260 0
	movq	-24(%rbp), %rax
	movl	-28(%rbp), %edx
	movslq	%edx, %rdx
	movq	(%rax,%rdx,8), %rax
	movq	%rax, -16(%rbp)
	.loc 1 261 0
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, -8(%rbp)
	.loc 1 262 0
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	call	localize_local
	.loc 1 263 0
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE10:
	.size	localize, .-localize
	.globl	clear_nummiss
	.type	clear_nummiss, @function
clear_nummiss:
.LFB11:
	.loc 1 266 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	movq	%rdi, -8(%rbp)
	movl	%esi, -12(%rbp)
	.loc 1 267 0
	movl	$0, NumMisses(%rip)
	.loc 1 268 0
	nop
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE11:
	.size	clear_nummiss, .-clear_nummiss
	.globl	do_all
	.type	do_all, @function
do_all:
.LFB12:
	.loc 1 271 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movl	%esi, -12(%rbp)
	movl	%edx, -16(%rbp)
	movq	%rcx, -24(%rbp)
	movl	%r8d, -28(%rbp)
	.loc 1 273 0
	cmpl	$1, -16(%rbp)
	jle	.L45
	.loc 1 274 0
	movl	-16(%rbp), %eax
	movl	%eax, %edx
	shrl	$31, %edx
	addl	%edx, %eax
	sarl	%eax
	movl	%eax, %edi
	movl	-16(%rbp), %eax
	movl	%eax, %edx
	shrl	$31, %edx
	addl	%edx, %eax
	sarl	%eax
	movl	%eax, %edx
	movl	-12(%rbp), %eax
	leal	(%rdx,%rax), %esi
	movl	-28(%rbp), %ecx
	movq	-24(%rbp), %rdx
	movq	-8(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rdx, %rcx
	movl	%edi, %edx
	movq	%rax, %rdi
	call	do_all
	.loc 1 275 0
	movl	-16(%rbp), %eax
	movl	%eax, %edx
	shrl	$31, %edx
	addl	%edx, %eax
	sarl	%eax
	movl	%eax, %edi
	movl	-28(%rbp), %ecx
	movq	-24(%rbp), %rdx
	movl	-12(%rbp), %esi
	movq	-8(%rbp), %rax
	movl	%ecx, %r8d
	movq	%rdx, %rcx
	movl	%edi, %edx
	movq	%rax, %rdi
	call	do_all
	.loc 1 279 0
	jmp	.L47
.L45:
	.loc 1 277 0
	movl	-12(%rbp), %ecx
	movq	-8(%rbp), %rdx
	movq	-24(%rbp), %rax
	movl	%ecx, %esi
	movq	%rdx, %rdi
	call	*%rax
.LVL0:
.L47:
	.loc 1 279 0
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE12:
	.size	do_all, .-do_all
	.section	.rodata
.LC6:
	.string	"making tables "
.LC7:
	.string	"making neighbors"
.LC8:
	.string	"updating from and coeffs"
.LC9:
	.string	"filling from fields"
.LC10:
	.string	"localizing coeffs, from_nodes"
.LC11:
	.string	"cleanup for return now"
.LC12:
	.string	"Clearing NumMisses"
.LC13:
	.string	"Returning"
	.text
	.globl	initialize_graph
	.type	initialize_graph, @function
initialize_graph:
.LFB13:
	.loc 1 281 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$64, %rsp
	.loc 1 287 0
	movl	$16, %edi
	call	malloc@PLT
	movq	%rax, -40(%rbp)
	.loc 1 288 0
	movl	$16, %edi
	call	malloc@PLT
	movq	%rax, -32(%rbp)
	.loc 1 290 0
	movl	NumNodes(%rip), %esi
	movl	$1, %eax
	cltd
	idivl	%esi
	movl	%eax, -48(%rbp)
	.loc 1 292 0
	leaq	.LC6(%rip), %rdi
	call	puts@PLT
	.loc 1 293 0
	movl	-48(%rbp), %edx
	movq	-40(%rbp), %rax
	movl	%edx, %r8d
	leaq	make_tables(%rip), %rcx
	movl	$1, %edx
	movl	$0, %esi
	movq	%rax, %rdi
	call	do_all
	.loc 1 297 0
	leaq	.LC7(%rip), %rdi
	call	puts@PLT
	.loc 1 299 0
	movl	-48(%rbp), %edx
	movq	-40(%rbp), %rax
	movl	%edx, %r8d
	leaq	make_all_neighbors(%rip), %rcx
	movl	$1, %edx
	movl	$0, %esi
	movq	%rax, %rdi
	call	do_all
	.loc 1 302 0
	leaq	.LC8(%rip), %rdi
	call	puts@PLT
	.loc 1 303 0
	movl	-48(%rbp), %edx
	movq	-40(%rbp), %rax
	movl	%edx, %r8d
	leaq	update_all_from_coeffs(%rip), %rcx
	movl	$1, %edx
	movl	$0, %esi
	movq	%rax, %rdi
	call	do_all
	.loc 1 306 0
	leaq	.LC9(%rip), %rdi
	call	puts@PLT
	.loc 1 307 0
	movl	-48(%rbp), %edx
	movq	-40(%rbp), %rax
	movl	%edx, %r8d
	leaq	fill_all_from_fields(%rip), %rcx
	movl	$1, %edx
	movl	$0, %esi
	movq	%rax, %rdi
	call	do_all
	.loc 1 309 0
	leaq	.LC10(%rip), %rdi
	call	puts@PLT
	.loc 1 310 0
	movl	-48(%rbp), %edx
	movq	-40(%rbp), %rax
	movl	%edx, %r8d
	leaq	localize(%rip), %rcx
	movl	$1, %edx
	movl	$0, %esi
	movq	%rax, %rdi
	call	do_all
	.loc 1 312 0
	movl	NumNodes(%rip), %esi
	movl	$1, %eax
	cltd
	idivl	%esi
	movl	%eax, -44(%rbp)
	.loc 1 314 0
	leaq	.LC11(%rip), %rdi
	call	puts@PLT
	.loc 1 315 0
	movl	$0, -56(%rbp)
	jmp	.L49
.L52:
.LBB7:
	.loc 1 316 0
	movl	-56(%rbp), %eax
	imull	-44(%rbp), %eax
	movl	%eax, %edx
	movq	-40(%rbp), %rax
	movslq	%edx, %rdx
	movq	(%rax,%rdx,8), %rax
	movq	%rax, -24(%rbp)
	.loc 1 317 0
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, -16(%rbp)
	.loc 1 319 0
	movq	-32(%rbp), %rax
	movl	-56(%rbp), %edx
	movslq	%edx, %rdx
	movq	-16(%rbp), %rcx
	movq	%rcx, (%rax,%rdx,8)
	.loc 1 321 0
	movl	-56(%rbp), %eax
	imull	-44(%rbp), %eax
	movl	%eax, %edx
	movq	-40(%rbp), %rax
	movslq	%edx, %rdx
	movq	8(%rax,%rdx,8), %rax
	movq	%rax, -24(%rbp)
	.loc 1 322 0
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, -16(%rbp)
	.loc 1 323 0
	movq	-32(%rbp), %rax
	movl	-56(%rbp), %edx
	movslq	%edx, %rdx
	movq	-16(%rbp), %rcx
	movq	%rcx, 8(%rax,%rdx,8)
	.loc 1 324 0
	movl	$1, -52(%rbp)
	jmp	.L50
.L51:
.LBB8:
	.loc 1 327 0 discriminator 3
	movl	-56(%rbp), %eax
	imull	-44(%rbp), %eax
	movl	%eax, %edx
	movl	-52(%rbp), %eax
	addl	%edx, %eax
	leal	-1(%rax), %edx
	movq	-40(%rbp), %rax
	movslq	%edx, %rdx
	movq	(%rax,%rdx,8), %rax
	movq	%rax, -24(%rbp)
	.loc 1 328 0 discriminator 3
	movl	n_nodes(%rip), %eax
	cltq
	salq	$3, %rax
	leaq	-8(%rax), %rdx
	movq	-24(%rbp), %rax
	addq	%rdx, %rax
	movq	(%rax), %rax
	movq	%rax, -8(%rbp)
	.loc 1 329 0 discriminator 3
	movl	-56(%rbp), %eax
	imull	-44(%rbp), %eax
	movl	%eax, %edx
	movl	-52(%rbp), %eax
	addl	%eax, %edx
	movq	-40(%rbp), %rax
	movslq	%edx, %rdx
	movq	(%rax,%rdx,8), %rax
	movq	%rax, -24(%rbp)
	.loc 1 330 0 discriminator 3
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, -16(%rbp)
	.loc 1 331 0 discriminator 3
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, 8(%rax)
	.loc 1 333 0 discriminator 3
	movl	-56(%rbp), %eax
	imull	-44(%rbp), %eax
	movl	%eax, %edx
	movl	-52(%rbp), %eax
	addl	%edx, %eax
	leal	-1(%rax), %edx
	movq	-40(%rbp), %rax
	movslq	%edx, %rdx
	movq	8(%rax,%rdx,8), %rax
	movq	%rax, -24(%rbp)
	.loc 1 334 0 discriminator 3
	movl	n_nodes(%rip), %eax
	cltq
	salq	$3, %rax
	leaq	-8(%rax), %rdx
	movq	-24(%rbp), %rax
	addq	%rdx, %rax
	movq	(%rax), %rax
	movq	%rax, -8(%rbp)
	.loc 1 335 0 discriminator 3
	movl	-56(%rbp), %eax
	imull	-44(%rbp), %eax
	movl	%eax, %edx
	movl	-52(%rbp), %eax
	addl	%eax, %edx
	movq	-40(%rbp), %rax
	movslq	%edx, %rdx
	movq	8(%rax,%rdx,8), %rax
	movq	%rax, -24(%rbp)
	.loc 1 336 0 discriminator 3
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, -16(%rbp)
	.loc 1 337 0 discriminator 3
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, 8(%rax)
.LBE8:
	.loc 1 324 0 discriminator 3
	addl	$1, -52(%rbp)
.L50:
	.loc 1 324 0 is_stmt 0 discriminator 1
	movl	-52(%rbp), %eax
	cmpl	-44(%rbp), %eax
	jl	.L51
.LBE7:
	.loc 1 315 0 is_stmt 1 discriminator 2
	addl	$1, -56(%rbp)
.L49:
	.loc 1 315 0 is_stmt 0 discriminator 1
	movl	NumNodes(%rip), %eax
	cmpl	%eax, -56(%rbp)
	jl	.L52
	.loc 1 341 0 is_stmt 1
	leaq	.LC12(%rip), %rdi
	call	puts@PLT
	.loc 1 342 0
	movl	-48(%rbp), %edx
	movq	-40(%rbp), %rax
	movl	%edx, %r8d
	leaq	clear_nummiss(%rip), %rcx
	movl	$1, %edx
	movl	$0, %esi
	movq	%rax, %rdi
	call	do_all
	.loc 1 343 0
	leaq	.LC13(%rip), %rdi
	call	puts@PLT
	.loc 1 345 0
	movq	-32(%rbp), %rax
	.loc 1 346 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE13:
	.size	initialize_graph, .-initialize_graph
.Letext0:
	.file 2 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h"
	.file 3 "/usr/include/x86_64-linux-gnu/bits/types.h"
	.file 4 "/usr/include/x86_64-linux-gnu/bits/libio.h"
	.file 5 "/usr/include/stdio.h"
	.file 6 "../olden/em3d/src/em3d.h"
	.section	.debug_info,"",@progbits
.Ldebug_info0:
	.long	0xb09
	.value	0x4
	.long	.Ldebug_abbrev0
	.byte	0x8
	.uleb128 0x1
	.long	.LASF118
	.byte	0xc
	.long	.LASF119
	.long	.LASF120
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.long	.Ldebug_line0
	.uleb128 0x2
	.long	.LASF7
	.byte	0x2
	.byte	0xd8
	.long	0x38
	.uleb128 0x3
	.byte	0x8
	.byte	0x7
	.long	.LASF0
	.uleb128 0x3
	.byte	0x1
	.byte	0x8
	.long	.LASF1
	.uleb128 0x3
	.byte	0x2
	.byte	0x7
	.long	.LASF2
	.uleb128 0x3
	.byte	0x4
	.byte	0x7
	.long	.LASF3
	.uleb128 0x3
	.byte	0x1
	.byte	0x6
	.long	.LASF4
	.uleb128 0x3
	.byte	0x2
	.byte	0x5
	.long	.LASF5
	.uleb128 0x4
	.byte	0x4
	.byte	0x5
	.string	"int"
	.uleb128 0x3
	.byte	0x8
	.byte	0x5
	.long	.LASF6
	.uleb128 0x2
	.long	.LASF8
	.byte	0x3
	.byte	0x8c
	.long	0x69
	.uleb128 0x2
	.long	.LASF9
	.byte	0x3
	.byte	0x8d
	.long	0x69
	.uleb128 0x5
	.byte	0x8
	.uleb128 0x6
	.byte	0x8
	.long	0x8e
	.uleb128 0x3
	.byte	0x1
	.byte	0x6
	.long	.LASF10
	.uleb128 0x7
	.long	.LASF40
	.byte	0xd8
	.byte	0x4
	.byte	0xf5
	.long	0x215
	.uleb128 0x8
	.long	.LASF11
	.byte	0x4
	.byte	0xf6
	.long	0x62
	.byte	0
	.uleb128 0x8
	.long	.LASF12
	.byte	0x4
	.byte	0xfb
	.long	0x88
	.byte	0x8
	.uleb128 0x8
	.long	.LASF13
	.byte	0x4
	.byte	0xfc
	.long	0x88
	.byte	0x10
	.uleb128 0x8
	.long	.LASF14
	.byte	0x4
	.byte	0xfd
	.long	0x88
	.byte	0x18
	.uleb128 0x8
	.long	.LASF15
	.byte	0x4
	.byte	0xfe
	.long	0x88
	.byte	0x20
	.uleb128 0x8
	.long	.LASF16
	.byte	0x4
	.byte	0xff
	.long	0x88
	.byte	0x28
	.uleb128 0x9
	.long	.LASF17
	.byte	0x4
	.value	0x100
	.long	0x88
	.byte	0x30
	.uleb128 0x9
	.long	.LASF18
	.byte	0x4
	.value	0x101
	.long	0x88
	.byte	0x38
	.uleb128 0x9
	.long	.LASF19
	.byte	0x4
	.value	0x102
	.long	0x88
	.byte	0x40
	.uleb128 0x9
	.long	.LASF20
	.byte	0x4
	.value	0x104
	.long	0x88
	.byte	0x48
	.uleb128 0x9
	.long	.LASF21
	.byte	0x4
	.value	0x105
	.long	0x88
	.byte	0x50
	.uleb128 0x9
	.long	.LASF22
	.byte	0x4
	.value	0x106
	.long	0x88
	.byte	0x58
	.uleb128 0x9
	.long	.LASF23
	.byte	0x4
	.value	0x108
	.long	0x24d
	.byte	0x60
	.uleb128 0x9
	.long	.LASF24
	.byte	0x4
	.value	0x10a
	.long	0x253
	.byte	0x68
	.uleb128 0x9
	.long	.LASF25
	.byte	0x4
	.value	0x10c
	.long	0x62
	.byte	0x70
	.uleb128 0x9
	.long	.LASF26
	.byte	0x4
	.value	0x110
	.long	0x62
	.byte	0x74
	.uleb128 0x9
	.long	.LASF27
	.byte	0x4
	.value	0x112
	.long	0x70
	.byte	0x78
	.uleb128 0x9
	.long	.LASF28
	.byte	0x4
	.value	0x116
	.long	0x46
	.byte	0x80
	.uleb128 0x9
	.long	.LASF29
	.byte	0x4
	.value	0x117
	.long	0x54
	.byte	0x82
	.uleb128 0x9
	.long	.LASF30
	.byte	0x4
	.value	0x118
	.long	0x259
	.byte	0x83
	.uleb128 0x9
	.long	.LASF31
	.byte	0x4
	.value	0x11c
	.long	0x269
	.byte	0x88
	.uleb128 0x9
	.long	.LASF32
	.byte	0x4
	.value	0x125
	.long	0x7b
	.byte	0x90
	.uleb128 0x9
	.long	.LASF33
	.byte	0x4
	.value	0x12d
	.long	0x86
	.byte	0x98
	.uleb128 0x9
	.long	.LASF34
	.byte	0x4
	.value	0x12e
	.long	0x86
	.byte	0xa0
	.uleb128 0x9
	.long	.LASF35
	.byte	0x4
	.value	0x12f
	.long	0x86
	.byte	0xa8
	.uleb128 0x9
	.long	.LASF36
	.byte	0x4
	.value	0x130
	.long	0x86
	.byte	0xb0
	.uleb128 0x9
	.long	.LASF37
	.byte	0x4
	.value	0x132
	.long	0x2d
	.byte	0xb8
	.uleb128 0x9
	.long	.LASF38
	.byte	0x4
	.value	0x133
	.long	0x62
	.byte	0xc0
	.uleb128 0x9
	.long	.LASF39
	.byte	0x4
	.value	0x135
	.long	0x26f
	.byte	0xc4
	.byte	0
	.uleb128 0xa
	.long	.LASF121
	.byte	0x4
	.byte	0x9a
	.uleb128 0x7
	.long	.LASF41
	.byte	0x18
	.byte	0x4
	.byte	0xa0
	.long	0x24d
	.uleb128 0x8
	.long	.LASF42
	.byte	0x4
	.byte	0xa1
	.long	0x24d
	.byte	0
	.uleb128 0x8
	.long	.LASF43
	.byte	0x4
	.byte	0xa2
	.long	0x253
	.byte	0x8
	.uleb128 0x8
	.long	.LASF44
	.byte	0x4
	.byte	0xa6
	.long	0x62
	.byte	0x10
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x21c
	.uleb128 0x6
	.byte	0x8
	.long	0x95
	.uleb128 0xb
	.long	0x8e
	.long	0x269
	.uleb128 0xc
	.long	0x38
	.byte	0
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x215
	.uleb128 0xb
	.long	0x8e
	.long	0x27f
	.uleb128 0xc
	.long	0x38
	.byte	0x13
	.byte	0
	.uleb128 0xd
	.long	.LASF122
	.uleb128 0xe
	.long	.LASF45
	.byte	0x4
	.value	0x13f
	.long	0x27f
	.uleb128 0xe
	.long	.LASF46
	.byte	0x4
	.value	0x140
	.long	0x27f
	.uleb128 0xe
	.long	.LASF47
	.byte	0x4
	.value	0x141
	.long	0x27f
	.uleb128 0xf
	.long	.LASF48
	.byte	0x5
	.byte	0x87
	.long	0x253
	.uleb128 0xf
	.long	.LASF49
	.byte	0x5
	.byte	0x88
	.long	0x253
	.uleb128 0xf
	.long	.LASF50
	.byte	0x5
	.byte	0x89
	.long	0x253
	.uleb128 0x3
	.byte	0x8
	.byte	0x5
	.long	.LASF51
	.uleb128 0xf
	.long	.LASF52
	.byte	0x6
	.byte	0x17
	.long	0x88
	.uleb128 0xf
	.long	.LASF53
	.byte	0x6
	.byte	0x18
	.long	0x88
	.uleb128 0xf
	.long	.LASF54
	.byte	0x6
	.byte	0x1a
	.long	0x62
	.uleb128 0xf
	.long	.LASF55
	.byte	0x6
	.byte	0x1b
	.long	0x62
	.uleb128 0xf
	.long	.LASF56
	.byte	0x6
	.byte	0x1c
	.long	0x62
	.uleb128 0x7
	.long	.LASF57
	.byte	0x30
	.byte	0x6
	.byte	0x21
	.long	0x368
	.uleb128 0x8
	.long	.LASF58
	.byte	0x6
	.byte	0x22
	.long	0x368
	.byte	0
	.uleb128 0x8
	.long	.LASF59
	.byte	0x6
	.byte	0x23
	.long	0x375
	.byte	0x8
	.uleb128 0x8
	.long	.LASF60
	.byte	0x6
	.byte	0x24
	.long	0x37b
	.byte	0x10
	.uleb128 0x8
	.long	.LASF61
	.byte	0x6
	.byte	0x25
	.long	0x381
	.byte	0x18
	.uleb128 0x8
	.long	.LASF62
	.byte	0x6
	.byte	0x26
	.long	0x368
	.byte	0x20
	.uleb128 0x8
	.long	.LASF63
	.byte	0x6
	.byte	0x27
	.long	0x62
	.byte	0x28
	.uleb128 0x8
	.long	.LASF64
	.byte	0x6
	.byte	0x28
	.long	0x62
	.byte	0x2c
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x36e
	.uleb128 0x3
	.byte	0x8
	.byte	0x4
	.long	.LASF65
	.uleb128 0x6
	.byte	0x8
	.long	0x307
	.uleb128 0x6
	.byte	0x8
	.long	0x375
	.uleb128 0x6
	.byte	0x8
	.long	0x368
	.uleb128 0x2
	.long	.LASF57
	.byte	0x6
	.byte	0x29
	.long	0x307
	.uleb128 0x7
	.long	.LASF66
	.byte	0x10
	.byte	0x6
	.byte	0x2b
	.long	0x3b7
	.uleb128 0x8
	.long	.LASF67
	.byte	0x6
	.byte	0x2c
	.long	0x3b7
	.byte	0
	.uleb128 0x8
	.long	.LASF68
	.byte	0x6
	.byte	0x2d
	.long	0x3b7
	.byte	0x8
	.byte	0
	.uleb128 0xb
	.long	0x3c7
	.long	0x3c7
	.uleb128 0xc
	.long	0x38
	.byte	0
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x387
	.uleb128 0x2
	.long	.LASF66
	.byte	0x6
	.byte	0x2e
	.long	0x392
	.uleb128 0x7
	.long	.LASF69
	.byte	0x10
	.byte	0x6
	.byte	0x30
	.long	0x3fd
	.uleb128 0x8
	.long	.LASF70
	.byte	0x6
	.byte	0x31
	.long	0x3fd
	.byte	0
	.uleb128 0x8
	.long	.LASF71
	.byte	0x6
	.byte	0x32
	.long	0x3fd
	.byte	0x8
	.byte	0
	.uleb128 0xb
	.long	0x40d
	.long	0x40d
	.uleb128 0xc
	.long	0x38
	.byte	0
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x3c7
	.uleb128 0x2
	.long	.LASF69
	.byte	0x6
	.byte	0x33
	.long	0x3d8
	.uleb128 0xf
	.long	.LASF72
	.byte	0x1
	.byte	0x12
	.long	0x62
	.uleb128 0x10
	.long	.LASF73
	.byte	0x1
	.byte	0x13
	.long	0x62
	.uleb128 0x9
	.byte	0x3
	.quad	NumMisses
	.uleb128 0x11
	.long	0x2e6
	.byte	0x1
	.byte	0x15
	.uleb128 0x9
	.byte	0x3
	.quad	n_nodes
	.uleb128 0x11
	.long	0x2f1
	.byte	0x1
	.byte	0x16
	.uleb128 0x9
	.byte	0x3
	.quad	d_nodes
	.uleb128 0x11
	.long	0x2fc
	.byte	0x1
	.byte	0x17
	.uleb128 0x9
	.byte	0x3
	.quad	local_p
	.uleb128 0x12
	.long	.LASF81
	.byte	0x1
	.value	0x119
	.long	0x53d
	.quad	.LFB13
	.quad	.LFE13-.LFB13
	.uleb128 0x1
	.byte	0x9c
	.long	0x53d
	.uleb128 0x13
	.long	.LASF74
	.byte	0x1
	.value	0x11a
	.long	0x543
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x13
	.long	.LASF75
	.byte	0x1
	.value	0x11b
	.long	0x53d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x14
	.string	"i"
	.byte	0x1
	.value	0x11c
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x14
	.string	"j"
	.byte	0x1
	.value	0x11c
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x13
	.long	.LASF76
	.byte	0x1
	.value	0x11c
	.long	0x62
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x13
	.long	.LASF77
	.byte	0x1
	.value	0x11d
	.long	0x62
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x15
	.quad	.LBB7
	.quad	.LBE7-.LBB7
	.uleb128 0x13
	.long	.LASF78
	.byte	0x1
	.value	0x13c
	.long	0x40d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x13
	.long	.LASF79
	.byte	0x1
	.value	0x13d
	.long	0x3c7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x15
	.quad	.LBB8
	.quad	.LBE8-.LBB8
	.uleb128 0x13
	.long	.LASF80
	.byte	0x1
	.value	0x145
	.long	0x3c7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x3cd
	.uleb128 0x6
	.byte	0x8
	.long	0x413
	.uleb128 0x16
	.long	.LASF82
	.byte	0x1
	.value	0x10e
	.quad	.LFB12
	.quad	.LFE12-.LFB12
	.uleb128 0x1
	.byte	0x9c
	.long	0x5b3
	.uleb128 0x17
	.long	.LASF74
	.byte	0x1
	.value	0x10e
	.long	0x543
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x17
	.long	.LASF83
	.byte	0x1
	.value	0x10e
	.long	0x62
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x17
	.long	.LASF84
	.byte	0x1
	.value	0x10e
	.long	0x62
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x17
	.long	.LASF85
	.byte	0x1
	.value	0x10f
	.long	0x5c3
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x17
	.long	.LASF77
	.byte	0x1
	.value	0x10f
	.long	0x62
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.byte	0
	.uleb128 0x18
	.long	0x5c3
	.uleb128 0x19
	.long	0x543
	.uleb128 0x19
	.long	0x62
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x5b3
	.uleb128 0x1a
	.long	.LASF86
	.byte	0x1
	.value	0x109
	.quad	.LFB11
	.quad	.LFE11-.LFB11
	.uleb128 0x1
	.byte	0x9c
	.long	0x606
	.uleb128 0x17
	.long	.LASF74
	.byte	0x1
	.value	0x109
	.long	0x543
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x17
	.long	.LASF83
	.byte	0x1
	.value	0x109
	.long	0x62
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.uleb128 0x1b
	.long	.LASF87
	.byte	0x1
	.byte	0xfb
	.quad	.LFB10
	.quad	.LFE10-.LFB10
	.uleb128 0x1
	.byte	0x9c
	.long	0x65c
	.uleb128 0x1c
	.long	.LASF74
	.byte	0x1
	.byte	0xfb
	.long	0x543
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1c
	.long	.LASF83
	.byte	0x1
	.byte	0xfb
	.long	0x62
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1d
	.long	.LASF78
	.byte	0x1
	.byte	0xfd
	.long	0x40d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1d
	.long	.LASF88
	.byte	0x1
	.byte	0xfe
	.long	0x3c7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x1b
	.long	.LASF89
	.byte	0x1
	.byte	0xec
	.quad	.LFB9
	.quad	.LFE9-.LFB9
	.uleb128 0x1
	.byte	0x9c
	.long	0x6b2
	.uleb128 0x1c
	.long	.LASF74
	.byte	0x1
	.byte	0xec
	.long	0x543
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1c
	.long	.LASF83
	.byte	0x1
	.byte	0xec
	.long	0x62
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1d
	.long	.LASF78
	.byte	0x1
	.byte	0xee
	.long	0x40d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1d
	.long	.LASF88
	.byte	0x1
	.byte	0xef
	.long	0x3c7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x1b
	.long	.LASF90
	.byte	0x1
	.byte	0xdc
	.quad	.LFB8
	.quad	.LFE8-.LFB8
	.uleb128 0x1
	.byte	0x9c
	.long	0x708
	.uleb128 0x1c
	.long	.LASF74
	.byte	0x1
	.byte	0xdc
	.long	0x543
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1c
	.long	.LASF83
	.byte	0x1
	.byte	0xdc
	.long	0x62
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1d
	.long	.LASF78
	.byte	0x1
	.byte	0xde
	.long	0x40d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1d
	.long	.LASF88
	.byte	0x1
	.byte	0xdf
	.long	0x3c7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x1b
	.long	.LASF91
	.byte	0x1
	.byte	0xc6
	.quad	.LFB7
	.quad	.LFE7-.LFB7
	.uleb128 0x1
	.byte	0x9c
	.long	0x76c
	.uleb128 0x1c
	.long	.LASF74
	.byte	0x1
	.byte	0xc6
	.long	0x543
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x1c
	.long	.LASF83
	.byte	0x1
	.byte	0xc6
	.long	0x62
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x1d
	.long	.LASF88
	.byte	0x1
	.byte	0xc7
	.long	0x3c7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1d
	.long	.LASF78
	.byte	0x1
	.byte	0xc8
	.long	0x40d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1d
	.long	.LASF92
	.byte	0x1
	.byte	0xc9
	.long	0x76c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x40d
	.uleb128 0x1b
	.long	.LASF93
	.byte	0x1
	.byte	0xb3
	.quad	.LFB6
	.quad	.LFE6-.LFB6
	.uleb128 0x1
	.byte	0x9c
	.long	0x7f4
	.uleb128 0x1c
	.long	.LASF74
	.byte	0x1
	.byte	0xb3
	.long	0x543
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x1c
	.long	.LASF83
	.byte	0x1
	.byte	0xb3
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x1d
	.long	.LASF71
	.byte	0x1
	.byte	0xb4
	.long	0x40d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1d
	.long	.LASF70
	.byte	0x1
	.byte	0xb4
	.long	0x40d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1d
	.long	.LASF94
	.byte	0x1
	.byte	0xb5
	.long	0x368
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1d
	.long	.LASF95
	.byte	0x1
	.byte	0xb5
	.long	0x368
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1d
	.long	.LASF96
	.byte	0x1
	.byte	0xb6
	.long	0x62
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.byte	0
	.uleb128 0x1e
	.long	.LASF97
	.byte	0x1
	.byte	0xa8
	.quad	.LFB5
	.quad	.LFE5-.LFB5
	.uleb128 0x1
	.byte	0x9c
	.long	0x82e
	.uleb128 0x1c
	.long	.LASF98
	.byte	0x1
	.byte	0xa8
	.long	0x3c7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1d
	.long	.LASF99
	.byte	0x1
	.byte	0xa9
	.long	0x3c7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x1b
	.long	.LASF100
	.byte	0x1
	.byte	0x8a
	.quad	.LFB4
	.quad	.LFE4-.LFB4
	.uleb128 0x1
	.byte	0x9c
	.long	0x8f1
	.uleb128 0x1c
	.long	.LASF98
	.byte	0x1
	.byte	0x8a
	.long	0x3c7
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x1c
	.long	.LASF101
	.byte	0x1
	.byte	0x8a
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x1d
	.long	.LASF99
	.byte	0x1
	.byte	0x8b
	.long	0x3c7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x15
	.quad	.LBB5
	.quad	.LBE5-.LBB5
	.uleb128 0x1f
	.string	"j"
	.byte	0x1
	.byte	0x8d
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x15
	.quad	.LBB6
	.quad	.LBE6-.LBB6
	.uleb128 0x1d
	.long	.LASF102
	.byte	0x1
	.byte	0x90
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x1d
	.long	.LASF103
	.byte	0x1
	.byte	0x90
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x1d
	.long	.LASF104
	.byte	0x1
	.byte	0x91
	.long	0x3c7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1d
	.long	.LASF105
	.byte	0x1
	.byte	0x92
	.long	0x381
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x1d
	.long	.LASF58
	.byte	0x1
	.byte	0x93
	.long	0x368
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x1b
	.long	.LASF106
	.byte	0x1
	.byte	0x76
	.quad	.LFB3
	.quad	.LFE3-.LFB3
	.uleb128 0x1
	.byte	0x9c
	.long	0x94b
	.uleb128 0x1c
	.long	.LASF98
	.byte	0x1
	.byte	0x76
	.long	0x3c7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1d
	.long	.LASF99
	.byte	0x1
	.byte	0x77
	.long	0x3c7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x15
	.quad	.LBB4
	.quad	.LBE4-.LBB4
	.uleb128 0x1d
	.long	.LASF63
	.byte	0x1
	.byte	0x7b
	.long	0x62
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.byte	0
	.uleb128 0x1b
	.long	.LASF107
	.byte	0x1
	.byte	0x38
	.quad	.LFB2
	.quad	.LFE2-.LFB2
	.uleb128 0x1
	.byte	0x9c
	.long	0xa44
	.uleb128 0x1c
	.long	.LASF98
	.byte	0x1
	.byte	0x38
	.long	0x3c7
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x1c
	.long	.LASF74
	.byte	0x1
	.byte	0x38
	.long	0x76c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x1c
	.long	.LASF108
	.byte	0x1
	.byte	0x38
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x1c
	.long	.LASF101
	.byte	0x1
	.byte	0x39
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x1c
	.long	.LASF109
	.byte	0x1
	.byte	0x39
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x20
	.string	"id"
	.byte	0x1
	.byte	0x39
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x1d
	.long	.LASF99
	.byte	0x1
	.byte	0x3b
	.long	0x3c7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x15
	.quad	.LBB2
	.quad	.LBE2-.LBB2
	.uleb128 0x1d
	.long	.LASF104
	.byte	0x1
	.byte	0x3e
	.long	0x3c7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.string	"j"
	.byte	0x1
	.byte	0x3f
	.long	0x62
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x1f
	.string	"k"
	.byte	0x1
	.byte	0x3f
	.long	0x62
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x1d
	.long	.LASF110
	.byte	0x1
	.byte	0x40
	.long	0x62
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x15
	.quad	.LBB3
	.quad	.LBE3-.LBB3
	.uleb128 0x1d
	.long	.LASF78
	.byte	0x1
	.byte	0x4a
	.long	0x40d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1d
	.long	.LASF111
	.byte	0x1
	.byte	0x4b
	.long	0x62
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x1b
	.long	.LASF112
	.byte	0x1
	.byte	0x20
	.quad	.LFB1
	.quad	.LFE1-.LFB1
	.uleb128 0x1
	.byte	0x9c
	.long	0xac4
	.uleb128 0x1c
	.long	.LASF113
	.byte	0x1
	.byte	0x20
	.long	0x40d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x1c
	.long	.LASF114
	.byte	0x1
	.byte	0x20
	.long	0x368
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x1c
	.long	.LASF115
	.byte	0x1
	.byte	0x20
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x1c
	.long	.LASF96
	.byte	0x1
	.byte	0x20
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x1d
	.long	.LASF99
	.byte	0x1
	.byte	0x22
	.long	0x3c7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1d
	.long	.LASF116
	.byte	0x1
	.byte	0x22
	.long	0x3c7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1f
	.string	"i"
	.byte	0x1
	.byte	0x23
	.long	0x62
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.uleb128 0x21
	.long	.LASF117
	.byte	0x1
	.byte	0x19
	.long	0x40d
	.quad	.LFB0
	.quad	.LFE0-.LFB0
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x1c
	.long	.LASF115
	.byte	0x1
	.byte	0x19
	.long	0x62
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1c
	.long	.LASF96
	.byte	0x1
	.byte	0x19
	.long	0x62
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1d
	.long	.LASF75
	.byte	0x1
	.byte	0x1a
	.long	0x40d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.section	.debug_abbrev,"",@progbits
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0xe
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1b
	.uleb128 0xe
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x10
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0x13
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xf
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x10
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x11
	.uleb128 0x34
	.byte	0
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x12
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x13
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x14
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x15
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.byte	0
	.byte	0
	.uleb128 0x16
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x17
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x18
	.uleb128 0x15
	.byte	0x1
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x19
	.uleb128 0x5
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1a
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1b
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1c
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x1d
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x1e
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1f
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x20
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x21
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_aranges,"",@progbits
	.long	0x2c
	.value	0x2
	.long	.Ldebug_info0
	.byte	0x8
	.byte	0
	.value	0
	.value	0
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.quad	0
	.quad	0
	.section	.debug_line,"",@progbits
.Ldebug_line0:
	.section	.debug_str,"MS",@progbits,1
.LASF8:
	.string	"__off_t"
.LASF102:
	.string	"count"
.LASF69:
	.string	"table_t"
.LASF12:
	.string	"_IO_read_ptr"
.LASF91:
	.string	"make_all_neighbors"
.LASF24:
	.string	"_chain"
.LASF107:
	.string	"make_neighbors"
.LASF86:
	.string	"clear_nummiss"
.LASF7:
	.string	"size_t"
.LASF30:
	.string	"_shortbuf"
.LASF90:
	.string	"update_all_from_coeffs"
.LASF118:
	.string	"GNU C11 7.5.0 -mtune=generic -march=x86-64 -g -fstack-protector-strong"
.LASF87:
	.string	"localize"
.LASF101:
	.string	"degree"
.LASF56:
	.string	"local_p"
.LASF80:
	.string	"local_node_l"
.LASF47:
	.string	"_IO_2_1_stderr_"
.LASF18:
	.string	"_IO_buf_base"
.LASF79:
	.string	"local_node_r"
.LASF88:
	.string	"first_node"
.LASF110:
	.string	"dest_proc"
.LASF55:
	.string	"d_nodes"
.LASF92:
	.string	"local_table_array"
.LASF106:
	.string	"update_from_coeffs"
.LASF59:
	.string	"next"
.LASF53:
	.string	"max_ptr"
.LASF120:
	.string	"/home/leonardo/Documents/Maestria/Tesis/sodden/build"
.LASF96:
	.string	"procname"
.LASF51:
	.string	"long long int"
.LASF4:
	.string	"signed char"
.LASF115:
	.string	"size"
.LASF60:
	.string	"to_nodes"
.LASF68:
	.string	"h_nodes"
.LASF25:
	.string	"_fileno"
.LASF13:
	.string	"_IO_read_end"
.LASF70:
	.string	"e_table"
.LASF97:
	.string	"localize_local"
.LASF6:
	.string	"long int"
.LASF116:
	.string	"prev_node"
.LASF11:
	.string	"_flags"
.LASF119:
	.string	"../olden/em3d/src/make_graph.c"
.LASF19:
	.string	"_IO_buf_end"
.LASF28:
	.string	"_cur_column"
.LASF75:
	.string	"retval"
.LASF65:
	.string	"double"
.LASF27:
	.string	"_old_offset"
.LASF32:
	.string	"_offset"
.LASF93:
	.string	"make_tables"
.LASF73:
	.string	"NumMisses"
.LASF57:
	.string	"node_t"
.LASF61:
	.string	"from_values"
.LASF41:
	.string	"_IO_marker"
.LASF48:
	.string	"stdin"
.LASF3:
	.string	"unsigned int"
.LASF72:
	.string	"NumNodes"
.LASF76:
	.string	"blocksize"
.LASF0:
	.string	"long unsigned int"
.LASF122:
	.string	"_IO_FILE_plus"
.LASF16:
	.string	"_IO_write_ptr"
.LASF89:
	.string	"fill_all_from_fields"
.LASF43:
	.string	"_sbuf"
.LASF105:
	.string	"otherlist"
.LASF78:
	.string	"local_table"
.LASF2:
	.string	"short unsigned int"
.LASF114:
	.string	"values"
.LASF20:
	.string	"_IO_save_base"
.LASF111:
	.string	"number"
.LASF100:
	.string	"fill_from_fields"
.LASF31:
	.string	"_lock"
.LASF26:
	.string	"_flags2"
.LASF38:
	.string	"_mode"
.LASF84:
	.string	"nproc"
.LASF99:
	.string	"cur_node"
.LASF49:
	.string	"stdout"
.LASF45:
	.string	"_IO_2_1_stdin_"
.LASF98:
	.string	"nodelist"
.LASF113:
	.string	"node_table"
.LASF17:
	.string	"_IO_write_end"
.LASF54:
	.string	"n_nodes"
.LASF121:
	.string	"_IO_lock_t"
.LASF40:
	.string	"_IO_FILE"
.LASF44:
	.string	"_pos"
.LASF62:
	.string	"coeffs"
.LASF23:
	.string	"_markers"
.LASF67:
	.string	"e_nodes"
.LASF109:
	.string	"percent_local"
.LASF104:
	.string	"other_node"
.LASF1:
	.string	"unsigned char"
.LASF108:
	.string	"tablesz"
.LASF5:
	.string	"short int"
.LASF74:
	.string	"table"
.LASF117:
	.string	"make_table"
.LASF29:
	.string	"_vtable_offset"
.LASF46:
	.string	"_IO_2_1_stdout_"
.LASF58:
	.string	"value"
.LASF112:
	.string	"fill_table"
.LASF77:
	.string	"groupsize"
.LASF52:
	.string	"min_ptr"
.LASF71:
	.string	"h_table"
.LASF10:
	.string	"char"
.LASF85:
	.string	"func"
.LASF103:
	.string	"thecount"
.LASF42:
	.string	"_next"
.LASF9:
	.string	"__off64_t"
.LASF14:
	.string	"_IO_read_base"
.LASF22:
	.string	"_IO_save_end"
.LASF33:
	.string	"__pad1"
.LASF34:
	.string	"__pad2"
.LASF35:
	.string	"__pad3"
.LASF36:
	.string	"__pad4"
.LASF37:
	.string	"__pad5"
.LASF82:
	.string	"do_all"
.LASF83:
	.string	"groupname"
.LASF39:
	.string	"_unused2"
.LASF50:
	.string	"stderr"
.LASF21:
	.string	"_IO_backup_base"
.LASF81:
	.string	"initialize_graph"
.LASF63:
	.string	"from_count"
.LASF94:
	.string	"h_values"
.LASF95:
	.string	"e_values"
.LASF64:
	.string	"from_length"
.LASF15:
	.string	"_IO_write_base"
.LASF66:
	.string	"graph_t"
	.ident	"GCC: (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0"
	.section	.note.GNU-stack,"",@progbits
