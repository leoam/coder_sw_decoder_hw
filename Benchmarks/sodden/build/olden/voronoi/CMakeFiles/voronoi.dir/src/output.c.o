	.file	"output.c"
	.text
.Ltext0:
	.section	.rodata
.LC0:
	.string	"Dedge %g %g %g %g \n"
	.text
	.globl	plot_dedge
	.type	plot_dedge, @function
plot_dedge:
.LFB0:
	.file 1 "../olden/voronoi/src/output.c"
	.loc 1 20 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	.loc 1 23 0
	movq	-40(%rbp), %rax
	movsd	(%rax), %xmm0
	movsd	%xmm0, -32(%rbp)
	.loc 1 24 0
	movq	-40(%rbp), %rax
	movsd	8(%rax), %xmm0
	movsd	%xmm0, -24(%rbp)
	.loc 1 25 0
	movq	-48(%rbp), %rax
	movsd	(%rax), %xmm0
	movsd	%xmm0, -16(%rbp)
	.loc 1 26 0
	movq	-48(%rbp), %rax
	movsd	8(%rax), %xmm0
	movsd	%xmm0, -8(%rbp)
	.loc 1 29 0
	cvtsd2ss	-8(%rbp), %xmm0
	.loc 1 28 0
	cvtss2sd	%xmm0, %xmm3
	.loc 1 29 0
	cvtsd2ss	-16(%rbp), %xmm0
	.loc 1 28 0
	cvtss2sd	%xmm0, %xmm2
	cvtsd2ss	-24(%rbp), %xmm0
	cvtss2sd	%xmm0, %xmm1
	cvtsd2ss	-32(%rbp), %xmm0
	cvtss2sd	%xmm0, %xmm0
	leaq	.LC0(%rip), %rdi
	movl	$4, %eax
	call	printf@PLT
	.loc 1 30 0
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE0:
	.size	plot_dedge, .-plot_dedge
	.section	.rodata
.LC2:
	.string	"Vedge %g %g %g %g \n"
	.text
	.globl	plot_vedge
	.type	plot_vedge, @function
plot_vedge:
.LFB1:
	.loc 1 34 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$16, %rsp
	.loc 1 45 0
	movsd	16(%rbp), %xmm0
	cvtsd2ss	%xmm0, %xmm4
	movss	%xmm4, -16(%rbp)
	.loc 1 46 0
	movsd	24(%rbp), %xmm0
	cvtsd2ss	%xmm0, %xmm5
	movss	%xmm5, -12(%rbp)
	.loc 1 47 0
	movsd	40(%rbp), %xmm0
	cvtsd2ss	%xmm0, %xmm6
	movss	%xmm6, -8(%rbp)
	.loc 1 48 0
	movsd	48(%rbp), %xmm0
	cvtsd2ss	%xmm0, %xmm7
	movss	%xmm7, -4(%rbp)
	.loc 1 50 0
	movss	-16(%rbp), %xmm0
	ucomiss	-16(%rbp), %xmm0
	jnp	.L3
	.loc 1 51 0
	cvtss2sd	-16(%rbp), %xmm0
	movq	.LC1(%rip), %xmm1
	andpd	%xmm1, %xmm0
	cvtsd2ss	%xmm0, %xmm4
	movss	%xmm4, -16(%rbp)
.L3:
	.loc 1 52 0
	movss	-12(%rbp), %xmm0
	ucomiss	-12(%rbp), %xmm0
	jnp	.L4
	.loc 1 53 0
	cvtss2sd	-12(%rbp), %xmm0
	movq	.LC1(%rip), %xmm1
	andpd	%xmm1, %xmm0
	cvtsd2ss	%xmm0, %xmm5
	movss	%xmm5, -12(%rbp)
.L4:
	.loc 1 54 0
	movss	-8(%rbp), %xmm0
	ucomiss	-8(%rbp), %xmm0
	jnp	.L5
	.loc 1 55 0
	cvtss2sd	-8(%rbp), %xmm0
	movq	.LC1(%rip), %xmm1
	andpd	%xmm1, %xmm0
	cvtsd2ss	%xmm0, %xmm6
	movss	%xmm6, -8(%rbp)
.L5:
	.loc 1 56 0
	movss	-4(%rbp), %xmm0
	ucomiss	-4(%rbp), %xmm0
	jnp	.L6
	.loc 1 57 0
	cvtss2sd	-4(%rbp), %xmm0
	movq	.LC1(%rip), %xmm1
	andpd	%xmm1, %xmm0
	cvtsd2ss	%xmm0, %xmm7
	movss	%xmm7, -4(%rbp)
.L6:
	.loc 1 59 0
	cvtss2sd	-4(%rbp), %xmm3
	cvtss2sd	-8(%rbp), %xmm2
	cvtss2sd	-12(%rbp), %xmm1
	cvtss2sd	-16(%rbp), %xmm0
	leaq	.LC2(%rip), %rdi
	movl	$4, %eax
	call	printf@PLT
	.loc 1 60 0
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE1:
	.size	plot_vedge, .-plot_vedge
	.globl	circle_center
	.type	circle_center, @function
circle_center:
.LFB2:
	.loc 1 64 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$352, %rsp
	movq	%rdi, -296(%rbp)
	.loc 1 64 0
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	.loc 1 68 0
	leaq	-224(%rbp), %rax
	pushq	80(%rbp)
	pushq	72(%rbp)
	pushq	64(%rbp)
	pushq	56(%rbp)
	pushq	48(%rbp)
	pushq	40(%rbp)
	movq	%rax, %rdi
	call	V2_sub@PLT
	addq	$48, %rsp
	.loc 1 69 0
	subq	$8, %rsp
	pushq	-208(%rbp)
	pushq	-216(%rbp)
	pushq	-224(%rbp)
	call	V2_magn@PLT
	addq	$32, %rsp
	movq	%xmm0, %rax
	movq	%rax, -288(%rbp)
	.loc 1 70 0
	leaq	-336(%rbp), %rax
	pushq	56(%rbp)
	pushq	48(%rbp)
	pushq	40(%rbp)
	pushq	32(%rbp)
	pushq	24(%rbp)
	pushq	16(%rbp)
	movq	%rax, %rdi
	call	V2_sum@PLT
	addq	$48, %rsp
	movq	-336(%rbp), %rax
	movq	-328(%rbp), %rdx
	movq	%rax, -224(%rbp)
	movq	%rdx, -216(%rbp)
	movq	-320(%rbp), %rax
	movq	%rax, -208(%rbp)
	.loc 1 71 0
	leaq	-192(%rbp), %rax
	movq	.LC3(%rip), %rdx
	subq	$8, %rsp
	pushq	-208(%rbp)
	pushq	-216(%rbp)
	pushq	-224(%rbp)
	movq	%rdx, -344(%rbp)
	movsd	-344(%rbp), %xmm0
	movq	%rax, %rdi
	call	V2_times@PLT
	addq	$32, %rsp
	.loc 1 72 0
	pxor	%xmm0, %xmm0
	ucomisd	-288(%rbp), %xmm0
	jbe	.L14
	.loc 1 73 0
	movq	-296(%rbp), %rcx
	movq	-192(%rbp), %rax
	movq	-184(%rbp), %rdx
	movq	%rax, (%rcx)
	movq	%rdx, 8(%rcx)
	movq	-176(%rbp), %rax
	movq	%rax, 16(%rcx)
	jmp	.L7
.L14:
	.loc 1 75 0
	leaq	-160(%rbp), %rax
	pushq	32(%rbp)
	pushq	24(%rbp)
	pushq	16(%rbp)
	pushq	56(%rbp)
	pushq	48(%rbp)
	pushq	40(%rbp)
	movq	%rax, %rdi
	call	V2_sub@PLT
	addq	$48, %rsp
	.loc 1 76 0
	leaq	-128(%rbp), %rax
	pushq	32(%rbp)
	pushq	24(%rbp)
	pushq	16(%rbp)
	pushq	80(%rbp)
	pushq	72(%rbp)
	pushq	64(%rbp)
	movq	%rax, %rdi
	call	V2_sub@PLT
	addq	$48, %rsp
	.loc 1 77 0
	pushq	-112(%rbp)
	pushq	-120(%rbp)
	pushq	-128(%rbp)
	pushq	-144(%rbp)
	pushq	-152(%rbp)
	pushq	-160(%rbp)
	call	V2_cprod@PLT
	addq	$48, %rsp
	movq	%xmm0, %rax
	movq	%rax, -280(%rbp)
	.loc 1 78 0
	movsd	-280(%rbp), %xmm1
	movsd	.LC5(%rip), %xmm0
	mulsd	%xmm1, %xmm0
	movsd	%xmm0, -272(%rbp)
	.loc 1 79 0
	leaq	-96(%rbp), %rax
	pushq	56(%rbp)
	pushq	48(%rbp)
	pushq	40(%rbp)
	pushq	80(%rbp)
	pushq	72(%rbp)
	pushq	64(%rbp)
	movq	%rax, %rdi
	call	V2_sub@PLT
	addq	$48, %rsp
	.loc 1 80 0
	pushq	-112(%rbp)
	pushq	-120(%rbp)
	pushq	-128(%rbp)
	pushq	-80(%rbp)
	pushq	-88(%rbp)
	pushq	-96(%rbp)
	call	V2_dot@PLT
	addq	$48, %rsp
	movq	%xmm0, %rax
	movq	%rax, -264(%rbp)
	.loc 1 81 0
	leaq	-64(%rbp), %rax
	subq	$8, %rsp
	pushq	-144(%rbp)
	pushq	-152(%rbp)
	pushq	-160(%rbp)
	movq	%rax, %rdi
	call	V2_cross@PLT
	addq	$32, %rsp
	.loc 1 82 0
	movsd	-264(%rbp), %xmm0
	divsd	-272(%rbp), %xmm0
	leaq	-32(%rbp), %rax
	subq	$8, %rsp
	pushq	-48(%rbp)
	pushq	-56(%rbp)
	pushq	-64(%rbp)
	movq	%rax, %rdi
	call	V2_times@PLT
	addq	$32, %rsp
	.loc 1 83 0
	leaq	-256(%rbp), %rax
	pushq	-16(%rbp)
	pushq	-24(%rbp)
	pushq	-32(%rbp)
	pushq	-176(%rbp)
	pushq	-184(%rbp)
	pushq	-192(%rbp)
	movq	%rax, %rdi
	call	V2_sum@PLT
	addq	$48, %rsp
	.loc 1 84 0
	movq	-296(%rbp), %rcx
	movq	-256(%rbp), %rax
	movq	-248(%rbp), %rdx
	movq	%rax, (%rcx)
	movq	%rdx, 8(%rcx)
	movq	-240(%rbp), %rax
	movq	%rax, 16(%rcx)
.L7:
	.loc 1 86 0
	movq	-296(%rbp), %rax
	movq	-8(%rbp), %rsi
	xorq	%fs:40, %rsi
	je	.L12
	call	__stack_chk_fail@PLT
.L12:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE2:
	.size	circle_center, .-circle_center
	.comm	earray,8,8
	.section	.rodata
.LC7:
	.string	"mystack_ptr = %d\n"
	.text
	.globl	output_voronoi_diagram
	.type	output_voronoi_diagram, @function
output_voronoi_diagram:
.LFB3:
	.loc 1 91 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	pushq	%rbx
	subq	$456, %rsp
	.cfi_offset 3, -24
	movq	%rdi, -392(%rbp)
	movl	%esi, -396(%rbp)
	movq	%rdx, -408(%rbp)
	.loc 1 91 0
	movq	%fs:40, %rax
	movq	%rax, -24(%rbp)
	xorl	%eax, %eax
	.loc 1 99 0
	movl	voronoi(%rip), %eax
	testl	%eax, %eax
	je	.L16
	.loc 1 100 0
	movq	-392(%rbp), %rdx
	movq	-408(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	movl	$0, %eax
	call	zero_seen@PLT
	.loc 1 101 0
	movq	-392(%rbp), %rax
	movq	%rax, -376(%rbp)
.L17:
.LBB2:
	.loc 1 107 0 discriminator 1
	movq	-376(%rbp), %rax
	xorq	$64, %rax
	movq	(%rax), %rcx
	movq	(%rcx), %rax
	movq	8(%rcx), %rdx
	movq	%rax, -112(%rbp)
	movq	%rdx, -104(%rbp)
	movq	16(%rcx), %rax
	movq	%rax, -96(%rbp)
	.loc 1 108 0 discriminator 1
	movq	-376(%rbp), %rax
	movq	(%rax), %rcx
	movq	(%rcx), %rax
	movq	8(%rcx), %rdx
	movq	%rax, -80(%rbp)
	movq	%rdx, -72(%rbp)
	movq	16(%rcx), %rax
	movq	%rax, -64(%rbp)
	.loc 1 109 0 discriminator 1
	movq	-376(%rbp), %rax
	movq	8(%rax), %rax
	movq	%rax, -360(%rbp)
	.loc 1 110 0 discriminator 1
	movq	-360(%rbp), %rax
	xorq	$64, %rax
	movq	(%rax), %rcx
	movq	(%rcx), %rax
	movq	8(%rcx), %rdx
	movq	%rax, -48(%rbp)
	movq	%rdx, -40(%rbp)
	movq	16(%rcx), %rax
	movq	%rax, -32(%rbp)
	.loc 1 111 0 discriminator 1
	leaq	-272(%rbp), %rax
	pushq	-64(%rbp)
	pushq	-72(%rbp)
	pushq	-80(%rbp)
	pushq	-96(%rbp)
	pushq	-104(%rbp)
	pushq	-112(%rbp)
	movq	%rax, %rdi
	call	V2_sub@PLT
	addq	$48, %rsp
	.loc 1 112 0 discriminator 1
	leaq	-240(%rbp), %rax
	subq	$8, %rsp
	pushq	-32(%rbp)
	pushq	-40(%rbp)
	pushq	-48(%rbp)
	pushq	-96(%rbp)
	pushq	-104(%rbp)
	pushq	-112(%rbp)
	pushq	-64(%rbp)
	pushq	-72(%rbp)
	pushq	-80(%rbp)
	movq	%rax, %rdi
	call	circle_center
	addq	$80, %rsp
	.loc 1 114 0 discriminator 1
	leaq	-208(%rbp), %rax
	pushq	-96(%rbp)
	pushq	-104(%rbp)
	pushq	-112(%rbp)
	pushq	-64(%rbp)
	pushq	-72(%rbp)
	pushq	-80(%rbp)
	movq	%rax, %rdi
	call	V2_sum@PLT
	addq	$48, %rsp
	.loc 1 115 0 discriminator 1
	leaq	-176(%rbp), %rax
	movq	.LC3(%rip), %rdx
	subq	$8, %rsp
	pushq	-192(%rbp)
	pushq	-200(%rbp)
	pushq	-208(%rbp)
	movq	%rdx, -456(%rbp)
	movsd	-456(%rbp), %xmm0
	movq	%rax, %rdi
	call	V2_times@PLT
	addq	$32, %rsp
	.loc 1 116 0 discriminator 1
	leaq	-144(%rbp), %rax
	pushq	-160(%rbp)
	pushq	-168(%rbp)
	pushq	-176(%rbp)
	pushq	-224(%rbp)
	pushq	-232(%rbp)
	pushq	-240(%rbp)
	movq	%rax, %rdi
	call	V2_sub@PLT
	addq	$48, %rsp
	.loc 1 117 0 discriminator 1
	subq	$8, %rsp
	pushq	-128(%rbp)
	pushq	-136(%rbp)
	pushq	-144(%rbp)
	call	V2_magn@PLT
	addq	$32, %rsp
	movapd	%xmm0, %xmm1
	movsd	.LC6(%rip), %xmm0
	addsd	%xmm1, %xmm0
	movsd	%xmm0, -352(%rbp)
	.loc 1 118 0 discriminator 1
	subq	$8, %rsp
	pushq	-256(%rbp)
	pushq	-264(%rbp)
	pushq	-272(%rbp)
	call	V2_magn@PLT
	addq	$32, %rsp
	movapd	%xmm0, %xmm1
	movsd	-352(%rbp), %xmm0
	divsd	%xmm1, %xmm0
	movsd	%xmm0, -344(%rbp)
	.loc 1 119 0 discriminator 1
	leaq	-448(%rbp), %rax
	subq	$8, %rsp
	pushq	-256(%rbp)
	pushq	-264(%rbp)
	pushq	-272(%rbp)
	movq	%rax, %rdi
	call	V2_cross@PLT
	addq	$32, %rsp
	movq	-448(%rbp), %rax
	movq	-440(%rbp), %rdx
	movq	%rax, -208(%rbp)
	movq	%rdx, -200(%rbp)
	movq	-432(%rbp), %rax
	movq	%rax, -192(%rbp)
	.loc 1 120 0 discriminator 1
	leaq	-448(%rbp), %rax
	movq	-344(%rbp), %rdx
	subq	$8, %rsp
	pushq	-192(%rbp)
	pushq	-200(%rbp)
	pushq	-208(%rbp)
	movq	%rdx, -456(%rbp)
	movsd	-456(%rbp), %xmm0
	movq	%rax, %rdi
	call	V2_times@PLT
	addq	$32, %rsp
	movq	-448(%rbp), %rax
	movq	-440(%rbp), %rdx
	movq	%rax, -176(%rbp)
	movq	%rdx, -168(%rbp)
	movq	-432(%rbp), %rax
	movq	%rax, -160(%rbp)
	.loc 1 121 0 discriminator 1
	leaq	-448(%rbp), %rax
	pushq	-160(%rbp)
	pushq	-168(%rbp)
	pushq	-176(%rbp)
	pushq	-224(%rbp)
	pushq	-232(%rbp)
	pushq	-240(%rbp)
	movq	%rax, %rdi
	call	V2_sum@PLT
	addq	$48, %rsp
	movq	-448(%rbp), %rax
	movq	-440(%rbp), %rdx
	movq	%rax, -144(%rbp)
	movq	%rdx, -136(%rbp)
	movq	-432(%rbp), %rax
	movq	%rax, -128(%rbp)
	.loc 1 122 0 discriminator 1
	pushq	-128(%rbp)
	pushq	-136(%rbp)
	pushq	-144(%rbp)
	pushq	-224(%rbp)
	pushq	-232(%rbp)
	pushq	-240(%rbp)
	movl	$0, %eax
	call	plot_vedge
	addq	$48, %rsp
	.loc 1 123 0 discriminator 1
	movq	-376(%rbp), %rax
	addq	$32, %rax
	andl	$127, %eax
	movq	%rax, %rdx
	movq	-376(%rbp), %rax
	andq	$-128, %rax
	orq	%rdx, %rax
	movq	8(%rax), %rax
	addq	$96, %rax
	andl	$127, %eax
	movq	%rax, %rdx
	movq	-376(%rbp), %rax
	addq	$32, %rax
	andl	$127, %eax
	movq	%rax, %rcx
	movq	-376(%rbp), %rax
	andq	$-128, %rax
	orq	%rcx, %rax
	movq	8(%rax), %rax
	andq	$-128, %rax
	orq	%rdx, %rax
	movq	%rax, -376(%rbp)
.LBE2:
	.loc 1 124 0 discriminator 1
	movq	-376(%rbp), %rax
	cmpq	-392(%rbp), %rax
	jne	.L17
.L16:
	.loc 1 129 0
	movq	-408(%rbp), %rax
	movl	$0, (%rax)
	.loc 1 130 0
	movq	-392(%rbp), %rdx
	movq	-408(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	push_ring@PLT
	.loc 1 131 0
	movq	-408(%rbp), %rax
	movl	(%rax), %eax
	movl	%eax, %esi
	leaq	.LC7(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	.loc 1 132 0
	jmp	.L18
.L23:
.LBB3:
	.loc 1 136 0
	movq	-408(%rbp), %rax
	movq	%rax, %rdi
	movl	$0, %eax
	call	pop_edge@PLT
	movq	%rax, -392(%rbp)
	.loc 1 137 0
	movq	-392(%rbp), %rax
	movq	16(%rax), %rax
	cmpq	$1, %rax
	jne	.L19
	.loc 1 138 0
	movq	-392(%rbp), %rax
	movq	%rax, -368(%rbp)
	.loc 1 139 0
	movq	-392(%rbp), %rax
	movq	8(%rax), %rax
	movq	%rax, -376(%rbp)
.L22:
	.loc 1 141 0
	movq	-368(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, -336(%rbp)
	.loc 1 142 0
	movq	-336(%rbp), %rax
	movsd	(%rax), %xmm0
	movsd	%xmm0, -328(%rbp)
	.loc 1 143 0
	movq	-368(%rbp), %rax
	xorq	$64, %rax
	movq	(%rax), %rax
	movq	%rax, -320(%rbp)
	.loc 1 144 0
	movq	-320(%rbp), %rax
	movsd	(%rax), %xmm0
	movsd	%xmm0, -312(%rbp)
	.loc 1 145 0
	movsd	-328(%rbp), %xmm0
	ucomisd	-312(%rbp), %xmm0
	jb	.L20
	.loc 1 147 0
	movq	-320(%rbp), %rdx
	movq	-336(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	movl	$0, %eax
	call	plot_dedge
	.loc 1 148 0
	movq	-368(%rbp), %rax
	xorq	$64, %rax
	movq	%rax, -304(%rbp)
	.loc 1 149 0
	movq	-304(%rbp), %rax
	movq	8(%rax), %rax
	movq	%rax, -296(%rbp)
	.loc 1 150 0
	movq	-368(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, -336(%rbp)
	.loc 1 151 0
	movq	-368(%rbp), %rax
	xorq	$64, %rax
	movq	(%rax), %rax
	movq	%rax, -320(%rbp)
	.loc 1 152 0
	movq	-376(%rbp), %rax
	xorq	$64, %rax
	movq	(%rax), %rax
	movq	%rax, -288(%rbp)
	.loc 1 153 0
	movq	-296(%rbp), %rax
	xorq	$64, %rax
	movq	(%rax), %rax
	movq	%rax, -280(%rbp)
	.loc 1 154 0
	movq	-288(%rbp), %rdx
	movq	-320(%rbp), %rcx
	movq	-336(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	ccw@PLT
	movl	%eax, %ebx
	.loc 1 155 0
	movq	-280(%rbp), %rdx
	movq	-320(%rbp), %rcx
	movq	-336(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	ccw@PLT
	.loc 1 154 0
	cmpl	%eax, %ebx
	je	.L20
.LBB4:
	.loc 1 157 0
	movq	-368(%rbp), %rax
	movq	(%rax), %rcx
	movq	(%rcx), %rax
	movq	8(%rcx), %rdx
	movq	%rax, -112(%rbp)
	movq	%rdx, -104(%rbp)
	movq	16(%rcx), %rax
	movq	%rax, -96(%rbp)
	.loc 1 158 0
	movq	-368(%rbp), %rax
	xorq	$64, %rax
	movq	(%rax), %rcx
	movq	(%rcx), %rax
	movq	8(%rcx), %rdx
	movq	%rax, -80(%rbp)
	movq	%rdx, -72(%rbp)
	movq	16(%rcx), %rax
	movq	%rax, -64(%rbp)
	.loc 1 159 0
	movq	-376(%rbp), %rax
	xorq	$64, %rax
	movq	(%rax), %rcx
	movq	(%rcx), %rax
	movq	8(%rcx), %rdx
	movq	%rax, -48(%rbp)
	movq	%rdx, -40(%rbp)
	movq	16(%rcx), %rax
	movq	%rax, -32(%rbp)
	.loc 1 160 0
	leaq	-448(%rbp), %rax
	subq	$8, %rsp
	pushq	-32(%rbp)
	pushq	-40(%rbp)
	pushq	-48(%rbp)
	pushq	-64(%rbp)
	pushq	-72(%rbp)
	pushq	-80(%rbp)
	pushq	-96(%rbp)
	pushq	-104(%rbp)
	pushq	-112(%rbp)
	movq	%rax, %rdi
	call	circle_center
	addq	$80, %rsp
	movq	-448(%rbp), %rax
	movq	-440(%rbp), %rdx
	movq	%rax, -208(%rbp)
	movq	%rdx, -200(%rbp)
	movq	-432(%rbp), %rax
	movq	%rax, -192(%rbp)
	.loc 1 162 0
	movq	-304(%rbp), %rax
	movq	(%rax), %rcx
	movq	(%rcx), %rax
	movq	8(%rcx), %rdx
	movq	%rax, -112(%rbp)
	movq	%rdx, -104(%rbp)
	movq	16(%rcx), %rax
	movq	%rax, -96(%rbp)
	.loc 1 163 0
	movq	-304(%rbp), %rax
	xorq	$64, %rax
	movq	(%rax), %rcx
	movq	(%rcx), %rax
	movq	8(%rcx), %rdx
	movq	%rax, -80(%rbp)
	movq	%rdx, -72(%rbp)
	movq	16(%rcx), %rax
	movq	%rax, -64(%rbp)
	.loc 1 164 0
	movq	-296(%rbp), %rax
	xorq	$64, %rax
	movq	(%rax), %rcx
	movq	(%rcx), %rax
	movq	8(%rcx), %rdx
	movq	%rax, -48(%rbp)
	movq	%rdx, -40(%rbp)
	movq	16(%rcx), %rax
	movq	%rax, -32(%rbp)
	.loc 1 165 0
	leaq	-448(%rbp), %rax
	subq	$8, %rsp
	pushq	-32(%rbp)
	pushq	-40(%rbp)
	pushq	-48(%rbp)
	pushq	-64(%rbp)
	pushq	-72(%rbp)
	pushq	-80(%rbp)
	pushq	-96(%rbp)
	pushq	-104(%rbp)
	pushq	-112(%rbp)
	movq	%rax, %rdi
	call	circle_center
	addq	$80, %rsp
	movq	-448(%rbp), %rax
	movq	-440(%rbp), %rdx
	movq	%rax, -176(%rbp)
	movq	%rdx, -168(%rbp)
	movq	-432(%rbp), %rax
	movq	%rax, -160(%rbp)
	.loc 1 167 0
	pushq	-160(%rbp)
	pushq	-168(%rbp)
	pushq	-176(%rbp)
	pushq	-192(%rbp)
	pushq	-200(%rbp)
	pushq	-208(%rbp)
	movl	$0, %eax
	call	plot_vedge
	addq	$48, %rsp
.L20:
.LBE4:
	.loc 1 170 0
	movq	-368(%rbp), %rax
	movq	$2, 16(%rax)
	.loc 1 171 0
	movq	-376(%rbp), %rax
	movq	%rax, -368(%rbp)
	.loc 1 172 0
	movq	-376(%rbp), %rax
	movq	8(%rax), %rax
	movq	%rax, -376(%rbp)
	.loc 1 173 0
	movq	-368(%rbp), %rax
	cmpq	-392(%rbp), %rax
	jne	.L22
.L19:
	.loc 1 175 0
	movq	-392(%rbp), %rax
	xorq	$64, %rax
	movq	%rax, %rdx
	movq	-408(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	push_ring@PLT
.L18:
.LBE3:
	.loc 1 132 0
	movq	-408(%rbp), %rax
	movl	(%rax), %eax
	testl	%eax, %eax
	jne	.L23
	.loc 1 177 0
	movq	-392(%rbp), %rdx
	movq	-408(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	movl	$0, %eax
	call	zero_seen@PLT
	.loc 1 178 0
	nop
	movq	-24(%rbp), %rax
	xorq	%fs:40, %rax
	je	.L24
	call	__stack_chk_fail@PLT
.L24:
	movq	-8(%rbp), %rbx
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3:
	.size	output_voronoi_diagram, .-output_voronoi_diagram
	.section	.rodata
	.align 16
.LC1:
	.long	4294967295
	.long	2147483647
	.long	0
	.long	0
	.align 8
.LC3:
	.long	0
	.long	1071644672
	.align 8
.LC5:
	.long	0
	.long	-1073741824
	.align 8
.LC6:
	.long	0
	.long	1072693248
	.text
.Letext0:
	.file 2 "/usr/include/x86_64-linux-gnu/bits/types.h"
	.file 3 "../olden/voronoi/src/defines.h"
	.file 4 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h"
	.file 5 "/usr/include/x86_64-linux-gnu/bits/libio.h"
	.file 6 "/usr/include/stdio.h"
	.section	.debug_info,"",@progbits
.Ldebug_info0:
	.long	0x878
	.value	0x4
	.long	.Ldebug_abbrev0
	.byte	0x8
	.uleb128 0x1
	.long	.LASF89
	.byte	0xc
	.long	.LASF90
	.long	.LASF91
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.long	.Ldebug_line0
	.uleb128 0x2
	.byte	0x1
	.byte	0x8
	.long	.LASF0
	.uleb128 0x2
	.byte	0x2
	.byte	0x7
	.long	.LASF1
	.uleb128 0x2
	.byte	0x4
	.byte	0x7
	.long	.LASF2
	.uleb128 0x2
	.byte	0x8
	.byte	0x7
	.long	.LASF3
	.uleb128 0x2
	.byte	0x1
	.byte	0x6
	.long	.LASF4
	.uleb128 0x2
	.byte	0x2
	.byte	0x5
	.long	.LASF5
	.uleb128 0x3
	.byte	0x4
	.byte	0x5
	.string	"int"
	.uleb128 0x2
	.byte	0x8
	.byte	0x5
	.long	.LASF6
	.uleb128 0x4
	.long	.LASF7
	.byte	0x2
	.byte	0x8c
	.long	0x5e
	.uleb128 0x4
	.long	.LASF8
	.byte	0x2
	.byte	0x8d
	.long	0x5e
	.uleb128 0x5
	.byte	0x8
	.uleb128 0x6
	.byte	0x8
	.long	0x83
	.uleb128 0x2
	.byte	0x1
	.byte	0x6
	.long	.LASF9
	.uleb128 0x2
	.byte	0x4
	.byte	0x4
	.long	.LASF10
	.uleb128 0x2
	.byte	0x8
	.byte	0x4
	.long	.LASF11
	.uleb128 0x4
	.long	.LASF12
	.byte	0x3
	.byte	0x6
	.long	0x42
	.uleb128 0x7
	.long	.LASF16
	.byte	0x20
	.byte	0x3
	.byte	0x8
	.long	0xde
	.uleb128 0x8
	.string	"v"
	.byte	0x3
	.byte	0x9
	.long	0x10d
	.byte	0
	.uleb128 0x9
	.long	.LASF13
	.byte	0x3
	.byte	0xa
	.long	0x113
	.byte	0x8
	.uleb128 0x9
	.long	.LASF14
	.byte	0x3
	.byte	0xb
	.long	0x5e
	.byte	0x10
	.uleb128 0x9
	.long	.LASF15
	.byte	0x3
	.byte	0xc
	.long	0x7b
	.byte	0x18
	.byte	0
	.uleb128 0x7
	.long	.LASF17
	.byte	0x28
	.byte	0x3
	.byte	0x21
	.long	0x10d
	.uleb128 0x8
	.string	"v"
	.byte	0x3
	.byte	0x22
	.long	0x13a
	.byte	0
	.uleb128 0x9
	.long	.LASF18
	.byte	0x3
	.byte	0x23
	.long	0x10d
	.byte	0x18
	.uleb128 0x9
	.long	.LASF19
	.byte	0x3
	.byte	0x23
	.long	0x10d
	.byte	0x20
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0xde
	.uleb128 0x6
	.byte	0x8
	.long	0xa3
	.uleb128 0x4
	.long	.LASF20
	.byte	0x3
	.byte	0x17
	.long	0x113
	.uleb128 0x4
	.long	.LASF21
	.byte	0x3
	.byte	0x18
	.long	0x10d
	.uleb128 0x4
	.long	.LASF22
	.byte	0x3
	.byte	0x19
	.long	0x113
	.uleb128 0x7
	.long	.LASF23
	.byte	0x18
	.byte	0x3
	.byte	0x1b
	.long	0x167
	.uleb128 0x8
	.string	"x"
	.byte	0x3
	.byte	0x1c
	.long	0x91
	.byte	0
	.uleb128 0x8
	.string	"y"
	.byte	0x3
	.byte	0x1c
	.long	0x91
	.byte	0x8
	.uleb128 0x9
	.long	.LASF24
	.byte	0x3
	.byte	0x1d
	.long	0x91
	.byte	0x10
	.byte	0
	.uleb128 0x7
	.long	.LASF25
	.byte	0x18
	.byte	0x3
	.byte	0x2c
	.long	0x198
	.uleb128 0x8
	.string	"ptr"
	.byte	0x3
	.byte	0x2d
	.long	0x57
	.byte	0
	.uleb128 0x9
	.long	.LASF26
	.byte	0x3
	.byte	0x2e
	.long	0x198
	.byte	0x8
	.uleb128 0x9
	.long	.LASF27
	.byte	0x3
	.byte	0x2f
	.long	0x57
	.byte	0x10
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x12f
	.uleb128 0xa
	.string	"vp"
	.byte	0x3
	.byte	0x61
	.long	0x1a8
	.uleb128 0x6
	.byte	0x8
	.long	0x124
	.uleb128 0xa
	.string	"va"
	.byte	0x3
	.byte	0x62
	.long	0x10d
	.uleb128 0xb
	.long	.LASF13
	.byte	0x3
	.byte	0x63
	.long	0x1c3
	.uleb128 0x6
	.byte	0x8
	.long	0x119
	.uleb128 0xa
	.string	"org"
	.byte	0x3
	.byte	0x64
	.long	0x1a8
	.uleb128 0xb
	.long	.LASF28
	.byte	0x3
	.byte	0x65
	.long	0x57
	.uleb128 0xb
	.long	.LASF29
	.byte	0x3
	.byte	0x65
	.long	0x57
	.uleb128 0xb
	.long	.LASF27
	.byte	0x3
	.byte	0x65
	.long	0x57
	.uleb128 0xb
	.long	.LASF30
	.byte	0x3
	.byte	0x66
	.long	0x57
	.uleb128 0xb
	.long	.LASF31
	.byte	0x3
	.byte	0x66
	.long	0x57
	.uleb128 0xb
	.long	.LASF32
	.byte	0x3
	.byte	0x66
	.long	0x57
	.uleb128 0xb
	.long	.LASF33
	.byte	0x3
	.byte	0x66
	.long	0x57
	.uleb128 0xb
	.long	.LASF34
	.byte	0x3
	.byte	0x66
	.long	0x57
	.uleb128 0xb
	.long	.LASF35
	.byte	0x3
	.byte	0x66
	.long	0x57
	.uleb128 0xb
	.long	.LASF36
	.byte	0x3
	.byte	0x66
	.long	0x57
	.uleb128 0xb
	.long	.LASF37
	.byte	0x3
	.byte	0x66
	.long	0x57
	.uleb128 0xa
	.string	"see"
	.byte	0x3
	.byte	0x67
	.long	0x7d
	.uleb128 0xb
	.long	.LASF38
	.byte	0x3
	.byte	0x68
	.long	0x57
	.uleb128 0xb
	.long	.LASF39
	.byte	0x3
	.byte	0x68
	.long	0x57
	.uleb128 0x4
	.long	.LASF40
	.byte	0x4
	.byte	0xd8
	.long	0x42
	.uleb128 0x7
	.long	.LASF41
	.byte	0xd8
	.byte	0x5
	.byte	0xf5
	.long	0x3f9
	.uleb128 0x9
	.long	.LASF42
	.byte	0x5
	.byte	0xf6
	.long	0x57
	.byte	0
	.uleb128 0x9
	.long	.LASF43
	.byte	0x5
	.byte	0xfb
	.long	0x7d
	.byte	0x8
	.uleb128 0x9
	.long	.LASF44
	.byte	0x5
	.byte	0xfc
	.long	0x7d
	.byte	0x10
	.uleb128 0x9
	.long	.LASF45
	.byte	0x5
	.byte	0xfd
	.long	0x7d
	.byte	0x18
	.uleb128 0x9
	.long	.LASF46
	.byte	0x5
	.byte	0xfe
	.long	0x7d
	.byte	0x20
	.uleb128 0x9
	.long	.LASF47
	.byte	0x5
	.byte	0xff
	.long	0x7d
	.byte	0x28
	.uleb128 0xc
	.long	.LASF48
	.byte	0x5
	.value	0x100
	.long	0x7d
	.byte	0x30
	.uleb128 0xc
	.long	.LASF49
	.byte	0x5
	.value	0x101
	.long	0x7d
	.byte	0x38
	.uleb128 0xc
	.long	.LASF50
	.byte	0x5
	.value	0x102
	.long	0x7d
	.byte	0x40
	.uleb128 0xc
	.long	.LASF51
	.byte	0x5
	.value	0x104
	.long	0x7d
	.byte	0x48
	.uleb128 0xc
	.long	.LASF52
	.byte	0x5
	.value	0x105
	.long	0x7d
	.byte	0x50
	.uleb128 0xc
	.long	.LASF53
	.byte	0x5
	.value	0x106
	.long	0x7d
	.byte	0x58
	.uleb128 0xc
	.long	.LASF54
	.byte	0x5
	.value	0x108
	.long	0x431
	.byte	0x60
	.uleb128 0xc
	.long	.LASF55
	.byte	0x5
	.value	0x10a
	.long	0x437
	.byte	0x68
	.uleb128 0xc
	.long	.LASF56
	.byte	0x5
	.value	0x10c
	.long	0x57
	.byte	0x70
	.uleb128 0xc
	.long	.LASF57
	.byte	0x5
	.value	0x110
	.long	0x57
	.byte	0x74
	.uleb128 0xc
	.long	.LASF58
	.byte	0x5
	.value	0x112
	.long	0x65
	.byte	0x78
	.uleb128 0xc
	.long	.LASF59
	.byte	0x5
	.value	0x116
	.long	0x34
	.byte	0x80
	.uleb128 0xc
	.long	.LASF60
	.byte	0x5
	.value	0x117
	.long	0x49
	.byte	0x82
	.uleb128 0xc
	.long	.LASF61
	.byte	0x5
	.value	0x118
	.long	0x43d
	.byte	0x83
	.uleb128 0xc
	.long	.LASF62
	.byte	0x5
	.value	0x11c
	.long	0x44d
	.byte	0x88
	.uleb128 0xc
	.long	.LASF63
	.byte	0x5
	.value	0x125
	.long	0x70
	.byte	0x90
	.uleb128 0xc
	.long	.LASF64
	.byte	0x5
	.value	0x12d
	.long	0x7b
	.byte	0x98
	.uleb128 0xc
	.long	.LASF65
	.byte	0x5
	.value	0x12e
	.long	0x7b
	.byte	0xa0
	.uleb128 0xc
	.long	.LASF66
	.byte	0x5
	.value	0x12f
	.long	0x7b
	.byte	0xa8
	.uleb128 0xc
	.long	.LASF67
	.byte	0x5
	.value	0x130
	.long	0x7b
	.byte	0xb0
	.uleb128 0xc
	.long	.LASF68
	.byte	0x5
	.value	0x132
	.long	0x26e
	.byte	0xb8
	.uleb128 0xc
	.long	.LASF69
	.byte	0x5
	.value	0x133
	.long	0x57
	.byte	0xc0
	.uleb128 0xc
	.long	.LASF70
	.byte	0x5
	.value	0x135
	.long	0x453
	.byte	0xc4
	.byte	0
	.uleb128 0xd
	.long	.LASF92
	.byte	0x5
	.byte	0x9a
	.uleb128 0x7
	.long	.LASF71
	.byte	0x18
	.byte	0x5
	.byte	0xa0
	.long	0x431
	.uleb128 0x9
	.long	.LASF72
	.byte	0x5
	.byte	0xa1
	.long	0x431
	.byte	0
	.uleb128 0x9
	.long	.LASF73
	.byte	0x5
	.byte	0xa2
	.long	0x437
	.byte	0x8
	.uleb128 0x9
	.long	.LASF74
	.byte	0x5
	.byte	0xa6
	.long	0x57
	.byte	0x10
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x400
	.uleb128 0x6
	.byte	0x8
	.long	0x279
	.uleb128 0xe
	.long	0x83
	.long	0x44d
	.uleb128 0xf
	.long	0x42
	.byte	0
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x3f9
	.uleb128 0xe
	.long	0x83
	.long	0x463
	.uleb128 0xf
	.long	0x42
	.byte	0x13
	.byte	0
	.uleb128 0x10
	.long	.LASF93
	.uleb128 0x11
	.long	.LASF75
	.byte	0x5
	.value	0x13f
	.long	0x463
	.uleb128 0x11
	.long	.LASF76
	.byte	0x5
	.value	0x140
	.long	0x463
	.uleb128 0x11
	.long	.LASF77
	.byte	0x5
	.value	0x141
	.long	0x463
	.uleb128 0xb
	.long	.LASF78
	.byte	0x6
	.byte	0x87
	.long	0x437
	.uleb128 0xb
	.long	.LASF79
	.byte	0x6
	.byte	0x88
	.long	0x437
	.uleb128 0xb
	.long	.LASF80
	.byte	0x6
	.byte	0x89
	.long	0x437
	.uleb128 0x12
	.long	.LASF81
	.byte	0x1
	.byte	0x58
	.long	0x4c2
	.uleb128 0x9
	.byte	0x3
	.quad	earray
	.uleb128 0x6
	.byte	0x8
	.long	0x57
	.uleb128 0x13
	.long	.LASF94
	.byte	0x1
	.byte	0x5a
	.quad	.LFB3
	.quad	.LFE3-.LFB3
	.uleb128 0x1
	.byte	0x9c
	.long	0x6aa
	.uleb128 0x14
	.long	.LASF82
	.byte	0x1
	.byte	0x5a
	.long	0x12f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -408
	.uleb128 0x15
	.string	"nv"
	.byte	0x1
	.byte	0x5a
	.long	0x57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -412
	.uleb128 0x14
	.long	.LASF83
	.byte	0x1
	.byte	0x5a
	.long	0x6aa
	.uleb128 0x3
	.byte	0x91
	.sleb128 -424
	.uleb128 0x16
	.string	"nex"
	.byte	0x1
	.byte	0x5c
	.long	0x12f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -392
	.uleb128 0x17
	.long	.LASF84
	.byte	0x1
	.byte	0x5c
	.long	0x12f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -384
	.uleb128 0x17
	.long	.LASF85
	.byte	0x1
	.byte	0x5c
	.long	0x12f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -312
	.uleb128 0x17
	.long	.LASF86
	.byte	0x1
	.byte	0x5c
	.long	0x12f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -320
	.uleb128 0x17
	.long	.LASF87
	.byte	0x1
	.byte	0x5d
	.long	0x13a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -288
	.uleb128 0x17
	.long	.LASF88
	.byte	0x1
	.byte	0x5d
	.long	0x13a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -256
	.uleb128 0x16
	.string	"ln"
	.byte	0x1
	.byte	0x5e
	.long	0x91
	.uleb128 0x3
	.byte	0x91
	.sleb128 -368
	.uleb128 0x16
	.string	"d1"
	.byte	0x1
	.byte	0x60
	.long	0x91
	.uleb128 0x3
	.byte	0x91
	.sleb128 -360
	.uleb128 0x16
	.string	"vv1"
	.byte	0x1
	.byte	0x61
	.long	0x13a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -224
	.uleb128 0x16
	.string	"vv2"
	.byte	0x1
	.byte	0x61
	.long	0x13a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -192
	.uleb128 0x16
	.string	"vv3"
	.byte	0x1
	.byte	0x61
	.long	0x13a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x18
	.quad	.LBB2
	.quad	.LBE2-.LBB2
	.long	0x605
	.uleb128 0x16
	.string	"v21"
	.byte	0x1
	.byte	0x68
	.long	0x13a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x16
	.string	"v22"
	.byte	0x1
	.byte	0x68
	.long	0x13a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x16
	.string	"v23"
	.byte	0x1
	.byte	0x68
	.long	0x13a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x16
	.string	"tmp"
	.byte	0x1
	.byte	0x69
	.long	0x12f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -376
	.byte	0
	.uleb128 0x19
	.quad	.LBB3
	.quad	.LBE3-.LBB3
	.uleb128 0x16
	.string	"v1"
	.byte	0x1
	.byte	0x85
	.long	0x124
	.uleb128 0x3
	.byte	0x91
	.sleb128 -352
	.uleb128 0x16
	.string	"v2"
	.byte	0x1
	.byte	0x85
	.long	0x124
	.uleb128 0x3
	.byte	0x91
	.sleb128 -336
	.uleb128 0x16
	.string	"v3"
	.byte	0x1
	.byte	0x85
	.long	0x124
	.uleb128 0x3
	.byte	0x91
	.sleb128 -304
	.uleb128 0x16
	.string	"v4"
	.byte	0x1
	.byte	0x85
	.long	0x124
	.uleb128 0x3
	.byte	0x91
	.sleb128 -296
	.uleb128 0x16
	.string	"d1"
	.byte	0x1
	.byte	0x86
	.long	0x91
	.uleb128 0x3
	.byte	0x91
	.sleb128 -344
	.uleb128 0x16
	.string	"d2"
	.byte	0x1
	.byte	0x86
	.long	0x91
	.uleb128 0x3
	.byte	0x91
	.sleb128 -328
	.uleb128 0x19
	.quad	.LBB4
	.quad	.LBE4-.LBB4
	.uleb128 0x16
	.string	"v21"
	.byte	0x1
	.byte	0x9c
	.long	0x13a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x16
	.string	"v22"
	.byte	0x1
	.byte	0x9c
	.long	0x13a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x16
	.string	"v23"
	.byte	0x1
	.byte	0x9c
	.long	0x13a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x167
	.uleb128 0x1a
	.long	.LASF95
	.byte	0x1
	.byte	0x3e
	.long	0x13a
	.quad	.LFB2
	.quad	.LFE2-.LFB2
	.uleb128 0x1
	.byte	0x9c
	.long	0x7a3
	.uleb128 0x15
	.string	"a"
	.byte	0x1
	.byte	0x3e
	.long	0x13a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x15
	.string	"b"
	.byte	0x1
	.byte	0x3e
	.long	0x13a
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x15
	.string	"c"
	.byte	0x1
	.byte	0x3e
	.long	0x13a
	.uleb128 0x2
	.byte	0x91
	.sleb128 48
	.uleb128 0x16
	.string	"p"
	.byte	0x1
	.byte	0x41
	.long	0x13a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -272
	.uleb128 0x16
	.string	"d1"
	.byte	0x1
	.byte	0x42
	.long	0x91
	.uleb128 0x3
	.byte	0x91
	.sleb128 -304
	.uleb128 0x16
	.string	"d2"
	.byte	0x1
	.byte	0x42
	.long	0x91
	.uleb128 0x3
	.byte	0x91
	.sleb128 -288
	.uleb128 0x16
	.string	"d3"
	.byte	0x1
	.byte	0x42
	.long	0x91
	.uleb128 0x3
	.byte	0x91
	.sleb128 -296
	.uleb128 0x16
	.string	"d4"
	.byte	0x1
	.byte	0x42
	.long	0x91
	.uleb128 0x3
	.byte	0x91
	.sleb128 -280
	.uleb128 0x16
	.string	"vv1"
	.byte	0x1
	.byte	0x43
	.long	0x13a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -240
	.uleb128 0x16
	.string	"vv2"
	.byte	0x1
	.byte	0x43
	.long	0x13a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -208
	.uleb128 0x16
	.string	"vv3"
	.byte	0x1
	.byte	0x43
	.long	0x13a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -176
	.uleb128 0x16
	.string	"vv4"
	.byte	0x1
	.byte	0x43
	.long	0x13a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x16
	.string	"vv5"
	.byte	0x1
	.byte	0x43
	.long	0x13a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x16
	.string	"vv6"
	.byte	0x1
	.byte	0x43
	.long	0x13a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x16
	.string	"vv7"
	.byte	0x1
	.byte	0x43
	.long	0x13a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0x1b
	.long	.LASF96
	.byte	0x1
	.byte	0x20
	.quad	.LFB1
	.quad	.LFE1-.LFB1
	.uleb128 0x1
	.byte	0x9c
	.long	0x813
	.uleb128 0x15
	.string	"p1"
	.byte	0x1
	.byte	0x21
	.long	0x13a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x15
	.string	"p2"
	.byte	0x1
	.byte	0x21
	.long	0x13a
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x16
	.string	"p1x"
	.byte	0x1
	.byte	0x2d
	.long	0x8a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x16
	.string	"p1y"
	.byte	0x1
	.byte	0x2e
	.long	0x8a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x16
	.string	"p2x"
	.byte	0x1
	.byte	0x2f
	.long	0x8a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x16
	.string	"p2y"
	.byte	0x1
	.byte	0x30
	.long	0x8a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x1c
	.long	.LASF97
	.byte	0x1
	.byte	0x12
	.quad	.LFB0
	.quad	.LFE0-.LFB0
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x15
	.string	"p1"
	.byte	0x1
	.byte	0x13
	.long	0x124
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x15
	.string	"p2"
	.byte	0x1
	.byte	0x13
	.long	0x124
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x16
	.string	"x1"
	.byte	0x1
	.byte	0x15
	.long	0x91
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x16
	.string	"x2"
	.byte	0x1
	.byte	0x15
	.long	0x91
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x16
	.string	"y1"
	.byte	0x1
	.byte	0x15
	.long	0x91
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x16
	.string	"y2"
	.byte	0x1
	.byte	0x15
	.long	0x91
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.section	.debug_abbrev,"",@progbits
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0xe
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1b
	.uleb128 0xe
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x10
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0x1
	.byte	0x1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xf
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x10
	.uleb128 0x13
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x11
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x12
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x13
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x14
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x15
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x16
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x17
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x18
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x19
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.byte	0
	.byte	0
	.uleb128 0x1a
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1b
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1c
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_aranges,"",@progbits
	.long	0x2c
	.value	0x2
	.long	.Ldebug_info0
	.byte	0x8
	.byte	0
	.value	0
	.value	0
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.quad	0
	.quad	0
	.section	.debug_line,"",@progbits
.Ldebug_line0:
	.section	.debug_str,"MS",@progbits,1
.LASF7:
	.string	"__off_t"
.LASF82:
	.string	"edge"
.LASF40:
	.string	"size_t"
.LASF61:
	.string	"_shortbuf"
.LASF89:
	.string	"GNU C11 7.5.0 -mtune=generic -march=x86-64 -g -fstack-protector-strong"
.LASF84:
	.string	"prev"
.LASF77:
	.string	"_IO_2_1_stderr_"
.LASF49:
	.string	"_IO_buf_base"
.LASF33:
	.string	"to_color"
.LASF13:
	.string	"next"
.LASF17:
	.string	"VERTEX"
.LASF91:
	.string	"/home/leonardo/Documents/Maestria/Tesis/sodden/build"
.LASF4:
	.string	"signed char"
.LASF30:
	.string	"to_lincoln"
.LASF87:
	.string	"cvxvec"
.LASF56:
	.string	"_fileno"
.LASF44:
	.string	"_IO_read_end"
.LASF6:
	.string	"long int"
.LASF42:
	.string	"_flags"
.LASF50:
	.string	"_IO_buf_end"
.LASF59:
	.string	"_cur_column"
.LASF11:
	.string	"double"
.LASF58:
	.string	"_old_offset"
.LASF63:
	.string	"_offset"
.LASF14:
	.string	"wasseen"
.LASF37:
	.string	"ahost"
.LASF83:
	.string	"my_stack"
.LASF96:
	.string	"plot_vedge"
.LASF71:
	.string	"_IO_marker"
.LASF29:
	.string	"num_edgeparts"
.LASF21:
	.string	"VERTEX_PTR"
.LASF2:
	.string	"unsigned int"
.LASF38:
	.string	"NumNodes"
.LASF3:
	.string	"long unsigned int"
.LASF93:
	.string	"_IO_FILE_plus"
.LASF47:
	.string	"_IO_write_ptr"
.LASF73:
	.string	"_sbuf"
.LASF1:
	.string	"short unsigned int"
.LASF51:
	.string	"_IO_save_base"
.LASF78:
	.string	"stdin"
.LASF62:
	.string	"_lock"
.LASF23:
	.string	"VEC2"
.LASF57:
	.string	"_flags2"
.LASF19:
	.string	"right"
.LASF36:
	.string	"interactive"
.LASF79:
	.string	"stdout"
.LASF88:
	.string	"center"
.LASF12:
	.string	"uptrint"
.LASF94:
	.string	"output_voronoi_diagram"
.LASF75:
	.string	"_IO_2_1_stdin_"
.LASF24:
	.string	"norm"
.LASF90:
	.string	"../olden/voronoi/src/output.c"
.LASF43:
	.string	"_IO_read_ptr"
.LASF22:
	.string	"QUAD_EDGE"
.LASF34:
	.string	"voronoi"
.LASF97:
	.string	"plot_dedge"
.LASF16:
	.string	"edge_rec"
.LASF92:
	.string	"_IO_lock_t"
.LASF41:
	.string	"_IO_FILE"
.LASF32:
	.string	"to_3d_out"
.LASF69:
	.string	"_mode"
.LASF10:
	.string	"float"
.LASF74:
	.string	"_pos"
.LASF54:
	.string	"_markers"
.LASF86:
	.string	"sprev"
.LASF39:
	.string	"NDim"
.LASF0:
	.string	"unsigned char"
.LASF5:
	.string	"short int"
.LASF55:
	.string	"_chain"
.LASF26:
	.string	"elts"
.LASF60:
	.string	"_vtable_offset"
.LASF76:
	.string	"_IO_2_1_stdout_"
.LASF28:
	.string	"num_vertices"
.LASF85:
	.string	"snex"
.LASF9:
	.string	"char"
.LASF20:
	.string	"EDGE_PTR"
.LASF72:
	.string	"_next"
.LASF8:
	.string	"__off64_t"
.LASF45:
	.string	"_IO_read_base"
.LASF53:
	.string	"_IO_save_end"
.LASF25:
	.string	"EDGE_STACK"
.LASF64:
	.string	"__pad1"
.LASF65:
	.string	"__pad2"
.LASF66:
	.string	"__pad3"
.LASF67:
	.string	"__pad4"
.LASF68:
	.string	"__pad5"
.LASF48:
	.string	"_IO_write_end"
.LASF70:
	.string	"_unused2"
.LASF80:
	.string	"stderr"
.LASF15:
	.string	"Buffer"
.LASF81:
	.string	"earray"
.LASF35:
	.string	"delaunay"
.LASF52:
	.string	"_IO_backup_base"
.LASF95:
	.string	"circle_center"
.LASF27:
	.string	"stack_size"
.LASF46:
	.string	"_IO_write_base"
.LASF18:
	.string	"left"
.LASF31:
	.string	"to_off"
	.ident	"GCC: (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0"
	.section	.note.GNU-stack,"",@progbits
