	.file	"tsp.c"
	.text
.Ltext0:
	.type	distance, @function
distance:
.LFB0:
	.file 1 "../olden/tsp/src/tsp.c"
	.loc 1 17 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$64, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	.loc 1 20 0
	movq	-40(%rbp), %rax
	movsd	8(%rax), %xmm0
	movsd	%xmm0, -32(%rbp)
	movq	-40(%rbp), %rax
	movsd	16(%rax), %xmm0
	movsd	%xmm0, -24(%rbp)
	.loc 1 21 0
	movq	-48(%rbp), %rax
	movsd	8(%rax), %xmm0
	movsd	%xmm0, -16(%rbp)
	movq	-48(%rbp), %rax
	movsd	16(%rax), %xmm0
	movsd	%xmm0, -8(%rbp)
	.loc 1 22 0
	movsd	-32(%rbp), %xmm0
	movapd	%xmm0, %xmm1
	subsd	-16(%rbp), %xmm1
	movsd	-32(%rbp), %xmm0
	subsd	-16(%rbp), %xmm0
	mulsd	%xmm0, %xmm1
	movsd	-24(%rbp), %xmm0
	movapd	%xmm0, %xmm2
	subsd	-8(%rbp), %xmm2
	movsd	-24(%rbp), %xmm0
	subsd	-8(%rbp), %xmm0
	mulsd	%xmm2, %xmm0
	addsd	%xmm1, %xmm0
	call	sqrt@PLT
	movq	%xmm0, %rax
	movq	%rax, -56(%rbp)
	movsd	-56(%rbp), %xmm0
	.loc 1 23 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE0:
	.size	distance, .-distance
	.type	makelist, @function
makelist:
.LFB1:
	.loc 1 27 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$64, %rsp
	movq	%rdi, -56(%rbp)
	.loc 1 30 0
	movq	-56(%rbp), %rax
	movq	%rax, -40(%rbp)
	.loc 1 32 0
	cmpq	$0, -56(%rbp)
	jne	.L4
	.loc 1 32 0 is_stmt 0 discriminator 1
	movl	$0, %eax
	jmp	.L5
.L4:
	.loc 1 34 0 is_stmt 1
	movq	-56(%rbp), %rax
	movq	24(%rax), %rax
	movq	%rax, %rdi
	call	makelist
	movq	%rax, -32(%rbp)
	.loc 1 35 0
	movq	-56(%rbp), %rax
	movq	32(%rax), %rax
	movq	%rax, %rdi
	call	makelist
	movq	%rax, -24(%rbp)
	.loc 1 37 0
	cmpq	$0, -24(%rbp)
	je	.L6
	.loc 1 37 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-56(%rbp), %rax
	movq	32(%rax), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	-56(%rbp), %rdx
	movq	%rdx, 40(%rax)
.L6:
	.loc 1 38 0 is_stmt 1
	cmpq	$0, -32(%rbp)
	je	.L7
	.loc 1 38 0 is_stmt 0 discriminator 1
	movq	-32(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-56(%rbp), %rax
	movq	24(%rax), %rax
	movq	%rax, -8(%rbp)
	cmpq	$0, -24(%rbp)
	je	.L8
	.loc 1 38 0 discriminator 2
	movq	-24(%rbp), %rax
	jmp	.L9
.L8:
	.loc 1 38 0 discriminator 3
	movq	-56(%rbp), %rax
.L9:
	.loc 1 38 0 discriminator 5
	movq	-8(%rbp), %rdx
	movq	%rax, 40(%rdx)
.L7:
	.loc 1 39 0 is_stmt 1
	movq	-56(%rbp), %rax
	movq	$0, 40(%rax)
	.loc 1 41 0
	movq	-40(%rbp), %rax
.L5:
	.loc 1 42 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE1:
	.size	makelist, .-makelist
	.type	reverse, @function
reverse:
.LFB2:
	.loc 1 45 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	movq	%rdi, -40(%rbp)
	.loc 1 48 0
	cmpq	$0, -40(%rbp)
	je	.L15
	.loc 1 51 0
	movq	-40(%rbp), %rax
	movq	48(%rax), %rax
	movq	%rax, -24(%rbp)
	.loc 1 52 0
	movq	-24(%rbp), %rax
	movq	$0, 40(%rax)
	.loc 1 53 0
	movq	-40(%rbp), %rax
	movq	$0, 48(%rax)
	.loc 1 54 0
	movq	-40(%rbp), %rax
	movq	%rax, -32(%rbp)
	.loc 1 55 0
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	.loc 1 56 0
	movq	-40(%rbp), %rax
	movq	40(%rax), %rax
	movq	%rax, -40(%rbp)
	jmp	.L13
.L14:
	.loc 1 57 0 discriminator 3
	movq	-40(%rbp), %rax
	movq	40(%rax), %rax
	movq	%rax, -8(%rbp)
	.loc 1 58 0 discriminator 3
	movq	-40(%rbp), %rax
	movq	-32(%rbp), %rdx
	movq	%rdx, 40(%rax)
	.loc 1 59 0 discriminator 3
	movq	-32(%rbp), %rax
	movq	-40(%rbp), %rdx
	movq	%rdx, 48(%rax)
	.loc 1 56 0 discriminator 3
	movq	-40(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -40(%rbp)
.L13:
	.loc 1 56 0 is_stmt 0 discriminator 1
	cmpq	$0, -40(%rbp)
	jne	.L14
	.loc 1 61 0 is_stmt 1
	movq	-16(%rbp), %rax
	movq	-24(%rbp), %rdx
	movq	%rdx, 40(%rax)
	.loc 1 62 0
	movq	-24(%rbp), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, 48(%rax)
	jmp	.L10
.L15:
	.loc 1 48 0
	nop
.L10:
	.loc 1 66 0
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE2:
	.size	reverse, .-reverse
	.type	conquer, @function
conquer:
.LFB3:
	.loc 1 69 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$112, %rsp
	movq	%rdi, -104(%rbp)
	.loc 1 74 0
	cmpq	$0, -104(%rbp)
	jne	.L17
	.loc 1 74 0 is_stmt 0 discriminator 1
	movl	$0, %eax
	jmp	.L18
.L17:
	.loc 1 75 0 is_stmt 1
	movq	-104(%rbp), %rax
	movq	%rax, %rdi
	call	makelist
	movq	%rax, -104(%rbp)
	.loc 1 79 0
	movq	-104(%rbp), %rax
	movq	%rax, -72(%rbp)
	.loc 1 80 0
	movq	-104(%rbp), %rax
	movq	40(%rax), %rax
	movq	%rax, -104(%rbp)
	.loc 1 81 0
	movq	-72(%rbp), %rax
	movq	-72(%rbp), %rdx
	movq	%rdx, 40(%rax)
	.loc 1 82 0
	movq	-72(%rbp), %rax
	movq	-72(%rbp), %rdx
	movq	%rdx, 48(%rax)
	.loc 1 84 0
	jmp	.L19
.L27:
	.loc 1 85 0
	movq	-104(%rbp), %rax
	movq	40(%rax), %rax
	movq	%rax, -64(%rbp)
	.loc 1 86 0
	movq	-72(%rbp), %rax
	movq	%rax, -88(%rbp)
	.loc 1 87 0
	movq	-72(%rbp), %rdx
	movq	-104(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	distance
	movq	%xmm0, %rax
	movq	%rax, -80(%rbp)
	.loc 1 88 0
	movq	-72(%rbp), %rax
	movq	40(%rax), %rax
	movq	%rax, -96(%rbp)
	jmp	.L20
.L23:
	.loc 1 89 0
	movq	-104(%rbp), %rdx
	movq	-96(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	distance
	movq	%xmm0, %rax
	movq	%rax, -8(%rbp)
	.loc 1 90 0
	movsd	-80(%rbp), %xmm0
	ucomisd	-8(%rbp), %xmm0
	jbe	.L21
	.loc 1 91 0
	movsd	-8(%rbp), %xmm0
	movsd	%xmm0, -80(%rbp)
	.loc 1 92 0
	movq	-96(%rbp), %rax
	movq	%rax, -88(%rbp)
.L21:
	.loc 1 88 0 discriminator 2
	movq	-96(%rbp), %rax
	movq	40(%rax), %rax
	movq	%rax, -96(%rbp)
.L20:
	.loc 1 88 0 is_stmt 0 discriminator 1
	movq	-96(%rbp), %rax
	cmpq	-72(%rbp), %rax
	jne	.L23
	.loc 1 95 0 is_stmt 1
	movq	-88(%rbp), %rax
	movq	40(%rax), %rax
	movq	%rax, -56(%rbp)
	.loc 1 96 0
	movq	-88(%rbp), %rax
	movq	48(%rax), %rax
	movq	%rax, -48(%rbp)
	.loc 1 97 0
	movq	-56(%rbp), %rdx
	movq	-88(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	distance
	movq	%xmm0, %rax
	movq	%rax, -40(%rbp)
	.loc 1 98 0
	movq	-48(%rbp), %rdx
	movq	-88(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	distance
	movq	%xmm0, %rax
	movq	%rax, -32(%rbp)
	.loc 1 99 0
	movq	-56(%rbp), %rdx
	movq	-104(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	distance
	movq	%xmm0, %rax
	movq	%rax, -24(%rbp)
	.loc 1 100 0
	movq	-48(%rbp), %rdx
	movq	-104(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	distance
	movq	%xmm0, %rax
	movq	%rax, -16(%rbp)
	.loc 1 101 0
	movsd	-16(%rbp), %xmm0
	movapd	%xmm0, %xmm1
	subsd	-32(%rbp), %xmm1
	movsd	-24(%rbp), %xmm0
	subsd	-40(%rbp), %xmm0
	ucomisd	%xmm1, %xmm0
	jbe	.L30
	.loc 1 103 0
	movq	-48(%rbp), %rax
	movq	-104(%rbp), %rdx
	movq	%rdx, 40(%rax)
	.loc 1 104 0
	movq	-104(%rbp), %rax
	movq	-88(%rbp), %rdx
	movq	%rdx, 40(%rax)
	.loc 1 105 0
	movq	-104(%rbp), %rax
	movq	-48(%rbp), %rdx
	movq	%rdx, 48(%rax)
	.loc 1 106 0
	movq	-88(%rbp), %rax
	movq	-104(%rbp), %rdx
	movq	%rdx, 48(%rax)
	jmp	.L26
.L30:
	.loc 1 109 0
	movq	-56(%rbp), %rax
	movq	-104(%rbp), %rdx
	movq	%rdx, 48(%rax)
	.loc 1 110 0
	movq	-104(%rbp), %rax
	movq	-56(%rbp), %rdx
	movq	%rdx, 40(%rax)
	.loc 1 111 0
	movq	-88(%rbp), %rax
	movq	-104(%rbp), %rdx
	movq	%rdx, 40(%rax)
	.loc 1 112 0
	movq	-104(%rbp), %rax
	movq	-88(%rbp), %rdx
	movq	%rdx, 48(%rax)
.L26:
	.loc 1 84 0
	movq	-64(%rbp), %rax
	movq	%rax, -104(%rbp)
.L19:
	.loc 1 84 0 is_stmt 0 discriminator 1
	cmpq	$0, -104(%rbp)
	jne	.L27
	.loc 1 117 0 is_stmt 1
	movq	-72(%rbp), %rax
.L18:
	.loc 1 118 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3:
	.size	conquer, .-conquer
	.type	merge, @function
merge:
.LFB4:
	.loc 1 121 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$224, %rsp
	movq	%rdi, -200(%rbp)
	movq	%rsi, -208(%rbp)
	movq	%rdx, -216(%rbp)
	movl	%ecx, -220(%rbp)
	.loc 1 130 0
	movq	-200(%rbp), %rax
	movq	%rax, -176(%rbp)
	.loc 1 131 0
	movq	-200(%rbp), %rdx
	movq	-216(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	distance
	movq	%xmm0, %rax
	movq	%rax, -168(%rbp)
	.loc 1 132 0
	movq	-200(%rbp), %rax
	movq	%rax, -96(%rbp)
	.loc 1 133 0
	movq	-200(%rbp), %rax
	movq	40(%rax), %rax
	movq	%rax, -200(%rbp)
	jmp	.L32
.L35:
	.loc 1 134 0
	movq	-216(%rbp), %rdx
	movq	-200(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	distance
	movq	%xmm0, %rax
	movq	%rax, -8(%rbp)
	.loc 1 135 0
	movsd	-168(%rbp), %xmm0
	ucomisd	-8(%rbp), %xmm0
	jbe	.L33
	.loc 1 136 0
	movsd	-8(%rbp), %xmm0
	movsd	%xmm0, -168(%rbp)
	.loc 1 137 0
	movq	-200(%rbp), %rax
	movq	%rax, -176(%rbp)
.L33:
	.loc 1 133 0 discriminator 2
	movq	-200(%rbp), %rax
	movq	40(%rax), %rax
	movq	%rax, -200(%rbp)
.L32:
	.loc 1 133 0 is_stmt 0 discriminator 1
	movq	-200(%rbp), %rax
	cmpq	-96(%rbp), %rax
	jne	.L35
	.loc 1 140 0 is_stmt 1
	movq	-176(%rbp), %rax
	movq	40(%rax), %rax
	movq	%rax, -88(%rbp)
	.loc 1 141 0
	movq	-176(%rbp), %rax
	movq	48(%rax), %rax
	movq	%rax, -80(%rbp)
	.loc 1 142 0
	movq	-88(%rbp), %rdx
	movq	-176(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	distance
	movq	%xmm0, %rax
	movq	%rax, -72(%rbp)
	.loc 1 143 0
	movq	-80(%rbp), %rdx
	movq	-176(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	distance
	movq	%xmm0, %rax
	movq	%rax, -64(%rbp)
	.loc 1 144 0
	movq	-88(%rbp), %rdx
	movq	-216(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	distance
	movq	%xmm0, %rax
	movq	%rax, -56(%rbp)
	.loc 1 145 0
	movq	-80(%rbp), %rdx
	movq	-216(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	distance
	movq	%xmm0, %rax
	movq	%rax, -48(%rbp)
	.loc 1 146 0
	movsd	-48(%rbp), %xmm0
	movapd	%xmm0, %xmm1
	subsd	-64(%rbp), %xmm1
	movsd	-56(%rbp), %xmm0
	subsd	-72(%rbp), %xmm0
	ucomisd	%xmm1, %xmm0
	jbe	.L66
	.loc 1 148 0
	movq	-80(%rbp), %rax
	movq	%rax, -152(%rbp)
	.loc 1 149 0
	movq	-176(%rbp), %rax
	movq	%rax, -160(%rbp)
	.loc 1 150 0
	movsd	-168(%rbp), %xmm0
	movsd	%xmm0, -128(%rbp)
	.loc 1 151 0
	movsd	-48(%rbp), %xmm0
	movsd	%xmm0, -120(%rbp)
	jmp	.L38
.L66:
	.loc 1 154 0
	movq	-176(%rbp), %rax
	movq	%rax, -152(%rbp)
	.loc 1 155 0
	movq	-88(%rbp), %rax
	movq	%rax, -160(%rbp)
	.loc 1 156 0
	movsd	-168(%rbp), %xmm0
	movsd	%xmm0, -120(%rbp)
	.loc 1 157 0
	movsd	-56(%rbp), %xmm0
	movsd	%xmm0, -128(%rbp)
.L38:
	.loc 1 161 0
	movq	-208(%rbp), %rax
	movq	%rax, -176(%rbp)
	.loc 1 162 0
	movq	-208(%rbp), %rdx
	movq	-216(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	distance
	movq	%xmm0, %rax
	movq	%rax, -168(%rbp)
	.loc 1 163 0
	movq	-208(%rbp), %rax
	movq	%rax, -96(%rbp)
	.loc 1 164 0
	movq	-208(%rbp), %rax
	movq	40(%rax), %rax
	movq	%rax, -208(%rbp)
	jmp	.L39
.L42:
	.loc 1 165 0
	movq	-216(%rbp), %rdx
	movq	-208(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	distance
	movq	%xmm0, %rax
	movq	%rax, -8(%rbp)
	.loc 1 166 0
	movsd	-168(%rbp), %xmm0
	ucomisd	-8(%rbp), %xmm0
	jbe	.L40
	.loc 1 167 0
	movsd	-8(%rbp), %xmm0
	movsd	%xmm0, -168(%rbp)
	.loc 1 168 0
	movq	-208(%rbp), %rax
	movq	%rax, -176(%rbp)
.L40:
	.loc 1 164 0 discriminator 2
	movq	-208(%rbp), %rax
	movq	40(%rax), %rax
	movq	%rax, -208(%rbp)
.L39:
	.loc 1 164 0 is_stmt 0 discriminator 1
	movq	-208(%rbp), %rax
	cmpq	-96(%rbp), %rax
	jne	.L42
	.loc 1 171 0 is_stmt 1
	movq	-176(%rbp), %rax
	movq	40(%rax), %rax
	movq	%rax, -88(%rbp)
	.loc 1 172 0
	movq	-176(%rbp), %rax
	movq	48(%rax), %rax
	movq	%rax, -80(%rbp)
	.loc 1 173 0
	movq	-88(%rbp), %rdx
	movq	-176(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	distance
	movq	%xmm0, %rax
	movq	%rax, -72(%rbp)
	.loc 1 174 0
	movq	-80(%rbp), %rdx
	movq	-176(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	distance
	movq	%xmm0, %rax
	movq	%rax, -64(%rbp)
	.loc 1 175 0
	movq	-88(%rbp), %rdx
	movq	-216(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	distance
	movq	%xmm0, %rax
	movq	%rax, -56(%rbp)
	.loc 1 176 0
	movq	-80(%rbp), %rdx
	movq	-216(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	distance
	movq	%xmm0, %rax
	movq	%rax, -48(%rbp)
	.loc 1 177 0
	movsd	-48(%rbp), %xmm0
	movapd	%xmm0, %xmm1
	subsd	-64(%rbp), %xmm1
	movsd	-56(%rbp), %xmm0
	subsd	-72(%rbp), %xmm0
	ucomisd	%xmm1, %xmm0
	jbe	.L67
	.loc 1 179 0
	movq	-80(%rbp), %rax
	movq	%rax, -136(%rbp)
	.loc 1 180 0
	movq	-176(%rbp), %rax
	movq	%rax, -144(%rbp)
	.loc 1 181 0
	movsd	-168(%rbp), %xmm0
	movsd	%xmm0, -112(%rbp)
	.loc 1 182 0
	movsd	-48(%rbp), %xmm0
	movsd	%xmm0, -104(%rbp)
	jmp	.L45
.L67:
	.loc 1 185 0
	movq	-176(%rbp), %rax
	movq	%rax, -136(%rbp)
	.loc 1 186 0
	movq	-88(%rbp), %rax
	movq	%rax, -144(%rbp)
	.loc 1 187 0
	movsd	-168(%rbp), %xmm0
	movsd	%xmm0, -104(%rbp)
	.loc 1 188 0
	movsd	-56(%rbp), %xmm0
	movsd	%xmm0, -112(%rbp)
.L45:
	.loc 1 196 0
	movq	-144(%rbp), %rdx
	movq	-160(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	distance
	movq	%xmm0, %rax
	movq	%rax, -40(%rbp)
	.loc 1 197 0
	movq	-136(%rbp), %rdx
	movq	-160(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	distance
	movq	%xmm0, %rax
	movq	%rax, -32(%rbp)
	.loc 1 198 0
	movq	-144(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	distance
	movq	%xmm0, %rax
	movq	%rax, -24(%rbp)
	.loc 1 199 0
	movq	-136(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	distance
	movq	%xmm0, %rax
	movq	%rax, -16(%rbp)
	.loc 1 201 0
	movsd	-120(%rbp), %xmm0
	addsd	-104(%rbp), %xmm0
	movsd	-40(%rbp), %xmm1
	addsd	%xmm1, %xmm0
	movsd	%xmm0, -168(%rbp)
	.loc 1 202 0
	movl	$1, -180(%rbp)
	.loc 1 204 0
	movsd	-120(%rbp), %xmm0
	addsd	-112(%rbp), %xmm0
	movsd	-32(%rbp), %xmm1
	addsd	%xmm1, %xmm0
	movsd	%xmm0, -8(%rbp)
	.loc 1 205 0
	movsd	-168(%rbp), %xmm0
	ucomisd	-8(%rbp), %xmm0
	jbe	.L46
	.loc 1 206 0
	movl	$2, -180(%rbp)
	.loc 1 207 0
	movsd	-8(%rbp), %xmm0
	movsd	%xmm0, -168(%rbp)
.L46:
	.loc 1 210 0
	movsd	-128(%rbp), %xmm0
	addsd	-104(%rbp), %xmm0
	movsd	-24(%rbp), %xmm1
	addsd	%xmm1, %xmm0
	movsd	%xmm0, -8(%rbp)
	.loc 1 211 0
	movsd	-168(%rbp), %xmm0
	ucomisd	-8(%rbp), %xmm0
	jbe	.L48
	.loc 1 212 0
	movl	$3, -180(%rbp)
	.loc 1 213 0
	movsd	-8(%rbp), %xmm0
	movsd	%xmm0, -168(%rbp)
.L48:
	.loc 1 216 0
	movsd	-128(%rbp), %xmm0
	addsd	-112(%rbp), %xmm0
	movsd	-16(%rbp), %xmm1
	addsd	%xmm1, %xmm0
	movsd	%xmm0, -8(%rbp)
	.loc 1 217 0
	movsd	-168(%rbp), %xmm0
	ucomisd	-8(%rbp), %xmm0
	jbe	.L50
	.loc 1 217 0 is_stmt 0 discriminator 1
	movl	$4, -180(%rbp)
.L50:
	.loc 1 220 0 is_stmt 1
	movl	-180(%rbp), %eax
	cmpl	$2, %eax
	je	.L53
	cmpl	$2, %eax
	jg	.L54
	cmpl	$1, %eax
	je	.L55
	jmp	.L52
.L54:
	cmpl	$3, %eax
	je	.L56
	cmpl	$4, %eax
	je	.L57
	jmp	.L52
.L55:
	.loc 1 224 0
	movq	-144(%rbp), %rax
	movq	%rax, %rdi
	call	reverse
	.loc 1 225 0
	movq	-152(%rbp), %rax
	movq	-216(%rbp), %rdx
	movq	%rdx, 40(%rax)
	.loc 1 226 0
	movq	-216(%rbp), %rax
	movq	-152(%rbp), %rdx
	movq	%rdx, 48(%rax)
	.loc 1 227 0
	movq	-216(%rbp), %rax
	movq	-136(%rbp), %rdx
	movq	%rdx, 40(%rax)
	.loc 1 228 0
	movq	-136(%rbp), %rax
	movq	-216(%rbp), %rdx
	movq	%rdx, 48(%rax)
	.loc 1 229 0
	movq	-144(%rbp), %rax
	movq	-160(%rbp), %rdx
	movq	%rdx, 40(%rax)
	.loc 1 230 0
	movq	-160(%rbp), %rax
	movq	-144(%rbp), %rdx
	movq	%rdx, 48(%rax)
	.loc 1 231 0
	jmp	.L52
.L53:
	.loc 1 234 0
	movq	-152(%rbp), %rax
	movq	-216(%rbp), %rdx
	movq	%rdx, 40(%rax)
	.loc 1 235 0
	movq	-216(%rbp), %rax
	movq	-152(%rbp), %rdx
	movq	%rdx, 48(%rax)
	.loc 1 236 0
	movq	-216(%rbp), %rax
	movq	-144(%rbp), %rdx
	movq	%rdx, 40(%rax)
	.loc 1 237 0
	movq	-144(%rbp), %rax
	movq	-216(%rbp), %rdx
	movq	%rdx, 48(%rax)
	.loc 1 238 0
	movq	-136(%rbp), %rax
	movq	-160(%rbp), %rdx
	movq	%rdx, 40(%rax)
	.loc 1 239 0
	movq	-160(%rbp), %rax
	movq	-136(%rbp), %rdx
	movq	%rdx, 48(%rax)
	.loc 1 240 0
	jmp	.L52
.L56:
	.loc 1 243 0
	movq	-136(%rbp), %rax
	movq	-216(%rbp), %rdx
	movq	%rdx, 40(%rax)
	.loc 1 244 0
	movq	-216(%rbp), %rax
	movq	-136(%rbp), %rdx
	movq	%rdx, 48(%rax)
	.loc 1 245 0
	movq	-216(%rbp), %rax
	movq	-160(%rbp), %rdx
	movq	%rdx, 40(%rax)
	.loc 1 246 0
	movq	-160(%rbp), %rax
	movq	-216(%rbp), %rdx
	movq	%rdx, 48(%rax)
	.loc 1 247 0
	movq	-152(%rbp), %rax
	movq	-144(%rbp), %rdx
	movq	%rdx, 40(%rax)
	.loc 1 248 0
	movq	-144(%rbp), %rax
	movq	-152(%rbp), %rdx
	movq	%rdx, 48(%rax)
	.loc 1 249 0
	jmp	.L52
.L57:
	.loc 1 253 0
	movq	-160(%rbp), %rax
	movq	%rax, %rdi
	call	reverse
	.loc 1 254 0
	movq	-160(%rbp), %rax
	movq	-216(%rbp), %rdx
	movq	%rdx, 40(%rax)
	.loc 1 255 0
	movq	-216(%rbp), %rax
	movq	-160(%rbp), %rdx
	movq	%rdx, 48(%rax)
	.loc 1 256 0
	movq	-216(%rbp), %rax
	movq	-144(%rbp), %rdx
	movq	%rdx, 40(%rax)
	.loc 1 257 0
	movq	-144(%rbp), %rax
	movq	-216(%rbp), %rdx
	movq	%rdx, 48(%rax)
	.loc 1 258 0
	movq	-136(%rbp), %rax
	movq	-152(%rbp), %rdx
	movq	%rdx, 40(%rax)
	.loc 1 259 0
	movq	-152(%rbp), %rax
	movq	-136(%rbp), %rdx
	movq	%rdx, 48(%rax)
	.loc 1 260 0
	nop
.L52:
	.loc 1 262 0
	movq	-216(%rbp), %rax
	.loc 1 263 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE4:
	.size	merge, .-merge
	.globl	tsp
	.type	tsp, @function
tsp:
.LFB5:
	.loc 1 266 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$64, %rsp
	movq	%rdi, -56(%rbp)
	movl	%esi, -60(%rbp)
	movl	%edx, -64(%rbp)
	.loc 1 273 0
	movl	-64(%rbp), %eax
	movl	%eax, %edx
	shrl	$31, %edx
	addl	%edx, %eax
	sarl	%eax
	movl	%eax, -36(%rbp)
	.loc 1 275 0
	movq	-56(%rbp), %rax
	movl	(%rax), %eax
	cmpl	%eax, -60(%rbp)
	jl	.L69
	.loc 1 275 0 is_stmt 0 discriminator 1
	movq	-56(%rbp), %rax
	movq	%rax, %rdi
	call	conquer
	jmp	.L70
.L69:
	.loc 1 277 0 is_stmt 1
	movq	-56(%rbp), %rax
	movq	24(%rax), %rax
	movq	%rax, -32(%rbp)
	movq	-56(%rbp), %rax
	movq	32(%rax), %rax
	movq	%rax, -24(%rbp)
	.loc 1 279 0
	movl	-36(%rbp), %edx
	movl	-60(%rbp), %ecx
	movq	-32(%rbp), %rax
	movl	%ecx, %esi
	movq	%rax, %rdi
	call	tsp
	movq	%rax, -16(%rbp)
	.loc 1 283 0
	movl	-36(%rbp), %edx
	movl	-60(%rbp), %ecx
	movq	-24(%rbp), %rax
	movl	%ecx, %esi
	movq	%rax, %rdi
	call	tsp
	movq	%rax, -8(%rbp)
	.loc 1 289 0
	movl	-64(%rbp), %ecx
	movq	-56(%rbp), %rdx
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rax
	movq	%rax, %rdi
	call	merge
.L70:
	.loc 1 291 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE5:
	.size	tsp, .-tsp
.Letext0:
	.file 2 "../olden/tsp/src/tsp.h"
	.section	.debug_info,"",@progbits
.Ldebug_info0:
	.long	0x526
	.value	0x4
	.long	.Ldebug_abbrev0
	.byte	0x8
	.uleb128 0x1
	.long	.LASF38
	.byte	0xc
	.long	.LASF39
	.long	.LASF40
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.long	.Ldebug_line0
	.uleb128 0x2
	.long	.LASF0
	.byte	0x2
	.byte	0x5
	.long	0x38
	.uleb128 0x3
	.byte	0x4
	.byte	0x5
	.string	"int"
	.uleb128 0x2
	.long	.LASF1
	.byte	0x2
	.byte	0x5
	.long	0x38
	.uleb128 0x2
	.long	.LASF2
	.byte	0x2
	.byte	0x8
	.long	0x38
	.uleb128 0x4
	.long	.LASF41
	.byte	0x38
	.byte	0x2
	.byte	0x10
	.long	0xb1
	.uleb128 0x5
	.string	"sz"
	.byte	0x2
	.byte	0x11
	.long	0x38
	.byte	0
	.uleb128 0x5
	.string	"x"
	.byte	0x2
	.byte	0x12
	.long	0xb1
	.byte	0x8
	.uleb128 0x5
	.string	"y"
	.byte	0x2
	.byte	0x12
	.long	0xb1
	.byte	0x10
	.uleb128 0x6
	.long	.LASF3
	.byte	0x2
	.byte	0x13
	.long	0xb8
	.byte	0x18
	.uleb128 0x6
	.long	.LASF4
	.byte	0x2
	.byte	0x13
	.long	0xb8
	.byte	0x20
	.uleb128 0x6
	.long	.LASF5
	.byte	0x2
	.byte	0x15
	.long	0xb8
	.byte	0x28
	.uleb128 0x6
	.long	.LASF6
	.byte	0x2
	.byte	0x15
	.long	0xb8
	.byte	0x30
	.byte	0
	.uleb128 0x7
	.byte	0x8
	.byte	0x4
	.long	.LASF7
	.uleb128 0x8
	.byte	0x8
	.long	0x55
	.uleb128 0x9
	.long	.LASF42
	.byte	0x2
	.byte	0x1a
	.long	0xb8
	.uleb128 0xa
	.string	"tsp"
	.byte	0x1
	.value	0x10a
	.long	0xbe
	.quad	.LFB5
	.quad	.LFE5-.LFB5
	.uleb128 0x1
	.byte	0x9c
	.long	0x164
	.uleb128 0xb
	.string	"t"
	.byte	0x1
	.value	0x10a
	.long	0xbe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0xb
	.string	"sz"
	.byte	0x1
	.value	0x10a
	.long	0x38
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0xc
	.long	.LASF8
	.byte	0x1
	.value	0x10a
	.long	0x38
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0xd
	.long	.LASF3
	.byte	0x1
	.value	0x10b
	.long	0xbe
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0xd
	.long	.LASF4
	.byte	0x1
	.value	0x10b
	.long	0xbe
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0xd
	.long	.LASF9
	.byte	0x1
	.value	0x10c
	.long	0xbe
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0xd
	.long	.LASF10
	.byte	0x1
	.value	0x110
	.long	0xbe
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0xd
	.long	.LASF11
	.byte	0x1
	.value	0x111
	.long	0x38
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.byte	0
	.uleb128 0xe
	.long	.LASF27
	.byte	0x1
	.byte	0x79
	.long	0xbe
	.quad	.LFB4
	.quad	.LFE4-.LFB4
	.uleb128 0x1
	.byte	0x9c
	.long	0x30b
	.uleb128 0xf
	.string	"a"
	.byte	0x1
	.byte	0x79
	.long	0xbe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -216
	.uleb128 0xf
	.string	"b"
	.byte	0x1
	.byte	0x79
	.long	0xbe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -224
	.uleb128 0xf
	.string	"t"
	.byte	0x1
	.byte	0x79
	.long	0xbe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -232
	.uleb128 0x10
	.long	.LASF8
	.byte	0x1
	.byte	0x79
	.long	0x38
	.uleb128 0x3
	.byte	0x91
	.sleb128 -236
	.uleb128 0x11
	.string	"min"
	.byte	0x1
	.byte	0x7a
	.long	0xbe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -192
	.uleb128 0x12
	.long	.LASF5
	.byte	0x1
	.byte	0x7a
	.long	0xbe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x12
	.long	.LASF6
	.byte	0x1
	.byte	0x7a
	.long	0xbe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x11
	.string	"tmp"
	.byte	0x1
	.byte	0x7a
	.long	0xbe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x12
	.long	.LASF12
	.byte	0x1
	.byte	0x7b
	.long	0xb1
	.uleb128 0x3
	.byte	0x91
	.sleb128 -184
	.uleb128 0x12
	.long	.LASF13
	.byte	0x1
	.byte	0x7b
	.long	0xb1
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x12
	.long	.LASF14
	.byte	0x1
	.byte	0x7b
	.long	0xb1
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x12
	.long	.LASF15
	.byte	0x1
	.byte	0x7b
	.long	0xb1
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x12
	.long	.LASF16
	.byte	0x1
	.byte	0x7b
	.long	0xb1
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x12
	.long	.LASF17
	.byte	0x1
	.byte	0x7b
	.long	0xb1
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x11
	.string	"n1"
	.byte	0x1
	.byte	0x7c
	.long	0xbe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -176
	.uleb128 0x11
	.string	"p1"
	.byte	0x1
	.byte	0x7c
	.long	0xbe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -168
	.uleb128 0x11
	.string	"n2"
	.byte	0x1
	.byte	0x7c
	.long	0xbe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x11
	.string	"p2"
	.byte	0x1
	.byte	0x7c
	.long	0xbe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x12
	.long	.LASF18
	.byte	0x1
	.byte	0x7d
	.long	0xb1
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x12
	.long	.LASF19
	.byte	0x1
	.byte	0x7d
	.long	0xb1
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x12
	.long	.LASF20
	.byte	0x1
	.byte	0x7d
	.long	0xb1
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x12
	.long	.LASF21
	.byte	0x1
	.byte	0x7d
	.long	0xb1
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x12
	.long	.LASF22
	.byte	0x1
	.byte	0x7e
	.long	0xb1
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x12
	.long	.LASF23
	.byte	0x1
	.byte	0x7e
	.long	0xb1
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x12
	.long	.LASF24
	.byte	0x1
	.byte	0x7e
	.long	0xb1
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x12
	.long	.LASF25
	.byte	0x1
	.byte	0x7e
	.long	0xb1
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x12
	.long	.LASF26
	.byte	0x1
	.byte	0x7f
	.long	0x38
	.uleb128 0x3
	.byte	0x91
	.sleb128 -196
	.byte	0
	.uleb128 0xe
	.long	.LASF28
	.byte	0x1
	.byte	0x45
	.long	0xbe
	.quad	.LFB3
	.quad	.LFE3-.LFB3
	.uleb128 0x1
	.byte	0x9c
	.long	0x3e8
	.uleb128 0xf
	.string	"t"
	.byte	0x1
	.byte	0x45
	.long	0xbe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x12
	.long	.LASF29
	.byte	0x1
	.byte	0x46
	.long	0xbe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x11
	.string	"tmp"
	.byte	0x1
	.byte	0x46
	.long	0xbe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x11
	.string	"min"
	.byte	0x1
	.byte	0x46
	.long	0xbe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x12
	.long	.LASF6
	.byte	0x1
	.byte	0x46
	.long	0xbe
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x12
	.long	.LASF5
	.byte	0x1
	.byte	0x46
	.long	0xbe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x12
	.long	.LASF30
	.byte	0x1
	.byte	0x46
	.long	0xbe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x12
	.long	.LASF12
	.byte	0x1
	.byte	0x47
	.long	0xb1
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x12
	.long	.LASF13
	.byte	0x1
	.byte	0x47
	.long	0xb1
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x12
	.long	.LASF14
	.byte	0x1
	.byte	0x48
	.long	0xb1
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x12
	.long	.LASF15
	.byte	0x1
	.byte	0x48
	.long	0xb1
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x12
	.long	.LASF16
	.byte	0x1
	.byte	0x48
	.long	0xb1
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x12
	.long	.LASF17
	.byte	0x1
	.byte	0x48
	.long	0xb1
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x13
	.long	.LASF36
	.byte	0x1
	.byte	0x2d
	.quad	.LFB2
	.quad	.LFE2-.LFB2
	.uleb128 0x1
	.byte	0x9c
	.long	0x44a
	.uleb128 0xf
	.string	"t"
	.byte	0x1
	.byte	0x2d
	.long	0xbe
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x12
	.long	.LASF6
	.byte	0x1
	.byte	0x2e
	.long	0xbe
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x12
	.long	.LASF31
	.byte	0x1
	.byte	0x2e
	.long	0xbe
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x12
	.long	.LASF5
	.byte	0x1
	.byte	0x2e
	.long	0xbe
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x11
	.string	"tmp"
	.byte	0x1
	.byte	0x2e
	.long	0xbe
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0xe
	.long	.LASF32
	.byte	0x1
	.byte	0x1b
	.long	0xbe
	.quad	.LFB1
	.quad	.LFE1-.LFB1
	.uleb128 0x1
	.byte	0x9c
	.long	0x4bf
	.uleb128 0xf
	.string	"t"
	.byte	0x1
	.byte	0x1b
	.long	0xbe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x12
	.long	.LASF3
	.byte	0x1
	.byte	0x1c
	.long	0xbe
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x12
	.long	.LASF4
	.byte	0x1
	.byte	0x1c
	.long	0xbe
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x12
	.long	.LASF33
	.byte	0x1
	.byte	0x1d
	.long	0xbe
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x12
	.long	.LASF34
	.byte	0x1
	.byte	0x1d
	.long	0xbe
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x12
	.long	.LASF35
	.byte	0x1
	.byte	0x1e
	.long	0xbe
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0x14
	.long	.LASF37
	.byte	0x1
	.byte	0x11
	.long	0xb1
	.quad	.LFB0
	.quad	.LFE0-.LFB0
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0xf
	.string	"a"
	.byte	0x1
	.byte	0x11
	.long	0xbe
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0xf
	.string	"b"
	.byte	0x1
	.byte	0x11
	.long	0xbe
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x11
	.string	"ax"
	.byte	0x1
	.byte	0x12
	.long	0xb1
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x11
	.string	"ay"
	.byte	0x1
	.byte	0x12
	.long	0xb1
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x11
	.string	"bx"
	.byte	0x1
	.byte	0x12
	.long	0xb1
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x11
	.string	"by"
	.byte	0x1
	.byte	0x12
	.long	0xb1
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.section	.debug_abbrev,"",@progbits
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0xe
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1b
	.uleb128 0xe
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x10
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xf
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x10
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x11
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x12
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x13
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x14
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_aranges,"",@progbits
	.long	0x2c
	.value	0x2
	.long	.Ldebug_info0
	.byte	0x8
	.byte	0
	.value	0
	.value	0
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.quad	0
	.quad	0
	.section	.debug_line,"",@progbits
.Ldebug_line0:
	.section	.debug_str,"MS",@progbits,1
.LASF24:
	.string	"p1ton2"
.LASF5:
	.string	"next"
.LASF25:
	.string	"p1top2"
.LASF15:
	.string	"mintoprev"
.LASF9:
	.string	"leftval"
.LASF23:
	.string	"n1top2"
.LASF3:
	.string	"left"
.LASF14:
	.string	"mintonext"
.LASF17:
	.string	"ttoprev"
.LASF37:
	.string	"distance"
.LASF35:
	.string	"retval"
.LASF36:
	.string	"reverse"
.LASF4:
	.string	"right"
.LASF8:
	.string	"nproc"
.LASF34:
	.string	"tright"
.LASF7:
	.string	"double"
.LASF11:
	.string	"nproc_2"
.LASF39:
	.string	"../olden/tsp/src/tsp.c"
.LASF13:
	.string	"test"
.LASF2:
	.string	"flag"
.LASF28:
	.string	"conquer"
.LASF41:
	.string	"tree"
.LASF27:
	.string	"merge"
.LASF18:
	.string	"tton1"
.LASF20:
	.string	"tton2"
.LASF22:
	.string	"n1ton2"
.LASF19:
	.string	"ttop1"
.LASF16:
	.string	"ttonext"
.LASF40:
	.string	"/home/leonardo/Documents/Maestria/Tesis/sodden/build"
.LASF21:
	.string	"ttop2"
.LASF10:
	.string	"rightval"
.LASF33:
	.string	"tleft"
.LASF30:
	.string	"donext"
.LASF38:
	.string	"GNU C11 7.5.0 -mtune=generic -march=x86-64 -g -fstack-protector-strong"
.LASF29:
	.string	"cycle"
.LASF1:
	.string	"NDim"
.LASF32:
	.string	"makelist"
.LASF42:
	.string	"Tree"
.LASF26:
	.string	"choice"
.LASF31:
	.string	"back"
.LASF6:
	.string	"prev"
.LASF12:
	.string	"mindist"
.LASF0:
	.string	"NumNodes"
	.ident	"GCC: (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0"
	.section	.note.GNU-stack,"",@progbits
