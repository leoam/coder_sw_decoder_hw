	.file	"bitonic.c"
	.text
.Ltext0:
	.comm	NumNodes,4,4
	.comm	NDim,4,4
	.globl	flag
	.bss
	.align 4
	.type	flag, @object
	.size	flag, 4
flag:
	.zero	4
	.globl	foo
	.align 4
	.type	foo, @object
	.size	foo, 4
foo:
	.zero	4
	.section	.rodata
.LC0:
	.string	"%d @ 0x%x\n"
	.text
	.globl	InOrder
	.type	InOrder, @function
InOrder:
.LFB0:
	.file 1 "../olden/bisort/src/bitonic.c"
	.loc 1 29 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	.loc 1 31 0
	cmpq	$0, -24(%rbp)
	je	.L4
.LBB2:
	.loc 1 32 0
	movq	-24(%rbp), %rax
	movq	8(%rax), %rax
	movq	%rax, -16(%rbp)
	.loc 1 33 0
	movq	-24(%rbp), %rax
	movq	16(%rax), %rax
	movq	%rax, -8(%rbp)
	.loc 1 34 0
	movq	-16(%rbp), %rax
	movq	%rax, %rdi
	call	InOrder
	.loc 1 36 0
	movzbl	counter.2165(%rip), %eax
	leal	1(%rax), %edx
	movb	%dl, counter.2165(%rip)
	testb	%al, %al
	jne	.L3
	.loc 1 37 0
	movq	-24(%rbp), %rax
	movl	(%rax), %eax
	movl	$0, %edx
	movl	%eax, %esi
	leaq	.LC0(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
.L3:
	.loc 1 38 0
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	call	InOrder
.L4:
.LBE2:
	.loc 1 40 0
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE0:
	.size	InOrder, .-InOrder
	.globl	mult
	.type	mult, @function
mult:
.LFB1:
	.loc 1 42 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	.loc 1 45 0
	movl	-20(%rbp), %ecx
	movl	$1759218605, %edx
	movl	%ecx, %eax
	imull	%edx
	sarl	$12, %edx
	movl	%ecx, %eax
	sarl	$31, %eax
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, -16(%rbp)
	movl	-20(%rbp), %ecx
	movl	$1759218605, %edx
	movl	%ecx, %eax
	imull	%edx
	sarl	$12, %edx
	movl	%ecx, %eax
	sarl	$31, %eax
	subl	%eax, %edx
	movl	%edx, %eax
	imull	$10000, %eax, %eax
	subl	%eax, %ecx
	movl	%ecx, %eax
	movl	%eax, -12(%rbp)
	.loc 1 46 0
	movl	-24(%rbp), %ecx
	movl	$1759218605, %edx
	movl	%ecx, %eax
	imull	%edx
	sarl	$12, %edx
	movl	%ecx, %eax
	sarl	$31, %eax
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, -8(%rbp)
	movl	-24(%rbp), %ecx
	movl	$1759218605, %edx
	movl	%ecx, %eax
	imull	%edx
	sarl	$12, %edx
	movl	%ecx, %eax
	sarl	$31, %eax
	subl	%eax, %edx
	movl	%edx, %eax
	imull	$10000, %eax, %eax
	subl	%eax, %ecx
	movl	%ecx, %eax
	movl	%eax, -4(%rbp)
	.loc 1 47 0
	movl	-12(%rbp), %eax
	imull	-8(%rbp), %eax
	movl	%eax, %edx
	movl	-16(%rbp), %eax
	imull	-4(%rbp), %eax
	leal	(%rdx,%rax), %ecx
	movl	$1759218605, %edx
	movl	%ecx, %eax
	imull	%edx
	sarl	$12, %edx
	movl	%ecx, %eax
	sarl	$31, %eax
	subl	%eax, %edx
	movl	%edx, %eax
	imull	$10000, %eax, %eax
	subl	%eax, %ecx
	movl	%ecx, %eax
	imull	$10000, %eax, %edx
	movl	-12(%rbp), %eax
	imull	-4(%rbp), %eax
	addl	%edx, %eax
	.loc 1 48 0
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE1:
	.size	mult, .-mult
	.globl	skiprand
	.type	skiprand, @function
skiprand:
.LFB2:
	.loc 1 51 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$16, %rsp
	movl	%edi, -4(%rbp)
	movl	%esi, -8(%rbp)
	.loc 1 52 0
	jmp	.L8
.L9:
	.loc 1 52 0 is_stmt 0 discriminator 2
	movl	-4(%rbp), %eax
	movl	%eax, %edi
	call	random
	movl	%eax, -4(%rbp)
	subl	$1, -8(%rbp)
.L8:
	.loc 1 52 0 discriminator 1
	cmpl	$0, -8(%rbp)
	jne	.L9
	.loc 1 53 0 is_stmt 1
	movl	-4(%rbp), %eax
	.loc 1 54 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE2:
	.size	skiprand, .-skiprand
	.globl	random
	.type	random, @function
random:
.LFB3:
	.loc 1 56 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$8, %rsp
	movl	%edi, -4(%rbp)
	.loc 1 57 0
	movl	-4(%rbp), %eax
	movl	$31415821, %esi
	movl	%eax, %edi
	call	mult
	addl	$1, %eax
	.loc 1 58 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3:
	.size	random, .-random
	.globl	RandTree
	.type	RandTree, @function
RandTree:
.LFB4:
	.loc 1 60 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	pushq	%rbx
	subq	$72, %rsp
	.cfi_offset 3, -24
	movl	%edi, -68(%rbp)
	movl	%esi, -72(%rbp)
	movl	%edx, -76(%rbp)
	movl	%ecx, -80(%rbp)
	.loc 1 64 0
	movl	foo(%rip), %eax
	leal	1(%rax), %edx
	movl	%edx, foo(%rip)
	movl	%eax, -48(%rbp)
	.loc 1 65 0
	cmpl	$1, -68(%rbp)
	jle	.L14
.LBB3:
	.loc 1 67 0
	movl	NDim(%rip), %eax
	cmpl	%eax, -80(%rbp)
	jge	.L15
	.loc 1 68 0
	movl	NDim(%rip), %eax
	subl	-80(%rbp), %eax
	subl	$1, %eax
	movl	$1, %edx
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	-76(%rbp), %eax
	addl	%edx, %eax
	movl	%eax, -52(%rbp)
	jmp	.L16
.L15:
	.loc 1 70 0
	movl	-76(%rbp), %eax
	movl	%eax, -52(%rbp)
.L16:
	.loc 1 71 0
	movl	-72(%rbp), %eax
	movl	%eax, %edi
	call	random
	movl	%eax, -72(%rbp)
	.loc 1 72 0
	movl	-72(%rbp), %ecx
	movl	$1374389535, %edx
	movl	%ecx, %eax
	imull	%edx
	sarl	$5, %edx
	movl	%ecx, %eax
	sarl	$31, %eax
	subl	%eax, %edx
	movl	%edx, %eax
	imull	$100, %eax, %eax
	subl	%eax, %ecx
	movl	%ecx, %eax
	movl	%eax, -44(%rbp)
	.loc 1 73 0
	movl	$24, %edi
	call	malloc@PLT
	movq	%rax, -24(%rbp)
	movq	-24(%rbp), %rax
	movl	-44(%rbp), %edx
	movl	%edx, (%rax)
	movq	-24(%rbp), %rax
	movq	$0, 8(%rax)
	movq	-24(%rbp), %rax
	movq	$0, 16(%rax)
	.loc 1 74 0
	movl	-80(%rbp), %eax
	leal	1(%rax), %ecx
	movl	-68(%rbp), %eax
	movl	%eax, %edx
	shrl	$31, %edx
	addl	%edx, %eax
	sarl	%eax
	movl	%eax, %edi
	movl	-52(%rbp), %edx
	movl	-72(%rbp), %eax
	movl	%eax, %esi
	call	RandTree
	movq	%rax, -40(%rbp)
	.loc 1 75 0
	movl	-80(%rbp), %eax
	leal	1(%rax), %ebx
	movl	-68(%rbp), %eax
	leal	1(%rax), %edx
	movl	-72(%rbp), %eax
	movl	%edx, %esi
	movl	%eax, %edi
	call	skiprand
	movl	%eax, %esi
	movl	-68(%rbp), %eax
	movl	%eax, %edx
	shrl	$31, %edx
	addl	%edx, %eax
	sarl	%eax
	movl	%eax, %edi
	movl	-76(%rbp), %eax
	movl	%ebx, %ecx
	movl	%eax, %edx
	call	RandTree
	movq	%rax, -32(%rbp)
	.loc 1 77 0
	movq	-40(%rbp), %rdx
	movq	-24(%rbp), %rax
	movq	%rdx, 8(%rax)
	.loc 1 78 0
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	movq	%rdx, 16(%rax)
.LBE3:
	jmp	.L17
.L14:
	.loc 1 80 0
	movq	$0, -24(%rbp)
.L17:
	.loc 1 82 0
	movq	-24(%rbp), %rax
	.loc 1 83 0
	addq	$72, %rsp
	popq	%rbx
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE4:
	.size	RandTree, .-RandTree
	.globl	SwapValue
	.type	SwapValue, @function
SwapValue:
.LFB5:
	.loc 1 85 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	.loc 1 88 0
	movq	-24(%rbp), %rax
	movl	(%rax), %eax
	movl	%eax, -8(%rbp)
	.loc 1 89 0
	movq	-32(%rbp), %rax
	movl	(%rax), %eax
	movl	%eax, -4(%rbp)
	.loc 1 90 0
	movq	-32(%rbp), %rax
	movl	-8(%rbp), %edx
	movl	%edx, (%rax)
	.loc 1 91 0
	movq	-24(%rbp), %rax
	movl	-4(%rbp), %edx
	movl	%edx, (%rax)
	.loc 1 92 0
	nop
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE5:
	.size	SwapValue, .-SwapValue
	.globl	SwapValLeft
	.type	SwapValLeft, @function
SwapValLeft:
.LFB6:
	.loc 1 103 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movl	%r8d, -36(%rbp)
	movl	%r9d, -40(%rbp)
	.loc 1 104 0
	movq	-16(%rbp), %rax
	movl	-36(%rbp), %edx
	movl	%edx, (%rax)
	.loc 1 105 0
	movq	-16(%rbp), %rax
	movq	-24(%rbp), %rdx
	movq	%rdx, 8(%rax)
	.loc 1 106 0
	movq	-8(%rbp), %rax
	movq	-32(%rbp), %rdx
	movq	%rdx, 8(%rax)
	.loc 1 107 0
	movq	-8(%rbp), %rax
	movl	-40(%rbp), %edx
	movl	%edx, (%rax)
	.loc 1 108 0
	nop
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE6:
	.size	SwapValLeft, .-SwapValLeft
	.globl	SwapValRight
	.type	SwapValRight, @function
SwapValRight:
.LFB7:
	.loc 1 120 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movl	%r8d, -36(%rbp)
	movl	%r9d, -40(%rbp)
	.loc 1 121 0
	movq	-16(%rbp), %rax
	movl	-36(%rbp), %edx
	movl	%edx, (%rax)
	.loc 1 122 0
	movq	-16(%rbp), %rax
	movq	-24(%rbp), %rdx
	movq	%rdx, 16(%rax)
	.loc 1 123 0
	movq	-8(%rbp), %rax
	movq	-32(%rbp), %rdx
	movq	%rdx, 16(%rax)
	.loc 1 124 0
	movq	-8(%rbp), %rax
	movl	-40(%rbp), %edx
	movl	%edx, (%rax)
	.loc 1 126 0
	nop
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE7:
	.size	SwapValRight, .-SwapValRight
	.globl	Bimerge
	.type	Bimerge, @function
Bimerge:
.LFB8:
	.loc 1 135 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$112, %rsp
	movq	%rdi, -104(%rbp)
	movl	%esi, -108(%rbp)
	movl	%edx, -112(%rbp)
	.loc 1 145 0
	movq	-104(%rbp), %rax
	movl	(%rax), %eax
	movl	%eax, -84(%rbp)
	.loc 1 147 0
	movq	-104(%rbp), %rax
	movq	8(%rax), %rax
	movq	%rax, -64(%rbp)
	.loc 1 148 0
	movq	-104(%rbp), %rax
	movq	16(%rax), %rax
	movq	%rax, -56(%rbp)
	.loc 1 149 0
	movl	-84(%rbp), %eax
	cmpl	-108(%rbp), %eax
	setg	%al
	movzbl	%al, %eax
	xorl	-112(%rbp), %eax
	movl	%eax, -80(%rbp)
	.loc 1 150 0
	cmpl	$0, -80(%rbp)
	je	.L24
	.loc 1 152 0
	movq	-104(%rbp), %rax
	movl	-108(%rbp), %edx
	movl	%edx, (%rax)
	.loc 1 153 0
	movl	-84(%rbp), %eax
	movl	%eax, -108(%rbp)
	.loc 1 156 0
	jmp	.L24
.L29:
	.loc 1 159 0
	movq	-64(%rbp), %rax
	movl	(%rax), %eax
	movl	%eax, -72(%rbp)
	.loc 1 160 0
	movq	-64(%rbp), %rax
	movq	8(%rax), %rax
	movq	%rax, -32(%rbp)
	.loc 1 161 0
	movq	-64(%rbp), %rax
	movq	16(%rax), %rax
	movq	%rax, -24(%rbp)
	.loc 1 162 0
	movq	-56(%rbp), %rax
	movl	(%rax), %eax
	movl	%eax, -84(%rbp)
	.loc 1 163 0
	movq	-56(%rbp), %rax
	movq	8(%rax), %rax
	movq	%rax, -16(%rbp)
	.loc 1 164 0
	movq	-56(%rbp), %rax
	movq	16(%rax), %rax
	movq	%rax, -8(%rbp)
	.loc 1 165 0
	movl	-72(%rbp), %eax
	cmpl	-84(%rbp), %eax
	setg	%al
	movzbl	%al, %eax
	xorl	-112(%rbp), %eax
	movl	%eax, -68(%rbp)
	.loc 1 166 0
	cmpl	$0, -80(%rbp)
	je	.L25
	.loc 1 167 0
	cmpl	$0, -68(%rbp)
	je	.L26
	.loc 1 169 0
	movl	-84(%rbp), %r8d
	movl	-72(%rbp), %edi
	movq	-8(%rbp), %rcx
	movq	-24(%rbp), %rdx
	movq	-56(%rbp), %rsi
	movq	-64(%rbp), %rax
	movl	%r8d, %r9d
	movl	%edi, %r8d
	movq	%rax, %rdi
	movl	$0, %eax
	call	SwapValRight
	.loc 1 170 0
	movq	-32(%rbp), %rax
	movq	%rax, -64(%rbp)
	.loc 1 171 0
	movq	-16(%rbp), %rax
	movq	%rax, -56(%rbp)
	jmp	.L24
.L26:
	.loc 1 174 0
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	.loc 1 175 0
	movq	-8(%rbp), %rax
	movq	%rax, -56(%rbp)
	jmp	.L24
.L25:
	.loc 1 178 0
	cmpl	$0, -68(%rbp)
	je	.L28
	.loc 1 180 0
	movl	-84(%rbp), %r8d
	movl	-72(%rbp), %edi
	movq	-16(%rbp), %rcx
	movq	-32(%rbp), %rdx
	movq	-56(%rbp), %rsi
	movq	-64(%rbp), %rax
	movl	%r8d, %r9d
	movl	%edi, %r8d
	movq	%rax, %rdi
	movl	$0, %eax
	call	SwapValLeft
	.loc 1 181 0
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	.loc 1 182 0
	movq	-8(%rbp), %rax
	movq	%rax, -56(%rbp)
	jmp	.L24
.L28:
	.loc 1 185 0
	movq	-32(%rbp), %rax
	movq	%rax, -64(%rbp)
	.loc 1 186 0
	movq	-16(%rbp), %rax
	movq	%rax, -56(%rbp)
.L24:
	.loc 1 156 0
	cmpq	$0, -64(%rbp)
	jne	.L29
	.loc 1 189 0
	movq	-104(%rbp), %rax
	movq	8(%rax), %rax
	testq	%rax, %rax
	je	.L30
.LBB4:
	.loc 1 192 0
	movq	-104(%rbp), %rax
	movq	8(%rax), %rax
	movq	%rax, -48(%rbp)
	.loc 1 193 0
	movq	-104(%rbp), %rax
	movq	16(%rax), %rax
	movq	%rax, -40(%rbp)
	.loc 1 194 0
	movq	-104(%rbp), %rax
	movl	(%rax), %eax
	movl	%eax, -76(%rbp)
	.loc 1 196 0
	movl	-112(%rbp), %edx
	movl	-76(%rbp), %ecx
	movq	-48(%rbp), %rax
	movl	%ecx, %esi
	movq	%rax, %rdi
	movl	$0, %eax
	call	Bimerge
	movl	%eax, %edx
	movq	-104(%rbp), %rax
	movl	%edx, (%rax)
	.loc 1 197 0
	movl	-112(%rbp), %edx
	movl	-108(%rbp), %ecx
	movq	-40(%rbp), %rax
	movl	%ecx, %esi
	movq	%rax, %rdi
	movl	$0, %eax
	call	Bimerge
	movl	%eax, -108(%rbp)
.L30:
.LBE4:
	.loc 1 200 0
	movl	-108(%rbp), %eax
	.loc 1 201 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE8:
	.size	Bimerge, .-Bimerge
	.globl	Bisort
	.type	Bisort, @function
Bisort:
.LFB9:
	.loc 1 210 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movl	%esi, -44(%rbp)
	movl	%edx, -48(%rbp)
	.loc 1 214 0
	movq	-40(%rbp), %rax
	movq	8(%rax), %rax
	testq	%rax, %rax
	jne	.L33
	.loc 1 216 0
	movq	-40(%rbp), %rax
	movl	(%rax), %eax
	cmpl	%eax, -44(%rbp)
	setl	%al
	movzbl	%al, %eax
	cmpl	%eax, -48(%rbp)
	je	.L35
	.loc 1 218 0
	movl	-44(%rbp), %eax
	movl	%eax, -24(%rbp)
	.loc 1 219 0
	movq	-40(%rbp), %rax
	movl	(%rax), %eax
	movl	%eax, -44(%rbp)
	.loc 1 220 0
	movq	-40(%rbp), %rax
	movl	-24(%rbp), %edx
	movl	%edx, (%rax)
	jmp	.L35
.L33:
.LBB5:
	.loc 1 226 0
	movq	-40(%rbp), %rax
	movq	8(%rax), %rax
	movq	%rax, -16(%rbp)
	.loc 1 227 0
	movq	-40(%rbp), %rax
	movq	16(%rax), %rax
	movq	%rax, -8(%rbp)
	.loc 1 228 0
	movq	-40(%rbp), %rax
	movl	(%rax), %eax
	movl	%eax, -24(%rbp)
	.loc 1 230 0
	movl	-48(%rbp), %edx
	movl	-24(%rbp), %ecx
	movq	-16(%rbp), %rax
	movl	%ecx, %esi
	movq	%rax, %rdi
	movl	$0, %eax
	call	Bisort
	movl	%eax, %edx
	movq	-40(%rbp), %rax
	movl	%edx, (%rax)
	.loc 1 231 0
	cmpl	$0, -48(%rbp)
	sete	%al
	movzbl	%al, %eax
	movl	%eax, -20(%rbp)
	.loc 1 232 0
	movl	-20(%rbp), %edx
	movl	-44(%rbp), %ecx
	movq	-8(%rbp), %rax
	movl	%ecx, %esi
	movq	%rax, %rdi
	movl	$0, %eax
	call	Bisort
	movl	%eax, -44(%rbp)
	.loc 1 233 0
	movl	-48(%rbp), %edx
	movl	-44(%rbp), %ecx
	movq	-40(%rbp), %rax
	movl	%ecx, %esi
	movq	%rax, %rdi
	movl	$0, %eax
	call	Bimerge
	movl	%eax, -44(%rbp)
.L35:
.LBE5:
	.loc 1 236 0
	movl	-44(%rbp), %eax
	.loc 1 237 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE9:
	.size	Bisort, .-Bisort
	.section	.rodata
	.align 8
.LC1:
	.string	"Bisort with %d size of dim %d\n"
.LC2:
	.string	"%d\n"
	.align 8
.LC3:
	.string	"**************************************"
	.align 8
.LC4:
	.string	"BEGINNING BITONIC SORT ALGORITHM HERE"
.LC5:
	.string	"Sorted Tree:"
	.text
	.globl	main
	.type	main, @function
main:
.LFB10:
	.loc 1 239 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	.loc 1 244 0
	movq	-32(%rbp), %rdx
	movl	-20(%rbp), %eax
	movq	%rdx, %rsi
	movl	%eax, %edi
	call	dealwithargs@PLT
	movl	%eax, -16(%rbp)
	.loc 1 246 0
	movl	NDim(%rip), %edx
	movl	-16(%rbp), %eax
	movl	%eax, %esi
	leaq	.LC1(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	.loc 1 248 0
	movl	-16(%rbp), %eax
	movl	$0, %ecx
	movl	$0, %edx
	movl	$12345768, %esi
	movl	%eax, %edi
	call	RandTree
	movq	%rax, -8(%rbp)
	.loc 1 249 0
	movl	$245867, %edi
	call	random
	movl	%eax, %ecx
	movl	$1374389535, %edx
	movl	%ecx, %eax
	imull	%edx
	sarl	$5, %edx
	movl	%ecx, %eax
	sarl	$31, %eax
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, -12(%rbp)
	movl	-12(%rbp), %eax
	imull	$100, %eax, %eax
	subl	%eax, %ecx
	movl	%ecx, %eax
	movl	%eax, -12(%rbp)
	.loc 1 250 0
	movl	flag(%rip), %eax
	testl	%eax, %eax
	je	.L38
	.loc 1 251 0
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	call	InOrder
	.loc 1 252 0
	movl	-12(%rbp), %eax
	movl	%eax, %esi
	leaq	.LC2(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
.L38:
	.loc 1 254 0
	leaq	.LC3(%rip), %rdi
	call	puts@PLT
	.loc 1 255 0
	leaq	.LC4(%rip), %rdi
	call	puts@PLT
	.loc 1 256 0
	leaq	.LC3(%rip), %rdi
	call	puts@PLT
	.loc 1 258 0
	movl	-12(%rbp), %ecx
	movq	-8(%rbp), %rax
	movl	$0, %edx
	movl	%ecx, %esi
	movq	%rax, %rdi
	movl	$0, %eax
	call	Bisort
	movl	%eax, -12(%rbp)
	.loc 1 260 0
	movl	flag(%rip), %eax
	testl	%eax, %eax
	je	.L39
	.loc 1 261 0
	leaq	.LC5(%rip), %rdi
	call	puts@PLT
	.loc 1 262 0
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	call	InOrder
	.loc 1 263 0
	movl	-12(%rbp), %eax
	movl	%eax, %esi
	leaq	.LC2(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
.L39:
	.loc 1 266 0
	movl	-12(%rbp), %ecx
	movq	-8(%rbp), %rax
	movl	$1, %edx
	movl	%ecx, %esi
	movq	%rax, %rdi
	movl	$0, %eax
	call	Bisort
	movl	%eax, -12(%rbp)
	.loc 1 268 0
	movl	flag(%rip), %eax
	testl	%eax, %eax
	je	.L40
	.loc 1 269 0
	leaq	.LC5(%rip), %rdi
	call	puts@PLT
	.loc 1 270 0
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	call	InOrder
	.loc 1 271 0
	movl	-12(%rbp), %eax
	movl	%eax, %esi
	leaq	.LC2(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
.L40:
	.loc 1 274 0
	movl	$0, %eax
	.loc 1 275 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE10:
	.size	main, .-main
	.local	counter.2165
	.comm	counter.2165,1,1
.Letext0:
	.file 2 "../olden/bisort/src/node.h"
	.file 3 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h"
	.file 4 "/usr/include/x86_64-linux-gnu/bits/types.h"
	.file 5 "/usr/include/x86_64-linux-gnu/bits/libio.h"
	.file 6 "/usr/include/stdio.h"
	.section	.debug_info,"",@progbits
.Ldebug_info0:
	.long	0x8c4
	.value	0x4
	.long	.Ldebug_abbrev0
	.byte	0x8
	.uleb128 0x1
	.long	.LASF91
	.byte	0xc
	.long	.LASF92
	.long	.LASF93
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.long	.Ldebug_line0
	.uleb128 0x2
	.long	.LASF3
	.byte	0x18
	.byte	0x2
	.byte	0x5
	.long	0x5e
	.uleb128 0x3
	.long	.LASF0
	.byte	0x2
	.byte	0x6
	.long	0x5e
	.byte	0
	.uleb128 0x3
	.long	.LASF1
	.byte	0x2
	.byte	0x7
	.long	0x65
	.byte	0x8
	.uleb128 0x3
	.long	.LASF2
	.byte	0x2
	.byte	0x8
	.long	0x65
	.byte	0x10
	.byte	0
	.uleb128 0x4
	.byte	0x4
	.byte	0x5
	.string	"int"
	.uleb128 0x5
	.byte	0x8
	.long	0x2d
	.uleb128 0x6
	.long	.LASF5
	.byte	0x2
	.byte	0xb
	.long	0x2d
	.uleb128 0x2
	.long	.LASF4
	.byte	0x8
	.byte	0x2
	.byte	0xd
	.long	0x8f
	.uleb128 0x3
	.long	.LASF0
	.byte	0x2
	.byte	0xe
	.long	0x8f
	.byte	0
	.byte	0
	.uleb128 0x5
	.byte	0x8
	.long	0x6b
	.uleb128 0x6
	.long	.LASF4
	.byte	0x2
	.byte	0xf
	.long	0x76
	.uleb128 0x6
	.long	.LASF6
	.byte	0x3
	.byte	0xd8
	.long	0xab
	.uleb128 0x7
	.byte	0x8
	.byte	0x7
	.long	.LASF7
	.uleb128 0x7
	.byte	0x1
	.byte	0x8
	.long	.LASF8
	.uleb128 0x7
	.byte	0x2
	.byte	0x7
	.long	.LASF9
	.uleb128 0x7
	.byte	0x4
	.byte	0x7
	.long	.LASF10
	.uleb128 0x7
	.byte	0x1
	.byte	0x6
	.long	.LASF11
	.uleb128 0x7
	.byte	0x2
	.byte	0x5
	.long	.LASF12
	.uleb128 0x7
	.byte	0x8
	.byte	0x5
	.long	.LASF13
	.uleb128 0x6
	.long	.LASF14
	.byte	0x4
	.byte	0x8c
	.long	0xd5
	.uleb128 0x6
	.long	.LASF15
	.byte	0x4
	.byte	0x8d
	.long	0xd5
	.uleb128 0x8
	.byte	0x8
	.uleb128 0x5
	.byte	0x8
	.long	0xfa
	.uleb128 0x7
	.byte	0x1
	.byte	0x6
	.long	.LASF16
	.uleb128 0x2
	.long	.LASF17
	.byte	0xd8
	.byte	0x5
	.byte	0xf5
	.long	0x281
	.uleb128 0x3
	.long	.LASF18
	.byte	0x5
	.byte	0xf6
	.long	0x5e
	.byte	0
	.uleb128 0x3
	.long	.LASF19
	.byte	0x5
	.byte	0xfb
	.long	0xf4
	.byte	0x8
	.uleb128 0x3
	.long	.LASF20
	.byte	0x5
	.byte	0xfc
	.long	0xf4
	.byte	0x10
	.uleb128 0x3
	.long	.LASF21
	.byte	0x5
	.byte	0xfd
	.long	0xf4
	.byte	0x18
	.uleb128 0x3
	.long	.LASF22
	.byte	0x5
	.byte	0xfe
	.long	0xf4
	.byte	0x20
	.uleb128 0x3
	.long	.LASF23
	.byte	0x5
	.byte	0xff
	.long	0xf4
	.byte	0x28
	.uleb128 0x9
	.long	.LASF24
	.byte	0x5
	.value	0x100
	.long	0xf4
	.byte	0x30
	.uleb128 0x9
	.long	.LASF25
	.byte	0x5
	.value	0x101
	.long	0xf4
	.byte	0x38
	.uleb128 0x9
	.long	.LASF26
	.byte	0x5
	.value	0x102
	.long	0xf4
	.byte	0x40
	.uleb128 0x9
	.long	.LASF27
	.byte	0x5
	.value	0x104
	.long	0xf4
	.byte	0x48
	.uleb128 0x9
	.long	.LASF28
	.byte	0x5
	.value	0x105
	.long	0xf4
	.byte	0x50
	.uleb128 0x9
	.long	.LASF29
	.byte	0x5
	.value	0x106
	.long	0xf4
	.byte	0x58
	.uleb128 0x9
	.long	.LASF30
	.byte	0x5
	.value	0x108
	.long	0x2b9
	.byte	0x60
	.uleb128 0x9
	.long	.LASF31
	.byte	0x5
	.value	0x10a
	.long	0x2bf
	.byte	0x68
	.uleb128 0x9
	.long	.LASF32
	.byte	0x5
	.value	0x10c
	.long	0x5e
	.byte	0x70
	.uleb128 0x9
	.long	.LASF33
	.byte	0x5
	.value	0x110
	.long	0x5e
	.byte	0x74
	.uleb128 0x9
	.long	.LASF34
	.byte	0x5
	.value	0x112
	.long	0xdc
	.byte	0x78
	.uleb128 0x9
	.long	.LASF35
	.byte	0x5
	.value	0x116
	.long	0xb9
	.byte	0x80
	.uleb128 0x9
	.long	.LASF36
	.byte	0x5
	.value	0x117
	.long	0xc7
	.byte	0x82
	.uleb128 0x9
	.long	.LASF37
	.byte	0x5
	.value	0x118
	.long	0x2c5
	.byte	0x83
	.uleb128 0x9
	.long	.LASF38
	.byte	0x5
	.value	0x11c
	.long	0x2d5
	.byte	0x88
	.uleb128 0x9
	.long	.LASF39
	.byte	0x5
	.value	0x125
	.long	0xe7
	.byte	0x90
	.uleb128 0x9
	.long	.LASF40
	.byte	0x5
	.value	0x12d
	.long	0xf2
	.byte	0x98
	.uleb128 0x9
	.long	.LASF41
	.byte	0x5
	.value	0x12e
	.long	0xf2
	.byte	0xa0
	.uleb128 0x9
	.long	.LASF42
	.byte	0x5
	.value	0x12f
	.long	0xf2
	.byte	0xa8
	.uleb128 0x9
	.long	.LASF43
	.byte	0x5
	.value	0x130
	.long	0xf2
	.byte	0xb0
	.uleb128 0x9
	.long	.LASF44
	.byte	0x5
	.value	0x132
	.long	0xa0
	.byte	0xb8
	.uleb128 0x9
	.long	.LASF45
	.byte	0x5
	.value	0x133
	.long	0x5e
	.byte	0xc0
	.uleb128 0x9
	.long	.LASF46
	.byte	0x5
	.value	0x135
	.long	0x2db
	.byte	0xc4
	.byte	0
	.uleb128 0xa
	.long	.LASF94
	.byte	0x5
	.byte	0x9a
	.uleb128 0x2
	.long	.LASF47
	.byte	0x18
	.byte	0x5
	.byte	0xa0
	.long	0x2b9
	.uleb128 0x3
	.long	.LASF48
	.byte	0x5
	.byte	0xa1
	.long	0x2b9
	.byte	0
	.uleb128 0x3
	.long	.LASF49
	.byte	0x5
	.byte	0xa2
	.long	0x2bf
	.byte	0x8
	.uleb128 0x3
	.long	.LASF50
	.byte	0x5
	.byte	0xa6
	.long	0x5e
	.byte	0x10
	.byte	0
	.uleb128 0x5
	.byte	0x8
	.long	0x288
	.uleb128 0x5
	.byte	0x8
	.long	0x101
	.uleb128 0xb
	.long	0xfa
	.long	0x2d5
	.uleb128 0xc
	.long	0xab
	.byte	0
	.byte	0
	.uleb128 0x5
	.byte	0x8
	.long	0x281
	.uleb128 0xb
	.long	0xfa
	.long	0x2eb
	.uleb128 0xc
	.long	0xab
	.byte	0x13
	.byte	0
	.uleb128 0xd
	.long	.LASF95
	.uleb128 0xe
	.long	.LASF51
	.byte	0x5
	.value	0x13f
	.long	0x2eb
	.uleb128 0xe
	.long	.LASF52
	.byte	0x5
	.value	0x140
	.long	0x2eb
	.uleb128 0xe
	.long	.LASF53
	.byte	0x5
	.value	0x141
	.long	0x2eb
	.uleb128 0xf
	.long	.LASF54
	.byte	0x6
	.byte	0x87
	.long	0x2bf
	.uleb128 0xf
	.long	.LASF55
	.byte	0x6
	.byte	0x88
	.long	0x2bf
	.uleb128 0xf
	.long	.LASF56
	.byte	0x6
	.byte	0x89
	.long	0x2bf
	.uleb128 0x10
	.long	.LASF57
	.byte	0x1
	.byte	0xd
	.long	0x5e
	.uleb128 0x9
	.byte	0x3
	.quad	NumNodes
	.uleb128 0x10
	.long	.LASF58
	.byte	0x1
	.byte	0xd
	.long	0x5e
	.uleb128 0x9
	.byte	0x3
	.quad	NDim
	.uleb128 0x10
	.long	.LASF59
	.byte	0x1
	.byte	0x11
	.long	0x5e
	.uleb128 0x9
	.byte	0x3
	.quad	flag
	.uleb128 0x11
	.string	"foo"
	.byte	0x1
	.byte	0x11
	.long	0x5e
	.uleb128 0x9
	.byte	0x3
	.quad	foo
	.uleb128 0x12
	.long	.LASF77
	.byte	0x1
	.byte	0xef
	.long	0x5e
	.quad	.LFB10
	.quad	.LFE10-.LFB10
	.uleb128 0x1
	.byte	0x9c
	.long	0x3ed
	.uleb128 0x13
	.long	.LASF60
	.byte	0x1
	.byte	0xef
	.long	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x13
	.long	.LASF61
	.byte	0x1
	.byte	0xef
	.long	0x3ed
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x14
	.string	"h"
	.byte	0x1
	.byte	0xf0
	.long	0x8f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x15
	.long	.LASF62
	.byte	0x1
	.byte	0xf1
	.long	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x14
	.string	"n"
	.byte	0x1
	.byte	0xf2
	.long	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x5
	.byte	0x8
	.long	0xf4
	.uleb128 0x16
	.long	.LASF66
	.byte	0x1
	.byte	0xcd
	.long	0x5e
	.quad	.LFB9
	.quad	.LFE9-.LFB9
	.uleb128 0x1
	.byte	0x9c
	.long	0x485
	.uleb128 0x13
	.long	.LASF63
	.byte	0x1
	.byte	0xcf
	.long	0x8f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x13
	.long	.LASF64
	.byte	0x1
	.byte	0xd0
	.long	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x17
	.string	"dir"
	.byte	0x1
	.byte	0xd0
	.long	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x14
	.string	"l"
	.byte	0x1
	.byte	0xd2
	.long	0x8f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x14
	.string	"r"
	.byte	0x1
	.byte	0xd3
	.long	0x8f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x14
	.string	"val"
	.byte	0x1
	.byte	0xd4
	.long	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x18
	.quad	.LBB5
	.quad	.LBE5-.LBB5
	.uleb128 0x15
	.long	.LASF65
	.byte	0x1
	.byte	0xe1
	.long	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.byte	0
	.uleb128 0x16
	.long	.LASF67
	.byte	0x1
	.byte	0x82
	.long	0x5e
	.quad	.LFB8
	.quad	.LFE8-.LFB8
	.uleb128 0x1
	.byte	0x9c
	.long	0x59d
	.uleb128 0x13
	.long	.LASF63
	.byte	0x1
	.byte	0x84
	.long	0x8f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x13
	.long	.LASF64
	.byte	0x1
	.byte	0x85
	.long	0x5e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -124
	.uleb128 0x17
	.string	"dir"
	.byte	0x1
	.byte	0x85
	.long	0x5e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x15
	.long	.LASF68
	.byte	0x1
	.byte	0x87
	.long	0x5e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x15
	.long	.LASF69
	.byte	0x1
	.byte	0x88
	.long	0x5e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x14
	.string	"pl"
	.byte	0x1
	.byte	0x89
	.long	0x8f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x14
	.string	"pll"
	.byte	0x1
	.byte	0x89
	.long	0x8f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x14
	.string	"plr"
	.byte	0x1
	.byte	0x89
	.long	0x8f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x14
	.string	"pr"
	.byte	0x1
	.byte	0x8a
	.long	0x8f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x14
	.string	"prl"
	.byte	0x1
	.byte	0x8a
	.long	0x8f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x14
	.string	"prr"
	.byte	0x1
	.byte	0x8a
	.long	0x8f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x14
	.string	"rl"
	.byte	0x1
	.byte	0x8b
	.long	0x8f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x14
	.string	"rr"
	.byte	0x1
	.byte	0x8c
	.long	0x8f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x14
	.string	"rv"
	.byte	0x1
	.byte	0x8d
	.long	0x5e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x14
	.string	"lv"
	.byte	0x1
	.byte	0x8d
	.long	0x5e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x18
	.quad	.LBB4
	.quad	.LBE4-.LBB4
	.uleb128 0x15
	.long	.LASF0
	.byte	0x1
	.byte	0xbf
	.long	0x5e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.byte	0
	.byte	0
	.uleb128 0x19
	.long	.LASF72
	.byte	0x1
	.byte	0x71
	.quad	.LFB7
	.quad	.LFE7-.LFB7
	.uleb128 0x1
	.byte	0x9c
	.long	0x609
	.uleb128 0x17
	.string	"l"
	.byte	0x1
	.byte	0x73
	.long	0x8f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x17
	.string	"r"
	.byte	0x1
	.byte	0x74
	.long	0x8f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x17
	.string	"lr"
	.byte	0x1
	.byte	0x75
	.long	0x8f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x17
	.string	"rr"
	.byte	0x1
	.byte	0x76
	.long	0x8f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x13
	.long	.LASF70
	.byte	0x1
	.byte	0x77
	.long	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x13
	.long	.LASF71
	.byte	0x1
	.byte	0x77
	.long	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0x19
	.long	.LASF73
	.byte	0x1
	.byte	0x60
	.quad	.LFB6
	.quad	.LFE6-.LFB6
	.uleb128 0x1
	.byte	0x9c
	.long	0x675
	.uleb128 0x17
	.string	"l"
	.byte	0x1
	.byte	0x62
	.long	0x8f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x17
	.string	"r"
	.byte	0x1
	.byte	0x63
	.long	0x8f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x17
	.string	"ll"
	.byte	0x1
	.byte	0x64
	.long	0x8f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x17
	.string	"rl"
	.byte	0x1
	.byte	0x65
	.long	0x8f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x13
	.long	.LASF70
	.byte	0x1
	.byte	0x66
	.long	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x13
	.long	.LASF71
	.byte	0x1
	.byte	0x66
	.long	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0x1a
	.long	.LASF74
	.byte	0x1
	.byte	0x55
	.quad	.LFB5
	.quad	.LFE5-.LFB5
	.uleb128 0x1
	.byte	0x9c
	.long	0x6c7
	.uleb128 0x17
	.string	"l"
	.byte	0x1
	.byte	0x55
	.long	0x8f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x17
	.string	"r"
	.byte	0x1
	.byte	0x55
	.long	0x8f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x15
	.long	.LASF75
	.byte	0x1
	.byte	0x56
	.long	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x15
	.long	.LASF76
	.byte	0x1
	.byte	0x56
	.long	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x12
	.long	.LASF78
	.byte	0x1
	.byte	0x3c
	.long	0x8f
	.quad	.LFB4
	.quad	.LFE4-.LFB4
	.uleb128 0x1
	.byte	0x9c
	.long	0x788
	.uleb128 0x17
	.string	"n"
	.byte	0x1
	.byte	0x3c
	.long	0x5e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x13
	.long	.LASF79
	.byte	0x1
	.byte	0x3c
	.long	0x5e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x13
	.long	.LASF3
	.byte	0x1
	.byte	0x3c
	.long	0x5e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x13
	.long	.LASF80
	.byte	0x1
	.byte	0x3c
	.long	0x5e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x15
	.long	.LASF81
	.byte	0x1
	.byte	0x3d
	.long	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x15
	.long	.LASF82
	.byte	0x1
	.byte	0x3d
	.long	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x15
	.long	.LASF83
	.byte	0x1
	.byte	0x3e
	.long	0x95
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x15
	.long	.LASF84
	.byte	0x1
	.byte	0x3e
	.long	0x95
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x14
	.string	"h"
	.byte	0x1
	.byte	0x3f
	.long	0x8f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x18
	.quad	.LBB3
	.quad	.LBE3-.LBB3
	.uleb128 0x15
	.long	.LASF85
	.byte	0x1
	.byte	0x42
	.long	0x5e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.byte	0
	.byte	0
	.uleb128 0x12
	.long	.LASF86
	.byte	0x1
	.byte	0x38
	.long	0x5e
	.quad	.LFB3
	.quad	.LFE3-.LFB3
	.uleb128 0x1
	.byte	0x9c
	.long	0x7b8
	.uleb128 0x13
	.long	.LASF79
	.byte	0x1
	.byte	0x38
	.long	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x12
	.long	.LASF87
	.byte	0x1
	.byte	0x33
	.long	0x5e
	.quad	.LFB2
	.quad	.LFE2-.LFB2
	.uleb128 0x1
	.byte	0x9c
	.long	0x7f4
	.uleb128 0x13
	.long	.LASF79
	.byte	0x1
	.byte	0x33
	.long	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x17
	.string	"n"
	.byte	0x1
	.byte	0x33
	.long	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x1b
	.long	.LASF88
	.byte	0x1
	.byte	0x2a
	.long	0x5e
	.quad	.LFB1
	.quad	.LFE1-.LFB1
	.uleb128 0x1
	.byte	0x9c
	.long	0x862
	.uleb128 0x17
	.string	"p"
	.byte	0x1
	.byte	0x2a
	.long	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x17
	.string	"q"
	.byte	0x1
	.byte	0x2a
	.long	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x14
	.string	"p1"
	.byte	0x1
	.byte	0x2b
	.long	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x14
	.string	"p0"
	.byte	0x1
	.byte	0x2b
	.long	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x14
	.string	"q1"
	.byte	0x1
	.byte	0x2b
	.long	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x14
	.string	"q0"
	.byte	0x1
	.byte	0x2b
	.long	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x1c
	.long	.LASF89
	.byte	0x1
	.byte	0x1d
	.quad	.LFB0
	.quad	.LFE0-.LFB0
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x17
	.string	"h"
	.byte	0x1
	.byte	0x1d
	.long	0x8f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x14
	.string	"l"
	.byte	0x1
	.byte	0x1e
	.long	0x8f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x14
	.string	"r"
	.byte	0x1
	.byte	0x1e
	.long	0x8f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x18
	.quad	.LBB2
	.quad	.LBE2-.LBB2
	.uleb128 0x15
	.long	.LASF90
	.byte	0x1
	.byte	0x23
	.long	0xb2
	.uleb128 0x9
	.byte	0x3
	.quad	counter.2165
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_abbrev,"",@progbits
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0xe
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1b
	.uleb128 0xe
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x10
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0x13
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xf
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x10
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x11
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x12
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x13
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x14
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x15
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x16
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x17
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x18
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.byte	0
	.byte	0
	.uleb128 0x19
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1a
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1b
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1c
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_aranges,"",@progbits
	.long	0x2c
	.value	0x2
	.long	.Ldebug_info0
	.byte	0x8
	.byte	0
	.value	0
	.value	0
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.quad	0
	.quad	0
	.section	.debug_line,"",@progbits
.Ldebug_line0:
	.section	.debug_str,"MS",@progbits,1
.LASF14:
	.string	"__off_t"
.LASF19:
	.string	"_IO_read_ptr"
.LASF31:
	.string	"_chain"
.LASF6:
	.string	"size_t"
.LASF37:
	.string	"_shortbuf"
.LASF91:
	.string	"GNU C11 7.5.0 -mtune=generic -march=x86-64 -g -fstack-protector-strong"
.LASF53:
	.string	"_IO_2_1_stderr_"
.LASF25:
	.string	"_IO_buf_base"
.LASF69:
	.string	"elementexchange"
.LASF2:
	.string	"right"
.LASF93:
	.string	"/home/leonardo/Documents/Maestria/Tesis/sodden/build"
.LASF11:
	.string	"signed char"
.LASF87:
	.string	"skiprand"
.LASF73:
	.string	"SwapValLeft"
.LASF84:
	.string	"f_right"
.LASF32:
	.string	"_fileno"
.LASF20:
	.string	"_IO_read_end"
.LASF75:
	.string	"temp"
.LASF13:
	.string	"long int"
.LASF78:
	.string	"RandTree"
.LASF18:
	.string	"_flags"
.LASF26:
	.string	"_IO_buf_end"
.LASF35:
	.string	"_cur_column"
.LASF70:
	.string	"lval"
.LASF74:
	.string	"SwapValue"
.LASF34:
	.string	"_old_offset"
.LASF39:
	.string	"_offset"
.LASF68:
	.string	"rightexchange"
.LASF58:
	.string	"NDim"
.LASF67:
	.string	"Bimerge"
.LASF0:
	.string	"value"
.LASF47:
	.string	"_IO_marker"
.LASF54:
	.string	"stdin"
.LASF10:
	.string	"unsigned int"
.LASF57:
	.string	"NumNodes"
.LASF79:
	.string	"seed"
.LASF62:
	.string	"sval"
.LASF7:
	.string	"long unsigned int"
.LASF95:
	.string	"_IO_FILE_plus"
.LASF23:
	.string	"_IO_write_ptr"
.LASF49:
	.string	"_sbuf"
.LASF80:
	.string	"level"
.LASF9:
	.string	"short unsigned int"
.LASF65:
	.string	"ndir"
.LASF27:
	.string	"_IO_save_base"
.LASF38:
	.string	"_lock"
.LASF33:
	.string	"_flags2"
.LASF45:
	.string	"_mode"
.LASF55:
	.string	"stdout"
.LASF86:
	.string	"random"
.LASF51:
	.string	"_IO_2_1_stdin_"
.LASF85:
	.string	"newnode"
.LASF64:
	.string	"spr_val"
.LASF24:
	.string	"_IO_write_end"
.LASF94:
	.string	"_IO_lock_t"
.LASF17:
	.string	"_IO_FILE"
.LASF83:
	.string	"f_left"
.LASF89:
	.string	"InOrder"
.LASF50:
	.string	"_pos"
.LASF30:
	.string	"_markers"
.LASF5:
	.string	"HANDLE"
.LASF8:
	.string	"unsigned char"
.LASF3:
	.string	"node"
.LASF12:
	.string	"short int"
.LASF90:
	.string	"counter"
.LASF76:
	.string	"temp2"
.LASF59:
	.string	"flag"
.LASF36:
	.string	"_vtable_offset"
.LASF52:
	.string	"_IO_2_1_stdout_"
.LASF81:
	.string	"next_val"
.LASF16:
	.string	"char"
.LASF4:
	.string	"future_cell_int"
.LASF88:
	.string	"mult"
.LASF72:
	.string	"SwapValRight"
.LASF48:
	.string	"_next"
.LASF15:
	.string	"__off64_t"
.LASF21:
	.string	"_IO_read_base"
.LASF29:
	.string	"_IO_save_end"
.LASF40:
	.string	"__pad1"
.LASF41:
	.string	"__pad2"
.LASF42:
	.string	"__pad3"
.LASF43:
	.string	"__pad4"
.LASF44:
	.string	"__pad5"
.LASF46:
	.string	"_unused2"
.LASF56:
	.string	"stderr"
.LASF61:
	.string	"argv"
.LASF71:
	.string	"rval"
.LASF82:
	.string	"my_name"
.LASF92:
	.string	"../olden/bisort/src/bitonic.c"
.LASF28:
	.string	"_IO_backup_base"
.LASF60:
	.string	"argc"
.LASF77:
	.string	"main"
.LASF22:
	.string	"_IO_write_base"
.LASF1:
	.string	"left"
.LASF66:
	.string	"Bisort"
.LASF63:
	.string	"root"
	.ident	"GCC: (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0"
	.section	.note.GNU-stack,"",@progbits
