	.file	"health.c"
	.text
.Ltext0:
	.comm	max_level,4,4
	.comm	max_time,8,8
	.comm	seed,8,8
	.globl	alloc_tree
	.type	alloc_tree, @function
alloc_tree:
.LFB0:
	.file 1 "../olden/health/src/health.c"
	.loc 1 17 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$96, %rsp
	movl	%edi, -68(%rbp)
	movl	%esi, -72(%rbp)
	movq	%rdx, -80(%rbp)
	.loc 1 17 0
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	.loc 1 18 0
	cmpl	$0, -68(%rbp)
	jne	.L2
	.loc 1 19 0
	movl	$0, %eax
	jmp	.L3
.L2:
.LBB2:
	.loc 1 25 0
	movl	$192, %edi
	call	malloc@PLT
	movq	%rax, -56(%rbp)
	.loc 1 27 0
	movl	$3, -60(%rbp)
	jmp	.L4
.L5:
	.loc 1 28 0 discriminator 3
	movl	-72(%rbp), %eax
	leal	0(,%rax,4), %edx
	movl	-60(%rbp), %eax
	addl	%edx, %eax
	leal	1(%rax), %esi
	movl	-68(%rbp), %eax
	leal	-1(%rax), %ecx
	movq	-56(%rbp), %rax
	movq	%rax, %rdx
	movl	%ecx, %edi
	call	alloc_tree
	movq	%rax, %rdx
	movl	-60(%rbp), %eax
	cltq
	movq	%rdx, -48(%rbp,%rax,8)
	.loc 1 27 0 discriminator 3
	subl	$1, -60(%rbp)
.L4:
	.loc 1 27 0 is_stmt 0 discriminator 1
	cmpl	$0, -60(%rbp)
	jns	.L5
	.loc 1 30 0 is_stmt 1
	movq	-56(%rbp), %rax
	movq	-80(%rbp), %rdx
	movq	%rdx, 32(%rax)
	.loc 1 31 0
	movq	-56(%rbp), %rax
	movl	-72(%rbp), %edx
	movl	%edx, 176(%rax)
	.loc 1 32 0
	movl	-72(%rbp), %eax
	cltq
	movq	seed(%rip), %rdx
	addq	$127773, %rdx
	imulq	%rax, %rdx
	movq	-56(%rbp), %rax
	movq	%rdx, 184(%rax)
	.loc 1 33 0
	movl	-68(%rbp), %eax
	subl	$1, %eax
	cvtsi2sd	%eax, %xmm0
	movq	.LC0(%rip), %rax
	movapd	%xmm0, %xmm1
	movq	%rax, -88(%rbp)
	movsd	-88(%rbp), %xmm0
	call	pow@PLT
	cvttsd2si	%xmm0, %edx
	movq	-56(%rbp), %rax
	movl	%edx, 64(%rax)
	.loc 1 34 0
	movq	-56(%rbp), %rax
	movl	64(%rax), %edx
	movq	-56(%rbp), %rax
	movl	%edx, 68(%rax)
	.loc 1 35 0
	movq	-56(%rbp), %rax
	movl	$0, 72(%rax)
	.loc 1 36 0
	movq	-56(%rbp), %rax
	movq	$0, 104(%rax)
	.loc 1 37 0
	movq	-56(%rbp), %rax
	movq	$0, 120(%rax)
	.loc 1 38 0
	movq	-56(%rbp), %rax
	movq	$0, 112(%rax)
	.loc 1 39 0
	movq	-56(%rbp), %rax
	movq	$0, 80(%rax)
	.loc 1 40 0
	movq	-56(%rbp), %rax
	movq	$0, 96(%rax)
	.loc 1 41 0
	movq	-56(%rbp), %rax
	movq	$0, 88(%rax)
	.loc 1 42 0
	movq	-56(%rbp), %rax
	movq	$0, 128(%rax)
	.loc 1 43 0
	movq	-56(%rbp), %rax
	movq	$0, 144(%rax)
	.loc 1 44 0
	movq	-56(%rbp), %rax
	movq	$0, 136(%rax)
	.loc 1 45 0
	movq	-56(%rbp), %rax
	movq	$0, 152(%rax)
	.loc 1 46 0
	movq	-56(%rbp), %rax
	movq	$0, 168(%rax)
	.loc 1 47 0
	movq	-56(%rbp), %rax
	movq	$0, 160(%rax)
	.loc 1 48 0
	movq	-56(%rbp), %rax
	movq	$0, 56(%rax)
	.loc 1 49 0
	movq	-56(%rbp), %rax
	movq	$0, 40(%rax)
	.loc 1 51 0
	movl	$0, -60(%rbp)
	jmp	.L6
.L7:
	.loc 1 52 0 discriminator 3
	movl	-60(%rbp), %eax
	cltq
	movq	-48(%rbp,%rax,8), %rcx
	movq	-56(%rbp), %rax
	movl	-60(%rbp), %edx
	movslq	%edx, %rdx
	movq	%rcx, (%rax,%rdx,8)
	.loc 1 51 0 discriminator 3
	addl	$1, -60(%rbp)
.L6:
	.loc 1 51 0 is_stmt 0 discriminator 1
	cmpl	$3, -60(%rbp)
	jle	.L7
	.loc 1 54 0 is_stmt 1
	movq	-56(%rbp), %rax
.L3:
.LBE2:
	.loc 1 56 0 discriminator 1
	movq	-8(%rbp), %rdi
	xorq	%fs:40, %rdi
	je	.L8
	.loc 1 56 0 is_stmt 0
	call	__stack_chk_fail@PLT
.L8:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE0:
	.size	alloc_tree, .-alloc_tree
	.globl	get_results
	.type	get_results, @function
get_results:
.LFB1:
	.loc 1 59 0 is_stmt 1
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	pushq	%rbx
	subq	$184, %rsp
	.cfi_offset 3, -24
	movq	%rdi, -152(%rbp)
	.loc 1 59 0
	movq	%fs:40, %rax
	movq	%rax, -24(%rbp)
	xorl	%eax, %eax
	.loc 1 66 0
	pxor	%xmm0, %xmm0
	movss	%xmm0, -96(%rbp)
	.loc 1 67 0
	pxor	%xmm0, %xmm0
	movss	%xmm0, -104(%rbp)
	.loc 1 68 0
	pxor	%xmm0, %xmm0
	movss	%xmm0, -100(%rbp)
	.loc 1 70 0
	cmpq	$0, -152(%rbp)
	jne	.L10
	.loc 1 70 0 is_stmt 0 discriminator 1
	movq	-104(%rbp), %rax
	movq	%rax, -92(%rbp)
	movl	-96(%rbp), %eax
	movl	%eax, -84(%rbp)
	jmp	.L18
.L10:
	.loc 1 72 0 is_stmt 1
	movl	$3, -132(%rbp)
	jmp	.L12
.L13:
.LBB3:
	.loc 1 73 0 discriminator 3
	movq	-152(%rbp), %rax
	movl	-132(%rbp), %edx
	movslq	%edx, %rdx
	movq	(%rax,%rdx,8), %rax
	movq	%rax, -112(%rbp)
	.loc 1 74 0 discriminator 3
	movl	-132(%rbp), %eax
	movslq	%eax, %rdx
	movq	%rdx, %rax
	addq	%rax, %rax
	addq	%rdx, %rax
	salq	$2, %rax
	leaq	-16(%rbp), %rcx
	addq	%rcx, %rax
	leaq	-64(%rax), %rbx
	movq	-112(%rbp), %rax
	movq	%rax, %rdi
	call	get_results
	movq	%xmm0, %rax
	movaps	%xmm1, %xmm0
	movq	%rax, (%rbx)
	movss	%xmm0, 8(%rbx)
.LBE3:
	.loc 1 72 0 discriminator 3
	subl	$1, -132(%rbp)
.L12:
	.loc 1 72 0 is_stmt 0 discriminator 1
	cmpl	$0, -132(%rbp)
	jg	.L13
	.loc 1 77 0 is_stmt 1
	movq	-152(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, %rdi
	call	get_results
	movq	%xmm0, %rax
	movaps	%xmm1, %xmm0
	movq	%rax, -80(%rbp)
	movss	%xmm0, -72(%rbp)
	.loc 1 79 0
	movl	$3, -132(%rbp)
	jmp	.L14
.L15:
	.loc 1 80 0 discriminator 3
	movss	-96(%rbp), %xmm1
	movl	-132(%rbp), %eax
	movslq	%eax, %rdx
	movq	%rdx, %rax
	addq	%rax, %rax
	addq	%rdx, %rax
	salq	$2, %rax
	leaq	-16(%rbp), %rsi
	addq	%rsi, %rax
	subq	$56, %rax
	movss	(%rax), %xmm0
	addss	%xmm1, %xmm0
	movss	%xmm0, -96(%rbp)
	.loc 1 81 0 discriminator 3
	movss	-104(%rbp), %xmm1
	movl	-132(%rbp), %eax
	movslq	%eax, %rdx
	movq	%rdx, %rax
	addq	%rax, %rax
	addq	%rdx, %rax
	salq	$2, %rax
	leaq	-16(%rbp), %rcx
	addq	%rcx, %rax
	subq	$64, %rax
	movss	(%rax), %xmm0
	addss	%xmm1, %xmm0
	movss	%xmm0, -104(%rbp)
	.loc 1 82 0 discriminator 3
	movss	-100(%rbp), %xmm1
	movl	-132(%rbp), %eax
	movslq	%eax, %rdx
	movq	%rdx, %rax
	addq	%rax, %rax
	addq	%rdx, %rax
	salq	$2, %rax
	leaq	-16(%rbp), %rsi
	addq	%rsi, %rax
	subq	$60, %rax
	movss	(%rax), %xmm0
	addss	%xmm1, %xmm0
	movss	%xmm0, -100(%rbp)
	.loc 1 79 0 discriminator 3
	subl	$1, -132(%rbp)
.L14:
	.loc 1 79 0 is_stmt 0 discriminator 1
	cmpl	$0, -132(%rbp)
	jns	.L15
	.loc 1 85 0 is_stmt 1
	movq	-152(%rbp), %rax
	movq	40(%rax), %rax
	movq	%rax, -128(%rbp)
	.loc 1 86 0
	jmp	.L16
.L17:
	.loc 1 87 0
	movq	-128(%rbp), %rax
	movq	8(%rax), %rax
	movq	%rax, -120(%rbp)
	.loc 1 88 0
	movss	-96(%rbp), %xmm1
	movq	-120(%rbp), %rax
	movl	(%rax), %eax
	cvtsi2ss	%eax, %xmm0
	addss	%xmm1, %xmm0
	movss	%xmm0, -96(%rbp)
	.loc 1 89 0
	movss	-100(%rbp), %xmm1
	movq	-120(%rbp), %rax
	movl	4(%rax), %eax
	cvtsi2ss	%eax, %xmm0
	addss	%xmm1, %xmm0
	movss	%xmm0, -100(%rbp)
	.loc 1 90 0
	movss	-104(%rbp), %xmm1
	movss	.LC2(%rip), %xmm0
	addss	%xmm1, %xmm0
	movss	%xmm0, -104(%rbp)
	.loc 1 91 0
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, -128(%rbp)
.L16:
	.loc 1 86 0
	cmpq	$0, -128(%rbp)
	jne	.L17
	.loc 1 94 0
	movq	-104(%rbp), %rax
	movq	%rax, -92(%rbp)
	movl	-96(%rbp), %eax
	movl	%eax, -84(%rbp)
.L18:
	movq	-92(%rbp), %rax
	movss	-84(%rbp), %xmm0
	movaps	%xmm0, %xmm1
	.loc 1 95 0 discriminator 1
	movq	%rax, -184(%rbp)
	movq	-184(%rbp), %xmm0
	movq	-24(%rbp), %rax
	xorq	%fs:40, %rax
	je	.L19
	.loc 1 95 0 is_stmt 0
	call	__stack_chk_fail@PLT
.L19:
	addq	$184, %rsp
	popq	%rbx
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE1:
	.size	get_results, .-get_results
	.globl	check_patients_inside
	.type	check_patients_inside, @function
check_patients_inside:
.LFB2:
	.loc 1 98 0 is_stmt 1
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	.loc 1 103 0
	jmp	.L21
.L23:
	.loc 1 104 0
	movq	-48(%rbp), %rax
	movq	8(%rax), %rax
	movq	%rax, -16(%rbp)
	.loc 1 105 0
	movq	-16(%rbp), %rax
	movl	8(%rax), %eax
	movl	%eax, -20(%rbp)
	.loc 1 106 0
	movl	-20(%rbp), %eax
	leal	-1(%rax), %edx
	movq	-16(%rbp), %rax
	movl	%edx, 8(%rax)
	.loc 1 107 0
	movq	-16(%rbp), %rax
	movl	8(%rax), %eax
	testl	%eax, %eax
	jne	.L22
	.loc 1 108 0
	movq	-40(%rbp), %rax
	movl	68(%rax), %eax
	movl	%eax, -20(%rbp)
	.loc 1 109 0
	movl	-20(%rbp), %eax
	leal	1(%rax), %edx
	movq	-40(%rbp), %rax
	movl	%edx, 68(%rax)
	.loc 1 110 0
	movq	-40(%rbp), %rax
	subq	$-128, %rax
	movq	%rax, -8(%rbp)
	.loc 1 111 0
	movq	-16(%rbp), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	removeList@PLT
	.loc 1 112 0
	movq	-40(%rbp), %rax
	addq	$40, %rax
	movq	%rax, -8(%rbp)
	.loc 1 113 0
	movq	-16(%rbp), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	addList@PLT
.L22:
	.loc 1 114 0
	movq	-48(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, -48(%rbp)
.L21:
	.loc 1 103 0
	cmpq	$0, -48(%rbp)
	jne	.L23
	.loc 1 116 0
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE2:
	.size	check_patients_inside, .-check_patients_inside
	.globl	check_patients_assess
	.type	check_patients_assess, @function
check_patients_assess:
.LFB3:
	.loc 1 118 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$64, %rsp
	movq	%rdi, -56(%rbp)
	movq	%rsi, -64(%rbp)
	.loc 1 121 0
	movq	$0, -24(%rbp)
	.loc 1 125 0
	jmp	.L25
.L29:
	.loc 1 126 0
	movq	-64(%rbp), %rax
	movq	8(%rax), %rax
	movq	%rax, -16(%rbp)
	.loc 1 127 0
	movq	-16(%rbp), %rax
	movl	8(%rax), %eax
	movl	%eax, -36(%rbp)
	.loc 1 128 0
	movl	-36(%rbp), %eax
	leal	-1(%rax), %edx
	movq	-16(%rbp), %rax
	movl	%edx, 8(%rax)
	.loc 1 129 0
	movq	-56(%rbp), %rax
	movl	176(%rax), %eax
	movl	%eax, -32(%rbp)
	.loc 1 130 0
	movq	-16(%rbp), %rax
	movl	8(%rax), %eax
	testl	%eax, %eax
	jne	.L26
	.loc 1 131 0
	movq	-56(%rbp), %rax
	movq	184(%rax), %rax
	movq	%rax, -8(%rbp)
	.loc 1 132 0
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	call	my_rand@PLT
	movd	%xmm0, %eax
	movl	%eax, -28(%rbp)
	.loc 1 133 0
	movss	-28(%rbp), %xmm1
	movss	.LC3(%rip), %xmm0
	mulss	%xmm1, %xmm0
	cvttss2siq	%xmm0, %rdx
	movq	-56(%rbp), %rax
	movq	%rdx, 184(%rax)
	.loc 1 134 0
	movq	-56(%rbp), %rax
	movl	176(%rax), %eax
	movl	%eax, -32(%rbp)
	.loc 1 135 0
	cvtss2sd	-28(%rbp), %xmm0
	ucomisd	.LC4(%rip), %xmm0
	ja	.L27
	.loc 1 135 0 is_stmt 0 discriminator 1
	cmpl	$0, -32(%rbp)
	jne	.L28
.L27:
	.loc 1 136 0 is_stmt 1
	movq	-56(%rbp), %rax
	leaq	104(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rsi
	movq	%rdx, %rdi
	call	removeList@PLT
	.loc 1 137 0
	movq	-56(%rbp), %rax
	leaq	128(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rsi
	movq	%rdx, %rdi
	call	addList@PLT
	.loc 1 138 0
	movq	-16(%rbp), %rax
	movl	$10, 8(%rax)
	.loc 1 139 0
	movq	-16(%rbp), %rax
	movl	4(%rax), %eax
	movl	%eax, -36(%rbp)
	.loc 1 140 0
	movl	-36(%rbp), %eax
	leal	10(%rax), %edx
	movq	-16(%rbp), %rax
	movl	%edx, 4(%rax)
	jmp	.L26
.L28:
	.loc 1 142 0
	movq	-56(%rbp), %rax
	movl	68(%rax), %eax
	movl	%eax, -36(%rbp)
	.loc 1 143 0
	movl	-36(%rbp), %eax
	leal	1(%rax), %edx
	movq	-56(%rbp), %rax
	movl	%edx, 68(%rax)
	.loc 1 145 0
	movq	-56(%rbp), %rax
	leaq	104(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rsi
	movq	%rdx, %rdi
	call	removeList@PLT
	.loc 1 146 0
	movq	-56(%rbp), %rax
	addq	$152, %rax
	movq	%rax, -24(%rbp)
	.loc 1 147 0
	movq	-16(%rbp), %rdx
	movq	-24(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	addList@PLT
.L26:
	.loc 1 151 0
	movq	-64(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, -64(%rbp)
.L25:
	.loc 1 125 0
	cmpq	$0, -64(%rbp)
	jne	.L29
	.loc 1 153 0
	movq	-24(%rbp), %rax
	.loc 1 154 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3:
	.size	check_patients_assess, .-check_patients_assess
	.globl	check_patients_waiting
	.type	check_patients_waiting, @function
check_patients_waiting:
.LFB4:
	.loc 1 156 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	.loc 1 160 0
	jmp	.L32
.L35:
	.loc 1 161 0
	movq	-24(%rbp), %rax
	movl	68(%rax), %eax
	movl	%eax, -16(%rbp)
	.loc 1 162 0
	movq	-32(%rbp), %rax
	movq	8(%rax), %rax
	movq	%rax, -8(%rbp)
	.loc 1 163 0
	cmpl	$0, -16(%rbp)
	jle	.L33
	.loc 1 164 0
	movq	-24(%rbp), %rax
	movl	68(%rax), %eax
	movl	%eax, -12(%rbp)
	.loc 1 165 0
	movl	-12(%rbp), %eax
	leal	-1(%rax), %edx
	movq	-24(%rbp), %rax
	movl	%edx, 68(%rax)
	.loc 1 166 0
	movq	-8(%rbp), %rax
	movl	$3, 8(%rax)
	.loc 1 167 0
	movq	-8(%rbp), %rax
	movl	4(%rax), %eax
	movl	%eax, -12(%rbp)
	.loc 1 168 0
	movl	-12(%rbp), %eax
	leal	3(%rax), %edx
	movq	-8(%rbp), %rax
	movl	%edx, 4(%rax)
	.loc 1 170 0
	movq	-24(%rbp), %rax
	leaq	80(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rax, %rsi
	movq	%rdx, %rdi
	call	removeList@PLT
	.loc 1 171 0
	movq	-24(%rbp), %rax
	leaq	104(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rax, %rsi
	movq	%rdx, %rdi
	call	addList@PLT
	jmp	.L34
.L33:
	.loc 1 173 0
	movq	-8(%rbp), %rax
	movl	4(%rax), %eax
	movl	%eax, -12(%rbp)
	.loc 1 174 0
	movl	-12(%rbp), %eax
	leal	1(%rax), %edx
	movq	-8(%rbp), %rax
	movl	%edx, 4(%rax)
.L34:
	.loc 1 175 0
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, -32(%rbp)
.L32:
	.loc 1 160 0
	cmpq	$0, -32(%rbp)
	jne	.L35
	.loc 1 176 0
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE4:
	.size	check_patients_waiting, .-check_patients_waiting
	.globl	put_in_hosp
	.type	put_in_hosp, @function
put_in_hosp:
.LFB5:
	.loc 1 179 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	.loc 1 180 0
	movq	-32(%rbp), %rax
	movl	(%rax), %eax
	movl	%eax, -4(%rbp)
	.loc 1 182 0
	movl	-4(%rbp), %eax
	leal	1(%rax), %edx
	movq	-32(%rbp), %rax
	movl	%edx, (%rax)
	.loc 1 183 0
	movq	-24(%rbp), %rax
	movl	4(%rax), %eax
	testl	%eax, %eax
	jle	.L37
	.loc 1 184 0
	movq	-24(%rbp), %rax
	movl	4(%rax), %eax
	movl	%eax, -4(%rbp)
	.loc 1 185 0
	movl	-4(%rbp), %eax
	leal	-1(%rax), %edx
	movq	-24(%rbp), %rax
	movl	%edx, 4(%rax)
	.loc 1 186 0
	movq	-24(%rbp), %rax
	leaq	40(%rax), %rdx
	movq	-32(%rbp), %rax
	movq	%rax, %rsi
	movq	%rdx, %rdi
	call	addList@PLT
	.loc 1 187 0
	movq	-32(%rbp), %rax
	movl	$3, 8(%rax)
	.loc 1 188 0
	movq	-32(%rbp), %rax
	movl	4(%rax), %eax
	movl	%eax, -4(%rbp)
	.loc 1 189 0
	movl	-4(%rbp), %eax
	leal	3(%rax), %edx
	movq	-32(%rbp), %rax
	movl	%edx, 4(%rax)
	.loc 1 193 0
	jmp	.L39
.L37:
	.loc 1 191 0
	movq	-24(%rbp), %rax
	leaq	16(%rax), %rdx
	movq	-32(%rbp), %rax
	movq	%rax, %rsi
	movq	%rdx, %rdi
	call	addList@PLT
.L39:
	.loc 1 193 0
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE5:
	.size	put_in_hosp, .-put_in_hosp
	.globl	generate_patient
	.type	generate_patient, @function
generate_patient:
.LFB6:
	.loc 1 196 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	.loc 1 202 0
	movq	-40(%rbp), %rax
	movq	184(%rax), %rax
	movq	%rax, -24(%rbp)
	.loc 1 203 0
	movq	-24(%rbp), %rax
	movq	%rax, %rdi
	call	my_rand@PLT
	movd	%xmm0, %eax
	movl	%eax, -32(%rbp)
	.loc 1 204 0
	movss	-32(%rbp), %xmm1
	movss	.LC3(%rip), %xmm0
	mulss	%xmm1, %xmm0
	cvttss2siq	%xmm0, %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, 184(%rax)
	.loc 1 205 0
	movq	-40(%rbp), %rax
	movq	184(%rax), %rax
	movq	%rax, -16(%rbp)
	.loc 1 206 0
	movq	-40(%rbp), %rax
	movl	176(%rax), %eax
	movl	%eax, -28(%rbp)
	.loc 1 207 0
	cvtss2sd	-32(%rbp), %xmm0
	ucomisd	.LC5(%rip), %xmm0
	jbe	.L45
	.loc 1 208 0
	movl	$24, %edi
	call	malloc@PLT
	movq	%rax, -8(%rbp)
	.loc 1 209 0
	movq	-8(%rbp), %rax
	movl	$0, (%rax)
	.loc 1 210 0
	movq	-8(%rbp), %rax
	movl	$0, 4(%rax)
	.loc 1 211 0
	movq	-8(%rbp), %rax
	movl	$0, 8(%rax)
	.loc 1 212 0
	movq	-8(%rbp), %rax
	movq	-40(%rbp), %rdx
	movq	%rdx, 16(%rax)
	.loc 1 213 0
	movq	-8(%rbp), %rax
	jmp	.L43
.L45:
	.loc 1 215 0
	movl	$0, %eax
.L43:
	.loc 1 216 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE6:
	.size	generate_patient, .-generate_patient
	.section	.rodata
	.align 8
.LC6:
	.string	"\n\n    Columbian Health Care Simulator\n"
.LC7:
	.string	"Working..."
.LC8:
	.string	"%d\n"
.LC9:
	.string	"Getting Results"
.LC10:
	.string	"Done.\n"
	.align 8
.LC11:
	.string	"# of people treated:              %f people\n"
	.align 8
.LC12:
	.string	"Average length of stay:           %0.2f time units\n"
	.align 8
.LC13:
	.string	"Average # of hospitals visited:   %f hospitals\n\n"
	.text
	.globl	main
	.type	main, @function
main:
.LFB7:
	.loc 1 219 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$64, %rsp
	movl	%edi, -52(%rbp)
	movq	%rsi, -64(%rbp)
	.loc 1 221 0
	movq	$0, -24(%rbp)
	.loc 1 225 0
	movq	-64(%rbp), %rdx
	movl	-52(%rbp), %eax
	movq	%rdx, %rsi
	movl	%eax, %edi
	call	dealwithargs@PLT
	.loc 1 226 0
	movl	max_level(%rip), %eax
	movq	-24(%rbp), %rdx
	movl	$0, %esi
	movl	%eax, %edi
	call	alloc_tree
	movq	%rax, -24(%rbp)
	.loc 1 228 0
	leaq	.LC6(%rip), %rdi
	call	puts@PLT
	.loc 1 229 0
	leaq	.LC7(%rip), %rdi
	call	puts@PLT
	.loc 1 231 0
	movl	$0, -40(%rbp)
	jmp	.L47
.L49:
	.loc 1 232 0
	movl	-40(%rbp), %ecx
	movl	$1374389535, %edx
	movl	%ecx, %eax
	imull	%edx
	sarl	$4, %edx
	movl	%ecx, %eax
	sarl	$31, %eax
	subl	%eax, %edx
	movl	%edx, %eax
	imull	$50, %eax, %eax
	subl	%eax, %ecx
	movl	%ecx, %eax
	testl	%eax, %eax
	jne	.L48
	.loc 1 232 0 is_stmt 0 discriminator 1
	movl	-40(%rbp), %eax
	movl	%eax, %esi
	leaq	.LC8(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
.L48:
	.loc 1 233 0 is_stmt 1 discriminator 2
	movq	-24(%rbp), %rax
	movq	%rax, %rdi
	call	sim
	.loc 1 231 0 discriminator 2
	addl	$1, -40(%rbp)
.L47:
	.loc 1 231 0 is_stmt 0 discriminator 1
	movl	-40(%rbp), %eax
	movslq	%eax, %rdx
	movq	max_time(%rip), %rax
	cmpq	%rax, %rdx
	jl	.L49
	.loc 1 236 0 is_stmt 1
	leaq	.LC9(%rip), %rdi
	call	puts@PLT
	.loc 1 237 0
	movq	-24(%rbp), %rax
	movq	%rax, %rdi
	call	get_results
	movq	%xmm0, %rax
	movaps	%xmm1, %xmm0
	movq	%rax, -12(%rbp)
	movss	%xmm0, -4(%rbp)
	.loc 1 238 0
	movss	-12(%rbp), %xmm0
	movss	%xmm0, -36(%rbp)
	.loc 1 239 0
	movss	-8(%rbp), %xmm0
	movss	%xmm0, -32(%rbp)
	.loc 1 240 0
	movss	-4(%rbp), %xmm0
	movss	%xmm0, -28(%rbp)
	.loc 1 242 0
	leaq	.LC10(%rip), %rdi
	call	puts@PLT
	.loc 1 243 0
	cvtss2sd	-36(%rbp), %xmm0
	leaq	.LC11(%rip), %rdi
	movl	$1, %eax
	call	printf@PLT
	.loc 1 246 0
	movss	-32(%rbp), %xmm0
	divss	-36(%rbp), %xmm0
	.loc 1 245 0
	cvtss2sd	%xmm0, %xmm0
	leaq	.LC12(%rip), %rdi
	movl	$1, %eax
	call	printf@PLT
	.loc 1 248 0
	movss	-28(%rbp), %xmm0
	divss	-36(%rbp), %xmm0
	.loc 1 247 0
	cvtss2sd	%xmm0, %xmm0
	leaq	.LC13(%rip), %rdi
	movl	$1, %eax
	call	printf@PLT
	.loc 1 250 0
	movl	$0, %eax
	.loc 1 251 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE7:
	.size	main, .-main
	.globl	sim
	.type	sim, @function
sim:
.LFB8:
	.loc 1 255 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	addq	$-128, %rsp
	movq	%rdi, -120(%rbp)
	.loc 1 255 0
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	.loc 1 263 0
	cmpq	$0, -120(%rbp)
	jne	.L52
	.loc 1 263 0 is_stmt 0 discriminator 1
	movl	$0, %eax
	jmp	.L62
.L52:
	.loc 1 265 0 is_stmt 1
	movq	-120(%rbp), %rax
	movl	176(%rax), %eax
	movl	%eax, -108(%rbp)
	.loc 1 267 0
	movl	$3, -112(%rbp)
	jmp	.L54
.L55:
.LBB4:
	.loc 1 268 0 discriminator 3
	movq	-120(%rbp), %rax
	movl	-112(%rbp), %edx
	movslq	%edx, %rdx
	movq	(%rax,%rdx,8), %rax
	movq	%rax, -64(%rbp)
	.loc 1 269 0 discriminator 3
	movq	-64(%rbp), %rax
	movq	%rax, %rdi
	call	sim
	movq	%rax, -56(%rbp)
	.loc 1 270 0 discriminator 3
	movl	-112(%rbp), %eax
	cltq
	movq	-56(%rbp), %rdx
	movq	%rdx, -48(%rbp,%rax,8)
.LBE4:
	.loc 1 267 0 discriminator 3
	subl	$1, -112(%rbp)
.L54:
	.loc 1 267 0 is_stmt 0 discriminator 1
	cmpl	$0, -112(%rbp)
	jg	.L55
	.loc 1 273 0 is_stmt 1
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, %rdi
	call	sim
	movq	%rax, -48(%rbp)
	.loc 1 274 0
	movq	-120(%rbp), %rax
	addq	$64, %rax
	movq	%rax, -96(%rbp)
	.loc 1 276 0
	movl	$3, -112(%rbp)
	jmp	.L56
.L60:
.LBB5:
	.loc 1 277 0
	movl	-112(%rbp), %eax
	cltq
	movq	-48(%rbp,%rax,8), %rax
	movq	%rax, -104(%rbp)
	movq	-104(%rbp), %rax
	movq	%rax, -72(%rbp)
	.loc 1 278 0
	cmpq	$0, -104(%rbp)
	je	.L57
	.loc 1 279 0
	movq	-104(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, -104(%rbp)
	.loc 1 280 0
	jmp	.L58
.L59:
	.loc 1 281 0
	movq	-104(%rbp), %rax
	movq	8(%rax), %rdx
	movq	-96(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	put_in_hosp
	.loc 1 282 0
	movq	-104(%rbp), %rax
	movq	8(%rax), %rdx
	movq	-72(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	removeList@PLT
	.loc 1 283 0
	movq	-104(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, -104(%rbp)
.L58:
	.loc 1 280 0
	cmpq	$0, -104(%rbp)
	jne	.L59
.L57:
.LBE5:
	.loc 1 276 0 discriminator 2
	subl	$1, -112(%rbp)
.L56:
	.loc 1 276 0 is_stmt 0 discriminator 1
	cmpl	$0, -112(%rbp)
	jns	.L60
	.loc 1 288 0 is_stmt 1
	movq	-120(%rbp), %rax
	movq	128(%rax), %rdx
	movq	-120(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	check_patients_inside
	.loc 1 289 0
	movq	-120(%rbp), %rax
	movq	104(%rax), %rdx
	movq	-120(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	check_patients_assess
	movq	%rax, -88(%rbp)
	.loc 1 290 0
	movq	-120(%rbp), %rax
	movq	80(%rax), %rdx
	movq	-120(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	check_patients_waiting
	.loc 1 293 0
	movq	-120(%rbp), %rax
	movq	%rax, %rdi
	call	generate_patient
	movq	%rax, -80(%rbp)
	cmpq	$0, -80(%rbp)
	je	.L61
	.loc 1 294 0
	movq	-120(%rbp), %rax
	movl	176(%rax), %eax
	movl	%eax, -108(%rbp)
	.loc 1 295 0
	movq	-120(%rbp), %rax
	leaq	64(%rax), %rdx
	movq	-80(%rbp), %rax
	movq	%rax, %rsi
	movq	%rdx, %rdi
	call	put_in_hosp
.L61:
	.loc 1 298 0
	movq	-88(%rbp), %rax
.L62:
	.loc 1 299 0 discriminator 1
	movq	-8(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L63
	.loc 1 299 0 is_stmt 0
	call	__stack_chk_fail@PLT
.L63:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE8:
	.size	sim, .-sim
	.section	.rodata
	.align 8
.LC0:
	.long	0
	.long	1073741824
	.align 4
.LC2:
	.long	1065353216
	.align 4
.LC3:
	.long	1325400064
	.align 8
.LC4:
	.long	2576980378
	.long	1069128089
	.align 8
.LC5:
	.long	996432413
	.long	1071992799
	.text
.Letext0:
	.file 2 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h"
	.file 3 "/usr/include/x86_64-linux-gnu/bits/types.h"
	.file 4 "/usr/include/x86_64-linux-gnu/bits/libio.h"
	.file 5 "/usr/include/stdio.h"
	.file 6 "../olden/health/src/health.h"
	.section	.debug_info,"",@progbits
.Ldebug_info0:
	.long	0x970
	.value	0x4
	.long	.Ldebug_abbrev0
	.byte	0x8
	.uleb128 0x1
	.long	.LASF99
	.byte	0xc
	.long	.LASF100
	.long	.LASF101
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.long	.Ldebug_line0
	.uleb128 0x2
	.long	.LASF7
	.byte	0x2
	.byte	0xd8
	.long	0x38
	.uleb128 0x3
	.byte	0x8
	.byte	0x7
	.long	.LASF0
	.uleb128 0x3
	.byte	0x1
	.byte	0x8
	.long	.LASF1
	.uleb128 0x3
	.byte	0x2
	.byte	0x7
	.long	.LASF2
	.uleb128 0x3
	.byte	0x4
	.byte	0x7
	.long	.LASF3
	.uleb128 0x3
	.byte	0x1
	.byte	0x6
	.long	.LASF4
	.uleb128 0x3
	.byte	0x2
	.byte	0x5
	.long	.LASF5
	.uleb128 0x4
	.byte	0x4
	.byte	0x5
	.string	"int"
	.uleb128 0x3
	.byte	0x8
	.byte	0x5
	.long	.LASF6
	.uleb128 0x2
	.long	.LASF8
	.byte	0x3
	.byte	0x8c
	.long	0x69
	.uleb128 0x2
	.long	.LASF9
	.byte	0x3
	.byte	0x8d
	.long	0x69
	.uleb128 0x5
	.byte	0x8
	.uleb128 0x6
	.byte	0x8
	.long	0x8e
	.uleb128 0x3
	.byte	0x1
	.byte	0x6
	.long	.LASF10
	.uleb128 0x7
	.long	.LASF40
	.byte	0xd8
	.byte	0x4
	.byte	0xf5
	.long	0x215
	.uleb128 0x8
	.long	.LASF11
	.byte	0x4
	.byte	0xf6
	.long	0x62
	.byte	0
	.uleb128 0x8
	.long	.LASF12
	.byte	0x4
	.byte	0xfb
	.long	0x88
	.byte	0x8
	.uleb128 0x8
	.long	.LASF13
	.byte	0x4
	.byte	0xfc
	.long	0x88
	.byte	0x10
	.uleb128 0x8
	.long	.LASF14
	.byte	0x4
	.byte	0xfd
	.long	0x88
	.byte	0x18
	.uleb128 0x8
	.long	.LASF15
	.byte	0x4
	.byte	0xfe
	.long	0x88
	.byte	0x20
	.uleb128 0x8
	.long	.LASF16
	.byte	0x4
	.byte	0xff
	.long	0x88
	.byte	0x28
	.uleb128 0x9
	.long	.LASF17
	.byte	0x4
	.value	0x100
	.long	0x88
	.byte	0x30
	.uleb128 0x9
	.long	.LASF18
	.byte	0x4
	.value	0x101
	.long	0x88
	.byte	0x38
	.uleb128 0x9
	.long	.LASF19
	.byte	0x4
	.value	0x102
	.long	0x88
	.byte	0x40
	.uleb128 0x9
	.long	.LASF20
	.byte	0x4
	.value	0x104
	.long	0x88
	.byte	0x48
	.uleb128 0x9
	.long	.LASF21
	.byte	0x4
	.value	0x105
	.long	0x88
	.byte	0x50
	.uleb128 0x9
	.long	.LASF22
	.byte	0x4
	.value	0x106
	.long	0x88
	.byte	0x58
	.uleb128 0x9
	.long	.LASF23
	.byte	0x4
	.value	0x108
	.long	0x24d
	.byte	0x60
	.uleb128 0x9
	.long	.LASF24
	.byte	0x4
	.value	0x10a
	.long	0x253
	.byte	0x68
	.uleb128 0x9
	.long	.LASF25
	.byte	0x4
	.value	0x10c
	.long	0x62
	.byte	0x70
	.uleb128 0x9
	.long	.LASF26
	.byte	0x4
	.value	0x110
	.long	0x62
	.byte	0x74
	.uleb128 0x9
	.long	.LASF27
	.byte	0x4
	.value	0x112
	.long	0x70
	.byte	0x78
	.uleb128 0x9
	.long	.LASF28
	.byte	0x4
	.value	0x116
	.long	0x46
	.byte	0x80
	.uleb128 0x9
	.long	.LASF29
	.byte	0x4
	.value	0x117
	.long	0x54
	.byte	0x82
	.uleb128 0x9
	.long	.LASF30
	.byte	0x4
	.value	0x118
	.long	0x259
	.byte	0x83
	.uleb128 0x9
	.long	.LASF31
	.byte	0x4
	.value	0x11c
	.long	0x269
	.byte	0x88
	.uleb128 0x9
	.long	.LASF32
	.byte	0x4
	.value	0x125
	.long	0x7b
	.byte	0x90
	.uleb128 0x9
	.long	.LASF33
	.byte	0x4
	.value	0x12d
	.long	0x86
	.byte	0x98
	.uleb128 0x9
	.long	.LASF34
	.byte	0x4
	.value	0x12e
	.long	0x86
	.byte	0xa0
	.uleb128 0x9
	.long	.LASF35
	.byte	0x4
	.value	0x12f
	.long	0x86
	.byte	0xa8
	.uleb128 0x9
	.long	.LASF36
	.byte	0x4
	.value	0x130
	.long	0x86
	.byte	0xb0
	.uleb128 0x9
	.long	.LASF37
	.byte	0x4
	.value	0x132
	.long	0x2d
	.byte	0xb8
	.uleb128 0x9
	.long	.LASF38
	.byte	0x4
	.value	0x133
	.long	0x62
	.byte	0xc0
	.uleb128 0x9
	.long	.LASF39
	.byte	0x4
	.value	0x135
	.long	0x26f
	.byte	0xc4
	.byte	0
	.uleb128 0xa
	.long	.LASF102
	.byte	0x4
	.byte	0x9a
	.uleb128 0x7
	.long	.LASF41
	.byte	0x18
	.byte	0x4
	.byte	0xa0
	.long	0x24d
	.uleb128 0x8
	.long	.LASF42
	.byte	0x4
	.byte	0xa1
	.long	0x24d
	.byte	0
	.uleb128 0x8
	.long	.LASF43
	.byte	0x4
	.byte	0xa2
	.long	0x253
	.byte	0x8
	.uleb128 0x8
	.long	.LASF44
	.byte	0x4
	.byte	0xa6
	.long	0x62
	.byte	0x10
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x21c
	.uleb128 0x6
	.byte	0x8
	.long	0x95
	.uleb128 0xb
	.long	0x8e
	.long	0x269
	.uleb128 0xc
	.long	0x38
	.byte	0
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x215
	.uleb128 0xb
	.long	0x8e
	.long	0x27f
	.uleb128 0xc
	.long	0x38
	.byte	0x13
	.byte	0
	.uleb128 0xd
	.long	.LASF103
	.uleb128 0xe
	.long	.LASF45
	.byte	0x4
	.value	0x13f
	.long	0x27f
	.uleb128 0xe
	.long	.LASF46
	.byte	0x4
	.value	0x140
	.long	0x27f
	.uleb128 0xe
	.long	.LASF47
	.byte	0x4
	.value	0x141
	.long	0x27f
	.uleb128 0xf
	.long	.LASF48
	.byte	0x5
	.byte	0x87
	.long	0x253
	.uleb128 0xf
	.long	.LASF49
	.byte	0x5
	.byte	0x88
	.long	0x253
	.uleb128 0xf
	.long	.LASF50
	.byte	0x5
	.byte	0x89
	.long	0x253
	.uleb128 0x3
	.byte	0x8
	.byte	0x5
	.long	.LASF51
	.uleb128 0x3
	.byte	0x4
	.byte	0x4
	.long	.LASF52
	.uleb128 0x3
	.byte	0x8
	.byte	0x4
	.long	.LASF53
	.uleb128 0xf
	.long	.LASF54
	.byte	0x6
	.byte	0x17
	.long	0x62
	.uleb128 0xf
	.long	.LASF55
	.byte	0x6
	.byte	0x18
	.long	0x69
	.uleb128 0xf
	.long	.LASF56
	.byte	0x6
	.byte	0x19
	.long	0x2c9
	.uleb128 0x7
	.long	.LASF57
	.byte	0xc
	.byte	0x6
	.byte	0x1b
	.long	0x330
	.uleb128 0x8
	.long	.LASF58
	.byte	0x6
	.byte	0x1c
	.long	0x2d0
	.byte	0
	.uleb128 0x8
	.long	.LASF59
	.byte	0x6
	.byte	0x1d
	.long	0x2d0
	.byte	0x4
	.uleb128 0x8
	.long	.LASF60
	.byte	0x6
	.byte	0x1e
	.long	0x2d0
	.byte	0x8
	.byte	0
	.uleb128 0x7
	.long	.LASF61
	.byte	0x18
	.byte	0x6
	.byte	0x21
	.long	0x36d
	.uleb128 0x8
	.long	.LASF62
	.byte	0x6
	.byte	0x22
	.long	0x62
	.byte	0
	.uleb128 0x8
	.long	.LASF63
	.byte	0x6
	.byte	0x23
	.long	0x62
	.byte	0x4
	.uleb128 0x8
	.long	.LASF64
	.byte	0x6
	.byte	0x24
	.long	0x62
	.byte	0x8
	.uleb128 0x8
	.long	.LASF65
	.byte	0x6
	.byte	0x25
	.long	0x3c2
	.byte	0x10
	.byte	0
	.uleb128 0x7
	.long	.LASF66
	.byte	0xc0
	.byte	0x6
	.byte	0x42
	.long	0x3c2
	.uleb128 0x8
	.long	.LASF67
	.byte	0x6
	.byte	0x44
	.long	0x465
	.byte	0
	.uleb128 0x8
	.long	.LASF68
	.byte	0x6
	.byte	0x45
	.long	0x3c2
	.byte	0x20
	.uleb128 0x8
	.long	.LASF69
	.byte	0x6
	.byte	0x46
	.long	0x3c8
	.byte	0x28
	.uleb128 0x8
	.long	.LASF70
	.byte	0x6
	.byte	0x47
	.long	0x405
	.byte	0x40
	.uleb128 0x8
	.long	.LASF71
	.byte	0x6
	.byte	0x48
	.long	0x62
	.byte	0xb0
	.uleb128 0x8
	.long	.LASF56
	.byte	0x6
	.byte	0x49
	.long	0x2c9
	.byte	0xb8
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x36d
	.uleb128 0x7
	.long	.LASF72
	.byte	0x18
	.byte	0x6
	.byte	0x28
	.long	0x3f9
	.uleb128 0x8
	.long	.LASF67
	.byte	0x6
	.byte	0x29
	.long	0x3f9
	.byte	0
	.uleb128 0x8
	.long	.LASF73
	.byte	0x6
	.byte	0x2a
	.long	0x3ff
	.byte	0x8
	.uleb128 0x8
	.long	.LASF68
	.byte	0x6
	.byte	0x2b
	.long	0x3f9
	.byte	0x10
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x3c8
	.uleb128 0x6
	.byte	0x8
	.long	0x330
	.uleb128 0x7
	.long	.LASF74
	.byte	0x70
	.byte	0x6
	.byte	0x2e
	.long	0x465
	.uleb128 0x8
	.long	.LASF75
	.byte	0x6
	.byte	0x30
	.long	0x62
	.byte	0
	.uleb128 0x8
	.long	.LASF76
	.byte	0x6
	.byte	0x31
	.long	0x62
	.byte	0x4
	.uleb128 0x8
	.long	.LASF77
	.byte	0x6
	.byte	0x32
	.long	0x62
	.byte	0x8
	.uleb128 0x8
	.long	.LASF78
	.byte	0x6
	.byte	0x33
	.long	0x3c8
	.byte	0x10
	.uleb128 0x8
	.long	.LASF79
	.byte	0x6
	.byte	0x34
	.long	0x3c8
	.byte	0x28
	.uleb128 0x8
	.long	.LASF80
	.byte	0x6
	.byte	0x35
	.long	0x3c8
	.byte	0x40
	.uleb128 0x10
	.string	"up"
	.byte	0x6
	.byte	0x36
	.long	0x3c8
	.byte	0x58
	.byte	0
	.uleb128 0xb
	.long	0x3c2
	.long	0x475
	.uleb128 0xc
	.long	0x38
	.byte	0x3
	.byte	0
	.uleb128 0x11
	.long	0x2de
	.byte	0x1
	.byte	0xd
	.uleb128 0x9
	.byte	0x3
	.quad	max_level
	.uleb128 0x11
	.long	0x2e9
	.byte	0x1
	.byte	0xe
	.uleb128 0x9
	.byte	0x3
	.quad	max_time
	.uleb128 0x11
	.long	0x2f4
	.byte	0x1
	.byte	0xf
	.uleb128 0x9
	.byte	0x3
	.quad	seed
	.uleb128 0x12
	.string	"sim"
	.byte	0x1
	.byte	0xfe
	.long	0x3f9
	.quad	.LFB8
	.quad	.LFE8-.LFB8
	.uleb128 0x1
	.byte	0x9c
	.long	0x595
	.uleb128 0x13
	.long	.LASF83
	.byte	0x1
	.byte	0xfe
	.long	0x3c2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x14
	.string	"i"
	.byte	0x1
	.value	0x100
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x15
	.long	.LASF73
	.byte	0x1
	.value	0x101
	.long	0x3ff
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x14
	.string	"l"
	.byte	0x1
	.value	0x102
	.long	0x3f9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x14
	.string	"up"
	.byte	0x1
	.value	0x102
	.long	0x3f9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x14
	.string	"h"
	.byte	0x1
	.value	0x103
	.long	0x595
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x14
	.string	"val"
	.byte	0x1
	.value	0x104
	.long	0x59b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x15
	.long	.LASF71
	.byte	0x1
	.value	0x106
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -124
	.uleb128 0x16
	.quad	.LBB4
	.quad	.LBE4-.LBB4
	.long	0x572
	.uleb128 0x14
	.string	"V"
	.byte	0x1
	.value	0x10c
	.long	0x3c2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x14
	.string	"L"
	.byte	0x1
	.value	0x10d
	.long	0x3f9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.uleb128 0x17
	.quad	.LBB5
	.quad	.LBE5-.LBB5
	.uleb128 0x15
	.long	.LASF81
	.byte	0x1
	.value	0x115
	.long	0x3f9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.byte	0
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x405
	.uleb128 0xb
	.long	0x3f9
	.long	0x5ab
	.uleb128 0xc
	.long	0x38
	.byte	0x3
	.byte	0
	.uleb128 0x18
	.long	.LASF82
	.byte	0x1
	.byte	0xda
	.long	0x62
	.quad	.LFB7
	.quad	.LFE7-.LFB7
	.uleb128 0x1
	.byte	0x9c
	.long	0x63d
	.uleb128 0x13
	.long	.LASF84
	.byte	0x1
	.byte	0xda
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x13
	.long	.LASF85
	.byte	0x1
	.byte	0xda
	.long	0x63d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x19
	.long	.LASF86
	.byte	0x1
	.byte	0xdc
	.long	0x2ff
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1a
	.string	"top"
	.byte	0x1
	.byte	0xdd
	.long	0x3c2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1a
	.string	"i"
	.byte	0x1
	.byte	0xde
	.long	0x62
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x19
	.long	.LASF59
	.byte	0x1
	.byte	0xdf
	.long	0x2d0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x19
	.long	.LASF58
	.byte	0x1
	.byte	0xdf
	.long	0x2d0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x19
	.long	.LASF60
	.byte	0x1
	.byte	0xdf
	.long	0x2d0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x88
	.uleb128 0x18
	.long	.LASF87
	.byte	0x1
	.byte	0xc3
	.long	0x3ff
	.quad	.LFB6
	.quad	.LFE6-.LFB6
	.uleb128 0x1
	.byte	0x9c
	.long	0x6b7
	.uleb128 0x13
	.long	.LASF83
	.byte	0x1
	.byte	0xc3
	.long	0x3c2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x1a
	.string	"s"
	.byte	0x1
	.byte	0xc5
	.long	0x2c9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x19
	.long	.LASF88
	.byte	0x1
	.byte	0xc5
	.long	0x2c9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x19
	.long	.LASF73
	.byte	0x1
	.byte	0xc6
	.long	0x3ff
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x19
	.long	.LASF89
	.byte	0x1
	.byte	0xc7
	.long	0x2d0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x19
	.long	.LASF71
	.byte	0x1
	.byte	0xc8
	.long	0x62
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.byte	0
	.uleb128 0x1b
	.long	.LASF90
	.byte	0x1
	.byte	0xb3
	.quad	.LFB5
	.quad	.LFE5-.LFB5
	.uleb128 0x1
	.byte	0x9c
	.long	0x6fd
	.uleb128 0x13
	.long	.LASF70
	.byte	0x1
	.byte	0xb3
	.long	0x595
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x13
	.long	.LASF73
	.byte	0x1
	.byte	0xb3
	.long	0x3ff
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1a
	.string	"t"
	.byte	0x1
	.byte	0xb4
	.long	0x62
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x1b
	.long	.LASF91
	.byte	0x1
	.byte	0x9c
	.quad	.LFB4
	.quad	.LFE4-.LFB4
	.uleb128 0x1
	.byte	0x9c
	.long	0x75b
	.uleb128 0x13
	.long	.LASF83
	.byte	0x1
	.byte	0x9c
	.long	0x3c2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x13
	.long	.LASF92
	.byte	0x1
	.byte	0x9c
	.long	0x3f9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1a
	.string	"i"
	.byte	0x1
	.byte	0x9d
	.long	0x62
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1a
	.string	"t"
	.byte	0x1
	.byte	0x9d
	.long	0x62
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1a
	.string	"p"
	.byte	0x1
	.byte	0x9e
	.long	0x3ff
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x18
	.long	.LASF93
	.byte	0x1
	.byte	0x76
	.long	0x3f9
	.quad	.LFB3
	.quad	.LFE3-.LFB3
	.uleb128 0x1
	.byte	0x9c
	.long	0x7e8
	.uleb128 0x13
	.long	.LASF83
	.byte	0x1
	.byte	0x76
	.long	0x3c2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x13
	.long	.LASF92
	.byte	0x1
	.byte	0x76
	.long	0x3f9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x19
	.long	.LASF89
	.byte	0x1
	.byte	0x77
	.long	0x2d0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1a
	.string	"p"
	.byte	0x1
	.byte	0x78
	.long	0x3ff
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1a
	.string	"up"
	.byte	0x1
	.byte	0x79
	.long	0x3f9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1a
	.string	"s"
	.byte	0x1
	.byte	0x7a
	.long	0x2c9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x19
	.long	.LASF71
	.byte	0x1
	.byte	0x7b
	.long	0x62
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1a
	.string	"t"
	.byte	0x1
	.byte	0x7b
	.long	0x62
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.byte	0
	.uleb128 0x1b
	.long	.LASF94
	.byte	0x1
	.byte	0x61
	.quad	.LFB2
	.quad	.LFE2-.LFB2
	.uleb128 0x1
	.byte	0x9c
	.long	0x846
	.uleb128 0x13
	.long	.LASF83
	.byte	0x1
	.byte	0x61
	.long	0x3c2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x13
	.long	.LASF92
	.byte	0x1
	.byte	0x61
	.long	0x3f9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x1a
	.string	"l"
	.byte	0x1
	.byte	0x63
	.long	0x3f9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1a
	.string	"p"
	.byte	0x1
	.byte	0x64
	.long	0x3ff
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1a
	.string	"t"
	.byte	0x1
	.byte	0x65
	.long	0x62
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.uleb128 0x18
	.long	.LASF95
	.byte	0x1
	.byte	0x3b
	.long	0x2ff
	.quad	.LFB1
	.quad	.LFE1-.LFB1
	.uleb128 0x1
	.byte	0x9c
	.long	0x8dc
	.uleb128 0x13
	.long	.LASF83
	.byte	0x1
	.byte	0x3b
	.long	0x3c2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -168
	.uleb128 0x1a
	.string	"i"
	.byte	0x1
	.byte	0x3c
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -148
	.uleb128 0x19
	.long	.LASF92
	.byte	0x1
	.byte	0x3d
	.long	0x3f9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x1a
	.string	"p"
	.byte	0x1
	.byte	0x3e
	.long	0x3ff
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x19
	.long	.LASF96
	.byte	0x1
	.byte	0x3f
	.long	0x8dc
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x1a
	.string	"r1"
	.byte	0x1
	.byte	0x40
	.long	0x2ff
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x17
	.quad	.LBB3
	.quad	.LBE3-.LBB3
	.uleb128 0x1a
	.string	"V"
	.byte	0x1
	.byte	0x49
	.long	0x3c2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.byte	0
	.byte	0
	.uleb128 0xb
	.long	0x2ff
	.long	0x8ec
	.uleb128 0xc
	.long	0x38
	.byte	0x3
	.byte	0
	.uleb128 0x1c
	.long	.LASF97
	.byte	0x1
	.byte	0x11
	.long	0x3c2
	.quad	.LFB0
	.quad	.LFE0-.LFB0
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x13
	.long	.LASF98
	.byte	0x1
	.byte	0x11
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x13
	.long	.LASF71
	.byte	0x1
	.byte	0x11
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x13
	.long	.LASF68
	.byte	0x1
	.byte	0x11
	.long	0x3c2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x17
	.quad	.LBB2
	.quad	.LBE2-.LBB2
	.uleb128 0x1a
	.string	"new"
	.byte	0x1
	.byte	0x15
	.long	0x3c2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x1a
	.string	"i"
	.byte	0x1
	.byte	0x16
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x19
	.long	.LASF96
	.byte	0x1
	.byte	0x17
	.long	0x465
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_abbrev,"",@progbits
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0xe
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1b
	.uleb128 0xe
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x10
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0x13
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xf
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x10
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x11
	.uleb128 0x34
	.byte	0
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x12
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x13
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x14
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x15
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x16
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x17
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.byte	0
	.byte	0
	.uleb128 0x18
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x19
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x1a
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x1b
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1c
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_aranges,"",@progbits
	.long	0x2c
	.value	0x2
	.long	.Ldebug_info0
	.byte	0x8
	.byte	0
	.value	0
	.value	0
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.quad	0
	.quad	0
	.section	.debug_line,"",@progbits
.Ldebug_line0:
	.section	.debug_str,"MS",@progbits,1
.LASF8:
	.string	"__off_t"
.LASF12:
	.string	"_IO_read_ptr"
.LASF24:
	.string	"_chain"
.LASF30:
	.string	"_shortbuf"
.LASF7:
	.string	"size_t"
.LASF100:
	.string	"../olden/health/src/health.c"
.LASF99:
	.string	"GNU C11 7.5.0 -mtune=generic -march=x86-64 -g -fstack-protector-strong"
.LASF47:
	.string	"_IO_2_1_stderr_"
.LASF18:
	.string	"_IO_buf_base"
.LASF65:
	.string	"home_village"
.LASF95:
	.string	"get_results"
.LASF101:
	.string	"/home/leonardo/Documents/Maestria/Tesis/sodden/build"
.LASF51:
	.string	"long long int"
.LASF4:
	.string	"signed char"
.LASF62:
	.string	"hosps_visited"
.LASF25:
	.string	"_fileno"
.LASF13:
	.string	"_IO_read_end"
.LASF92:
	.string	"list"
.LASF61:
	.string	"Patient"
.LASF6:
	.string	"long int"
.LASF11:
	.string	"_flags"
.LASF19:
	.string	"_IO_buf_end"
.LASF28:
	.string	"_cur_column"
.LASF69:
	.string	"returned"
.LASF53:
	.string	"double"
.LASF27:
	.string	"_old_offset"
.LASF32:
	.string	"_offset"
.LASF94:
	.string	"check_patients_inside"
.LASF73:
	.string	"patient"
.LASF78:
	.string	"waiting"
.LASF59:
	.string	"total_time"
.LASF70:
	.string	"hosp"
.LASF41:
	.string	"_IO_marker"
.LASF48:
	.string	"stdin"
.LASF3:
	.string	"unsigned int"
.LASF97:
	.string	"alloc_tree"
.LASF56:
	.string	"seed"
.LASF0:
	.string	"long unsigned int"
.LASF103:
	.string	"_IO_FILE_plus"
.LASF89:
	.string	"rand"
.LASF16:
	.string	"_IO_write_ptr"
.LASF43:
	.string	"_sbuf"
.LASF55:
	.string	"max_time"
.LASF98:
	.string	"level"
.LASF68:
	.string	"back"
.LASF2:
	.string	"short unsigned int"
.LASF20:
	.string	"_IO_save_base"
.LASF71:
	.string	"label"
.LASF31:
	.string	"_lock"
.LASF26:
	.string	"_flags2"
.LASF38:
	.string	"_mode"
.LASF49:
	.string	"stdout"
.LASF67:
	.string	"forward"
.LASF45:
	.string	"_IO_2_1_stdin_"
.LASF72:
	.string	"List"
.LASF64:
	.string	"time_left"
.LASF17:
	.string	"_IO_write_end"
.LASF93:
	.string	"check_patients_assess"
.LASF102:
	.string	"_IO_lock_t"
.LASF40:
	.string	"_IO_FILE"
.LASF63:
	.string	"time"
.LASF66:
	.string	"Village"
.LASF52:
	.string	"float"
.LASF44:
	.string	"_pos"
.LASF81:
	.string	"valI"
.LASF23:
	.string	"_markers"
.LASF77:
	.string	"num_waiting_patients"
.LASF1:
	.string	"unsigned char"
.LASF83:
	.string	"village"
.LASF60:
	.string	"total_hosps"
.LASF5:
	.string	"short int"
.LASF29:
	.string	"_vtable_offset"
.LASF46:
	.string	"_IO_2_1_stdout_"
.LASF79:
	.string	"assess"
.LASF80:
	.string	"inside"
.LASF10:
	.string	"char"
.LASF90:
	.string	"put_in_hosp"
.LASF86:
	.string	"results"
.LASF42:
	.string	"_next"
.LASF76:
	.string	"free_personnel"
.LASF9:
	.string	"__off64_t"
.LASF58:
	.string	"total_patients"
.LASF14:
	.string	"_IO_read_base"
.LASF22:
	.string	"_IO_save_end"
.LASF74:
	.string	"Hosp"
.LASF33:
	.string	"__pad1"
.LASF34:
	.string	"__pad2"
.LASF35:
	.string	"__pad3"
.LASF36:
	.string	"__pad4"
.LASF37:
	.string	"__pad5"
.LASF39:
	.string	"_unused2"
.LASF50:
	.string	"stderr"
.LASF85:
	.string	"argv"
.LASF57:
	.string	"Results"
.LASF96:
	.string	"fval"
.LASF87:
	.string	"generate_patient"
.LASF88:
	.string	"newseed"
.LASF21:
	.string	"_IO_backup_base"
.LASF54:
	.string	"max_level"
.LASF84:
	.string	"argc"
.LASF75:
	.string	"personnel"
.LASF91:
	.string	"check_patients_waiting"
.LASF82:
	.string	"main"
.LASF15:
	.string	"_IO_write_base"
	.ident	"GCC: (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0"
	.section	.note.GNU-stack,"",@progbits
