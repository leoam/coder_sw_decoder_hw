	.file	"newbh.c"
	.text
.Ltext0:
	.comm	NumNodes,4,4
	.comm	root,8,8
	.comm	rmin,24,16
	.comm	xxxrsize,8,8
	.comm	nbody,4,4
	.comm	arg1,4,4
	.section	.rodata
.LC0:
	.string	"nbody = %d, numnodes = %d\n"
	.text
	.globl	main
	.type	main, @function
main:
.LFB0:
	.file 1 "../olden/bh/src/newbh.c"
	.loc 1 55 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	.loc 1 59 0
	movq	-32(%rbp), %rdx
	movl	-20(%rbp), %eax
	movq	%rdx, %rsi
	movl	%eax, %edi
	movl	$0, %eax
	call	dealwithargs@PLT
	.loc 1 60 0
	movl	NumNodes(%rip), %edx
	movl	nbody(%rip), %eax
	movl	%eax, %esi
	leaq	.LC0(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	.loc 1 62 0
	movl	$0, %eax
	call	old_main
	movq	%rax, -8(%rbp)
	.loc 1 63 0
	movl	$0, %eax
	.loc 1 64 0
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE0:
	.size	main, .-main
	.section	.rodata
.LC4:
	.string	"bodies created "
.LC5:
	.string	"Bodies per %d = %d\n"
	.text
	.globl	old_main
	.type	old_main, @function
old_main:
.LFB1:
	.loc 1 69 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	pushq	%rbx
	subq	$1000, %rsp
	.cfi_offset 3, -24
	.loc 1 69 0
	movq	%fs:40, %rax
	movq	%rax, -24(%rbp)
	xorl	%eax, %eax
	.loc 1 77 0
	movq	$0, -896(%rbp)
	.loc 1 78 0
	movl	$0, -928(%rbp)
	movl	NumNodes(%rip), %esi
	movl	$64, %eax
	cltd
	idivl	%esi
	movl	%eax, -924(%rbp)
	.loc 1 82 0
	movl	$123, %edi
	call	srand@PLT
	.loc 1 85 0
	movl	$1064, %edi
	call	malloc@PLT
	movq	%rax, -888(%rbp)
	.loc 1 86 0
	movq	-888(%rbp), %rax
	movq	$0, 32(%rax)
	.loc 1 87 0
	movq	-888(%rbp), %rax
	movsd	.LC1(%rip), %xmm0
	movsd	%xmm0, (%rax)
	.loc 1 88 0
	movq	-888(%rbp), %rax
	movsd	.LC1(%rip), %xmm0
	movsd	%xmm0, 8(%rax)
	.loc 1 89 0
	movq	-888(%rbp), %rax
	movsd	.LC1(%rip), %xmm0
	movsd	%xmm0, 16(%rax)
	.loc 1 90 0
	movq	-888(%rbp), %rax
	movsd	.LC2(%rip), %xmm0
	movsd	%xmm0, 24(%rax)
.LBB2:
	.loc 1 92 0
	movl	$0, %ebx
	jmp	.L4
.L5:
	.loc 1 92 0 is_stmt 0 discriminator 3
	movslq	%ebx, %rax
	pxor	%xmm0, %xmm0
	movsd	%xmm0, -864(%rbp,%rax,8)
	addl	$1, %ebx
.L4:
	.loc 1 92 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L5
.LBE2:
.LBB3:
	.loc 1 93 0 is_stmt 1
	movl	$0, %ebx
	jmp	.L6
.L7:
	.loc 1 93 0 is_stmt 0 discriminator 3
	movslq	%ebx, %rax
	pxor	%xmm0, %xmm0
	movsd	%xmm0, -832(%rbp,%rax,8)
	addl	$1, %ebx
.L6:
	.loc 1 93 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L7
.LBE3:
	.loc 1 96 0 is_stmt 1
	movl	$0, -932(%rbp)
	jmp	.L8
.L14:
.LBB4:
	.loc 1 99 0
	movl	NumNodes(%rip), %esi
	movl	$32, %eax
	cltd
	idivl	%esi
	movl	%eax, %edi
	movl	-932(%rbp), %eax
	cltd
	idivl	%edi
	movl	%eax, -916(%rbp)
	.loc 1 101 0
	movl	-932(%rbp), %eax
	leal	1(%rax), %edx
	movl	nbody(%rip), %eax
	leal	31(%rax), %ecx
	testl	%eax, %eax
	cmovs	%ecx, %eax
	sarl	$5, %eax
	movl	%eax, %edi
	leaq	-1008(%rbp), %rax
	movl	-916(%rbp), %esi
	movl	%edx, %ecx
	movl	%edi, %edx
	movq	%rax, %rdi
	call	uniform_testdata
	movq	-1008(%rbp), %rax
	movq	-1000(%rbp), %rdx
	movq	%rax, -544(%rbp)
	movq	%rdx, -536(%rbp)
	movq	-992(%rbp), %rax
	movq	-984(%rbp), %rdx
	movq	%rax, -528(%rbp)
	movq	%rdx, -520(%rbp)
	movq	-976(%rbp), %rax
	movq	-968(%rbp), %rdx
	movq	%rax, -512(%rbp)
	movq	%rdx, -504(%rbp)
	movq	-960(%rbp), %rax
	movq	-952(%rbp), %rdx
	movq	%rax, -496(%rbp)
	movq	%rdx, -488(%rbp)
	.loc 1 103 0
	movq	-496(%rbp), %rdx
	movq	-888(%rbp), %rax
	movl	-932(%rbp), %ecx
	movslq	%ecx, %rcx
	addq	$4, %rcx
	movq	%rdx, 8(%rax,%rcx,8)
	.loc 1 104 0
	cmpq	$0, -896(%rbp)
	je	.L9
	.loc 1 105 0
	movq	-496(%rbp), %rdx
	movq	-896(%rbp), %rax
	movq	%rdx, 128(%rax)
.L9:
	.loc 1 106 0
	movq	-488(%rbp), %rax
	movq	%rax, -896(%rbp)
.LBB5:
	.loc 1 107 0
	movl	$0, %ebx
	jmp	.L10
.L11:
	.loc 1 107 0 is_stmt 0 discriminator 3
	movslq	%ebx, %rax
	movsd	-864(%rbp,%rax,8), %xmm1
	movslq	%ebx, %rax
	movsd	-544(%rbp,%rax,8), %xmm0
	addsd	%xmm1, %xmm0
	movslq	%ebx, %rax
	movsd	%xmm0, -864(%rbp,%rax,8)
	addl	$1, %ebx
.L10:
	.loc 1 107 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L11
.LBE5:
.LBB6:
	.loc 1 108 0 is_stmt 1
	movl	$0, %ebx
	jmp	.L12
.L13:
	.loc 1 108 0 is_stmt 0 discriminator 3
	movslq	%ebx, %rax
	movsd	-832(%rbp,%rax,8), %xmm1
	movslq	%ebx, %rax
	addq	$2, %rax
	movsd	-536(%rbp,%rax,8), %xmm0
	addsd	%xmm1, %xmm0
	movslq	%ebx, %rax
	movsd	%xmm0, -832(%rbp,%rax,8)
	addl	$1, %ebx
.L12:
	.loc 1 108 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L13
.LBE6:
.LBE4:
	.loc 1 96 0 is_stmt 1 discriminator 2
	addl	$1, -932(%rbp)
.L8:
	.loc 1 96 0 is_stmt 0 discriminator 1
	cmpl	$31, -932(%rbp)
	jle	.L14
	.loc 1 111 0 is_stmt 1
	leaq	.LC4(%rip), %rdi
	call	puts@PLT
.LBB7:
	.loc 1 112 0
	movl	$0, %ebx
	jmp	.L15
.L16:
	.loc 1 112 0 is_stmt 0 discriminator 3
	movslq	%ebx, %rax
	movsd	-864(%rbp,%rax,8), %xmm1
	movl	nbody(%rip), %eax
	cvtsi2sd	%eax, %xmm0
	divsd	%xmm0, %xmm1
	movapd	%xmm1, %xmm0
	movslq	%ebx, %rax
	movsd	%xmm0, -864(%rbp,%rax,8)
	addl	$1, %ebx
.L15:
	.loc 1 112 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L16
.LBE7:
.LBB8:
	.loc 1 113 0 is_stmt 1
	movl	$0, %ebx
	jmp	.L17
.L18:
	.loc 1 113 0 is_stmt 0 discriminator 3
	movslq	%ebx, %rax
	movsd	-832(%rbp,%rax,8), %xmm1
	movl	nbody(%rip), %eax
	cvtsi2sd	%eax, %xmm0
	divsd	%xmm0, %xmm1
	movapd	%xmm1, %xmm0
	movslq	%ebx, %rax
	movsd	%xmm0, -832(%rbp,%rax,8)
	addl	$1, %ebx
.L17:
	.loc 1 113 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L18
.LBE8:
	.loc 1 115 0 is_stmt 1
	movl	$0, -928(%rbp)
	jmp	.L19
.L20:
	.loc 1 116 0 discriminator 3
	movl	-928(%rbp), %eax
	cltq
	movl	$0, -800(%rbp,%rax,4)
	.loc 1 117 0 discriminator 3
	movl	-928(%rbp), %eax
	cltq
	movq	$0, -544(%rbp,%rax,8)
	.loc 1 115 0 discriminator 3
	addl	$1, -928(%rbp)
.L19:
	.loc 1 115 0 is_stmt 0 discriminator 1
	cmpl	$63, -928(%rbp)
	jle	.L20
	.loc 1 121 0 is_stmt 1
	movq	-888(%rbp), %rax
	movq	40(%rax), %rax
	movq	%rax, -904(%rbp)
	jmp	.L21
.L26:
.LBB9:
.LBB10:
	.loc 1 124 0
	movl	$0, %ebx
	jmp	.L22
.L23:
	.loc 1 124 0 is_stmt 0 discriminator 3
	movq	-904(%rbp), %rax
	movslq	%ebx, %rdx
	addq	$2, %rdx
	movsd	(%rax,%rdx,8), %xmm0
	movslq	%ebx, %rax
	movsd	-864(%rbp,%rax,8), %xmm1
	subsd	%xmm1, %xmm0
	movq	-904(%rbp), %rax
	movslq	%ebx, %rdx
	addq	$2, %rdx
	movsd	%xmm0, (%rax,%rdx,8)
	addl	$1, %ebx
.L22:
	.loc 1 124 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L23
.LBE10:
.LBB11:
	.loc 1 125 0 is_stmt 1
	movl	$0, %ebx
	jmp	.L24
.L25:
	.loc 1 125 0 is_stmt 0 discriminator 3
	movq	-904(%rbp), %rax
	movslq	%ebx, %rdx
	addq	$6, %rdx
	movsd	(%rax,%rdx,8), %xmm0
	movslq	%ebx, %rax
	movsd	-832(%rbp,%rax,8), %xmm1
	subsd	%xmm1, %xmm0
	movq	-904(%rbp), %rax
	movslq	%ebx, %rdx
	addq	$6, %rdx
	movsd	%xmm0, (%rax,%rdx,8)
	addl	$1, %ebx
.L24:
	.loc 1 125 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L25
.LBE11:
	.loc 1 127 0 is_stmt 1 discriminator 2
	movq	-888(%rbp), %rdx
	movq	-904(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	intcoord
	movq	%rax, -880(%rbp)
	movq	%rdx, -872(%rbp)
	.loc 1 128 0 discriminator 2
	movq	-880(%rbp), %rcx
	movq	-872(%rbp), %rax
	movl	$536870912, %edx
	movq	%rcx, %rdi
	movq	%rax, %rsi
	call	old_subindex
	leal	0(,%rax,8), %ebx
	.loc 1 129 0 discriminator 2
	movq	-880(%rbp), %rcx
	movq	-872(%rbp), %rax
	movl	$268435456, %edx
	movq	%rcx, %rdi
	movq	%rax, %rsi
	call	old_subindex
	.loc 1 128 0 discriminator 2
	addl	%ebx, %eax
	movl	%eax, -928(%rbp)
	.loc 1 130 0 discriminator 2
	movl	-928(%rbp), %eax
	cltd
	idivl	-924(%rbp)
	movl	%eax, -928(%rbp)
	.loc 1 131 0 discriminator 2
	movl	-928(%rbp), %eax
	cltq
	movl	-800(%rbp,%rax,4), %eax
	leal	1(%rax), %edx
	movl	-928(%rbp), %eax
	cltq
	movl	%edx, -800(%rbp,%rax,4)
	.loc 1 132 0 discriminator 2
	movl	-928(%rbp), %eax
	cltq
	movq	-544(%rbp,%rax,8), %rdx
	movq	-904(%rbp), %rax
	movq	%rdx, 136(%rax)
	.loc 1 133 0 discriminator 2
	movl	-928(%rbp), %eax
	cltq
	movq	-904(%rbp), %rdx
	movq	%rdx, -544(%rbp,%rax,8)
	.loc 1 134 0 discriminator 2
	movq	-904(%rbp), %rax
	movl	-928(%rbp), %edx
	movl	%edx, 40(%rax)
.LBE9:
	.loc 1 121 0 discriminator 2
	movq	-904(%rbp), %rax
	movq	128(%rax), %rax
	movq	%rax, -904(%rbp)
.L21:
	.loc 1 121 0 is_stmt 0 discriminator 1
	cmpq	$0, -904(%rbp)
	jne	.L26
	.loc 1 136 0 is_stmt 1
	movl	$0, -928(%rbp)
	jmp	.L27
.L28:
	.loc 1 138 0 discriminator 3
	movl	-928(%rbp), %eax
	cltq
	movl	-800(%rbp,%rax,4), %edx
	movl	-928(%rbp), %eax
	movl	%eax, %esi
	leaq	.LC5(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	.loc 1 139 0 discriminator 3
	movl	-928(%rbp), %eax
	cltq
	movq	-544(%rbp,%rax,8), %rdx
	movq	-888(%rbp), %rax
	movl	-928(%rbp), %ecx
	movslq	%ecx, %rcx
	addq	$68, %rcx
	movq	%rdx, 8(%rax,%rcx,8)
	.loc 1 136 0 discriminator 3
	addl	$1, -928(%rbp)
.L27:
	.loc 1 136 0 is_stmt 0 discriminator 1
	movl	NumNodes(%rip), %eax
	cmpl	%eax, -928(%rbp)
	jl	.L28
	.loc 1 151 0 is_stmt 1
	movl	$0, -928(%rbp)
	.loc 1 153 0
	pxor	%xmm0, %xmm0
	movsd	%xmm0, -912(%rbp)
	.loc 1 154 0
	movl	$0, -932(%rbp)
	.loc 1 156 0
	movl	$10, -920(%rbp)
	.loc 1 160 0
	jmp	.L29
.L32:
	.loc 1 161 0
	movl	-932(%rbp), %edx
	movq	-888(%rbp), %rax
	movl	%edx, %esi
	movq	%rax, %rdi
	call	stepsystem
	.loc 1 162 0
	movsd	-912(%rbp), %xmm1
	movsd	.LC6(%rip), %xmm0
	addsd	%xmm1, %xmm0
	movsd	%xmm0, -912(%rbp)
	.loc 1 164 0
	addl	$1, -932(%rbp)
.L29:
	.loc 1 160 0
	movsd	.LC7(%rip), %xmm0
	ucomisd	-912(%rbp), %xmm0
	jbe	.L30
	.loc 1 160 0 is_stmt 0 discriminator 1
	movl	-932(%rbp), %eax
	cmpl	-920(%rbp), %eax
	jl	.L32
.L30:
	.loc 1 180 0 is_stmt 1
	movq	-888(%rbp), %rax
	.loc 1 181 0
	movq	-24(%rbp), %rsi
	xorq	%fs:40, %rsi
	je	.L34
	call	__stack_chk_fail@PLT
.L34:
	addq	$1000, %rsp
	popq	%rbx
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE1:
	.size	old_main, .-old_main
	.section	.rodata
.LC9:
	.string	"Assertion Failure #%d"
	.text
	.globl	testdata
	.type	testdata, @function
testdata:
.LFB2:
	.loc 1 195 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	.loc 1 195 0
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	.loc 1 201 0
	movsd	.LC8(%rip), %xmm0
	movsd	%xmm0, -40(%rbp)
	.loc 1 206 0
	movl	$99, %esi
	leaq	.LC9(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	call	abort@PLT
	.cfi_endproc
.LFE2:
	.size	testdata, .-testdata
	.globl	stepsystem
	.type	stepsystem, @function
stepsystem:
.LFB3:
	.loc 1 284 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	.loc 1 293 0
	movq	-24(%rbp), %rax
	movq	32(%rax), %rax
	testq	%rax, %rax
	je	.L39
	.loc 1 294 0
	movq	-24(%rbp), %rax
	movq	32(%rax), %rax
	movq	%rax, %rdi
	call	freetree1
	.loc 1 295 0
	movq	-24(%rbp), %rax
	movq	$0, 32(%rax)
.L39:
	.loc 1 300 0
	movl	nbody(%rip), %esi
	movl	-28(%rbp), %ecx
	movq	-24(%rbp), %rdx
	movq	-16(%rbp), %rax
	movl	$0, %r8d
	movq	%rax, %rdi
	call	maketree
	movq	%rax, -8(%rbp)
	.loc 1 303 0
	movq	-24(%rbp), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, 32(%rax)
	.loc 1 305 0
	movl	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	movl	%edx, %esi
	movq	%rax, %rdi
	call	computegrav
	.loc 1 308 0
	movq	-24(%rbp), %rax
	movq	552(%rax), %rax
	movl	-28(%rbp), %edx
	movl	%edx, %esi
	movq	%rax, %rdi
	call	vp
	.loc 1 309 0
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3:
	.size	stepsystem, .-stepsystem
	.globl	freetree1
	.type	freetree1, @function
freetree1:
.LFB4:
	.loc 1 313 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	.loc 1 317 0
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	call	freetree
	.loc 1 318 0
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE4:
	.size	freetree1, .-freetree1
	.globl	freetree
	.type	freetree, @function
freetree:
.LFB5:
	.loc 1 322 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	pushq	%r12
	pushq	%rbx
	subq	$16, %rsp
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movq	%rdi, -24(%rbp)
	.loc 1 327 0
	cmpq	$0, -24(%rbp)
	je	.L48
	.loc 1 327 0 is_stmt 0 discriminator 1
	movq	-24(%rbp), %rax
	movzwl	(%rax), %eax
	cmpw	$1, %ax
	je	.L48
	.loc 1 331 0 is_stmt 1
	movl	$7, %ebx
	jmp	.L45
.L47:
	.loc 1 332 0
	movq	-24(%rbp), %rax
	movslq	%ebx, %rdx
	addq	$6, %rdx
	movq	(%rax,%rdx,8), %r12
	.loc 1 333 0
	testq	%r12, %r12
	je	.L46
	.loc 1 334 0
	movq	%r12, %rdi
	call	freetree
.L46:
	.loc 1 331 0 discriminator 2
	subl	$1, %ebx
.L45:
	.loc 1 331 0 is_stmt 0 discriminator 1
	testl	%ebx, %ebx
	jns	.L47
	.loc 1 338 0 is_stmt 1
	movq	-24(%rbp), %rax
	movq	%rax, %rdi
	call	my_free
	jmp	.L41
.L48:
	.loc 1 328 0
	nop
.L41:
	.loc 1 340 0
	addq	$16, %rsp
	popq	%rbx
	popq	%r12
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE5:
	.size	freetree, .-freetree
	.globl	cp_free_list
	.bss
	.align 8
	.type	cp_free_list, @object
	.size	cp_free_list, 8
cp_free_list:
	.zero	8
	.globl	bp_free_list
	.align 8
	.type	bp_free_list, @object
	.size	bp_free_list, 8
bp_free_list:
	.zero	8
	.text
	.globl	my_free
	.type	my_free, @function
my_free:
.LFB6:
	.loc 1 349 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	movq	%rdi, -8(%rbp)
	.loc 1 350 0
	movq	-8(%rbp), %rax
	movzwl	(%rax), %eax
	cmpw	$1, %ax
	jne	.L50
	.loc 1 351 0
	movq	bp_free_list(%rip), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, 128(%rax)
	.loc 1 352 0
	movq	-8(%rbp), %rax
	movq	%rax, bp_free_list(%rip)
	.loc 1 358 0
	jmp	.L52
.L50:
	.loc 1 355 0
	movq	cp_free_list(%rip), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, 112(%rax)
	.loc 1 356 0
	movq	-8(%rbp), %rax
	movq	%rax, cp_free_list(%rip)
.L52:
	.loc 1 358 0
	nop
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE6:
	.size	my_free, .-my_free
	.globl	ubody_alloc
	.type	ubody_alloc, @function
ubody_alloc:
.LFB7:
	.loc 1 362 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	pushq	%rbx
	subq	$24, %rsp
	.cfi_offset 3, -24
	movl	%edi, -20(%rbp)
	.loc 1 364 0
	movl	$144, %edi
	call	malloc@PLT
	movq	%rax, %rbx
	.loc 1 366 0
	movw	$1, (%rbx)
	.loc 1 367 0
	movl	-20(%rbp), %eax
	movl	%eax, 40(%rbx)
	.loc 1 368 0
	movq	$0, 136(%rbx)
	.loc 1 369 0
	movl	-20(%rbp), %eax
	movl	%eax, 44(%rbx)
	.loc 1 370 0
	movq	%rbx, %rax
	.loc 1 372 0
	addq	$24, %rsp
	popq	%rbx
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE7:
	.size	ubody_alloc, .-ubody_alloc
	.globl	cell_alloc
	.type	cell_alloc, @function
cell_alloc:
.LFB8:
	.loc 1 376 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	pushq	%r12
	pushq	%rbx
	subq	$16, %rsp
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movl	%edi, -20(%rbp)
	.loc 1 379 0
	movq	cp_free_list(%rip), %rax
	testq	%rax, %rax
	je	.L56
	.loc 1 380 0
	movq	cp_free_list(%rip), %rbx
	.loc 1 381 0
	movq	cp_free_list(%rip), %rax
	movq	112(%rax), %rax
	movq	%rax, cp_free_list(%rip)
	jmp	.L57
.L56:
	.loc 1 385 0
	movl	$120, %edi
	call	malloc@PLT
	movq	%rax, %rbx
.L57:
	.loc 1 387 0
	movw	$2, (%rbx)
	.loc 1 388 0
	movl	-20(%rbp), %eax
	movl	%eax, 40(%rbx)
	.loc 1 389 0
	movl	$0, %r12d
	jmp	.L58
.L59:
	.loc 1 390 0 discriminator 3
	movslq	%r12d, %rax
	addq	$6, %rax
	movq	$0, (%rbx,%rax,8)
	.loc 1 389 0 discriminator 3
	addl	$1, %r12d
.L58:
	.loc 1 389 0 is_stmt 0 discriminator 1
	cmpl	$7, %r12d
	jle	.L59
	.loc 1 392 0 is_stmt 1
	movq	%rbx, %rax
	.loc 1 393 0
	addq	$16, %rsp
	popq	%rbx
	popq	%r12
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE8:
	.size	cell_alloc, .-cell_alloc
	.section	.rodata
.LC12:
	.string	"testdata: not enough memory\n"
	.text
	.globl	uniform_testdata
	.type	uniform_testdata, @function
uniform_testdata:
.LFB9:
	.loc 1 400 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	pushq	%r12
	pushq	%rbx
	subq	$240, %rsp
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movq	%rdi, -232(%rbp)
	movl	%esi, -236(%rbp)
	movl	%edx, -240(%rbp)
	movl	%ecx, -244(%rbp)
	.loc 1 400 0
	movq	%fs:40, %rax
	movq	%rax, -24(%rbp)
	xorl	%eax, %eax
	.loc 1 406 0
	cvtsi2sd	-244(%rbp), %xmm0
	movsd	.LC8(%rip), %xmm1
	mulsd	%xmm1, %xmm0
	movsd	%xmm0, -208(%rbp)
	.loc 1 413 0
	movsd	.LC10(%rip), %xmm0
	movsd	%xmm0, -192(%rbp)
	.loc 1 414 0
	movsd	.LC11(%rip), %xmm0
	divsd	-192(%rbp), %xmm0
	call	sqrt@PLT
	movq	%xmm0, %rax
	movq	%rax, -184(%rbp)
.LBB12:
	.loc 1 415 0
	movl	$0, %ebx
	jmp	.L62
.L63:
	.loc 1 415 0 is_stmt 0 discriminator 3
	movslq	%ebx, %rax
	pxor	%xmm0, %xmm0
	movsd	%xmm0, -96(%rbp,%rax,8)
	addl	$1, %ebx
.L62:
	.loc 1 415 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L63
.LBE12:
.LBB13:
	.loc 1 416 0 is_stmt 1
	movl	$0, %ebx
	jmp	.L64
.L65:
	.loc 1 416 0 is_stmt 0 discriminator 3
	movslq	%ebx, %rax
	addq	$2, %rax
	pxor	%xmm0, %xmm0
	movsd	%xmm0, -88(%rbp,%rax,8)
	addl	$1, %ebx
.L64:
	.loc 1 416 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L65
.LBE13:
	.loc 1 417 0 is_stmt 1
	movl	-236(%rbp), %eax
	movl	%eax, %edi
	call	ubody_alloc
	movq	%rax, -176(%rbp)
	.loc 1 418 0
	movq	-176(%rbp), %rax
	movq	%rax, -216(%rbp)
	.loc 1 420 0
	movl	$0, %r12d
	jmp	.L66
.L82:
	.loc 1 421 0
	movl	-236(%rbp), %eax
	movl	%eax, %edi
	call	ubody_alloc
	movq	%rax, -168(%rbp)
	.loc 1 423 0
	cmpq	$0, -168(%rbp)
	jne	.L67
	.loc 1 424 0
	leaq	.LC12(%rip), %rdi
	movl	$0, %eax
	call	error@PLT
.L67:
	.loc 1 425 0
	movq	-216(%rbp), %rax
	movq	-168(%rbp), %rdx
	movq	%rdx, 128(%rax)
	.loc 1 426 0
	movq	-168(%rbp), %rax
	movq	%rax, -216(%rbp)
	.loc 1 427 0
	movq	-168(%rbp), %rax
	movw	$1, (%rax)
	.loc 1 428 0
	cvtsi2sd	-240(%rbp), %xmm0
	movsd	.LC11(%rip), %xmm1
	divsd	%xmm0, %xmm1
	movapd	%xmm1, %xmm0
	movq	-168(%rbp), %rax
	movsd	%xmm0, 8(%rax)
	.loc 1 429 0
	movq	-208(%rbp), %rax
	movq	%rax, -256(%rbp)
	movsd	-256(%rbp), %xmm0
	movl	$1, %eax
	call	my_rand@PLT
	movq	%xmm0, %rax
	movq	%rax, -208(%rbp)
	.loc 1 430 0
	movsd	-208(%rbp), %xmm1
	movsd	.LC13(%rip), %xmm0
	movapd	%xmm1, %xmm2
	movapd	%xmm0, %xmm1
	pxor	%xmm0, %xmm0
	movl	$3, %eax
	call	xrand@PLT
	movq	%xmm0, %rax
	movq	%rax, -160(%rbp)
	.loc 1 431 0
	movsd	.LC14(%rip), %xmm0
	movq	-160(%rbp), %rax
	movapd	%xmm0, %xmm1
	movq	%rax, -256(%rbp)
	movsd	-256(%rbp), %xmm0
	call	pow@PLT
	movapd	%xmm0, %xmm1
	movsd	.LC11(%rip), %xmm0
	subsd	%xmm0, %xmm1
	movapd	%xmm1, %xmm0
	movsd	%xmm0, -152(%rbp)
	.loc 1 433 0
	movq	-152(%rbp), %rax
	movq	%rax, -256(%rbp)
	movsd	-256(%rbp), %xmm0
	call	sqrt@PLT
	movapd	%xmm0, %xmm1
	movsd	.LC11(%rip), %xmm0
	divsd	%xmm1, %xmm0
	movsd	%xmm0, -224(%rbp)
	.loc 1 435 0
	movsd	.LC2(%rip), %xmm0
	movsd	%xmm0, -144(%rbp)
	.loc 1 436 0
	movl	$0, %ebx
	jmp	.L68
.L69:
	.loc 1 437 0 discriminator 3
	movq	-208(%rbp), %rax
	movq	%rax, -256(%rbp)
	movsd	-256(%rbp), %xmm0
	movl	$1, %eax
	call	my_rand@PLT
	movq	%xmm0, %rax
	movq	%rax, -208(%rbp)
	.loc 1 438 0 discriminator 3
	movsd	-208(%rbp), %xmm1
	movsd	.LC13(%rip), %xmm0
	movapd	%xmm1, %xmm2
	movapd	%xmm0, %xmm1
	pxor	%xmm0, %xmm0
	movl	$3, %eax
	call	xrand@PLT
	movq	%xmm0, %rax
	movq	%rax, -224(%rbp)
	.loc 1 439 0 discriminator 3
	movsd	-144(%rbp), %xmm0
	mulsd	-224(%rbp), %xmm0
	movq	-168(%rbp), %rax
	movslq	%ebx, %rdx
	addq	$2, %rdx
	movsd	%xmm0, (%rax,%rdx,8)
	.loc 1 436 0 discriminator 3
	addl	$1, %ebx
.L68:
	.loc 1 436 0 is_stmt 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L69
.LBB14:
	.loc 1 442 0 is_stmt 1
	movl	$0, %ebx
	jmp	.L70
.L71:
	.loc 1 442 0 is_stmt 0 discriminator 3
	movslq	%ebx, %rax
	movsd	-96(%rbp,%rax,8), %xmm1
	movq	-168(%rbp), %rax
	movslq	%ebx, %rdx
	addq	$2, %rdx
	movsd	(%rax,%rdx,8), %xmm0
	addsd	%xmm1, %xmm0
	movslq	%ebx, %rax
	movsd	%xmm0, -96(%rbp,%rax,8)
	addl	$1, %ebx
.L70:
	.loc 1 442 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L71
.L72:
.LBE14:
	.loc 1 444 0 is_stmt 1 discriminator 1
	movq	-208(%rbp), %rax
	movq	%rax, -256(%rbp)
	movsd	-256(%rbp), %xmm0
	movl	$1, %eax
	call	my_rand@PLT
	movq	%xmm0, %rax
	movq	%rax, -208(%rbp)
	.loc 1 445 0 discriminator 1
	movsd	-208(%rbp), %xmm1
	movsd	.LC11(%rip), %xmm0
	movapd	%xmm1, %xmm2
	movapd	%xmm0, %xmm1
	pxor	%xmm0, %xmm0
	movl	$3, %eax
	call	xrand@PLT
	movq	%xmm0, %rax
	movq	%rax, -136(%rbp)
	.loc 1 446 0 discriminator 1
	movq	-208(%rbp), %rax
	movq	%rax, -256(%rbp)
	movsd	-256(%rbp), %xmm0
	movl	$1, %eax
	call	my_rand@PLT
	movq	%xmm0, %rax
	movq	%rax, -208(%rbp)
	.loc 1 447 0 discriminator 1
	movsd	-208(%rbp), %xmm1
	movsd	.LC15(%rip), %xmm0
	movapd	%xmm1, %xmm2
	movapd	%xmm0, %xmm1
	pxor	%xmm0, %xmm0
	movl	$3, %eax
	call	xrand@PLT
	movq	%xmm0, %rax
	movq	%rax, -128(%rbp)
	.loc 1 448 0 discriminator 1
	movsd	-136(%rbp), %xmm0
	mulsd	-136(%rbp), %xmm0
	movsd	%xmm0, -256(%rbp)
	movsd	-136(%rbp), %xmm0
	mulsd	-136(%rbp), %xmm0
	movsd	.LC11(%rip), %xmm1
	subsd	%xmm0, %xmm1
	movapd	%xmm1, %xmm0
	movsd	.LC16(%rip), %xmm1
	call	pow@PLT
	mulsd	-256(%rbp), %xmm0
	movsd	-128(%rbp), %xmm1
	ucomisd	%xmm0, %xmm1
	ja	.L72
	.loc 1 449 0
	movsd	-136(%rbp), %xmm1
	movsd	.LC17(%rip), %xmm0
	mulsd	%xmm0, %xmm1
	movsd	%xmm1, -256(%rbp)
	movsd	-224(%rbp), %xmm0
	mulsd	-224(%rbp), %xmm0
	movsd	.LC11(%rip), %xmm1
	addsd	%xmm1, %xmm0
	movsd	.LC18(%rip), %xmm1
	call	pow@PLT
	movsd	-256(%rbp), %xmm1
	divsd	%xmm0, %xmm1
	movapd	%xmm1, %xmm0
	movsd	%xmm0, -120(%rbp)
	.loc 1 452 0
	movsd	-184(%rbp), %xmm0
	mulsd	-120(%rbp), %xmm0
	movsd	%xmm0, -112(%rbp)
.L77:
	.loc 1 455 0
	movl	$0, %ebx
	jmp	.L73
.L74:
	.loc 1 456 0 discriminator 3
	movq	-208(%rbp), %rax
	movq	%rax, -256(%rbp)
	movsd	-256(%rbp), %xmm0
	movl	$1, %eax
	call	my_rand@PLT
	movq	%xmm0, %rax
	movq	%rax, -208(%rbp)
	.loc 1 457 0 discriminator 3
	movsd	-208(%rbp), %xmm1
	movsd	.LC11(%rip), %xmm0
	movq	.LC19(%rip), %rax
	movapd	%xmm1, %xmm2
	movapd	%xmm0, %xmm1
	movq	%rax, -256(%rbp)
	movsd	-256(%rbp), %xmm0
	movl	$3, %eax
	call	xrand@PLT
	movq	%xmm0, %rdx
	movq	-168(%rbp), %rax
	movslq	%ebx, %rcx
	addq	$6, %rcx
	movq	%rdx, (%rax,%rcx,8)
	.loc 1 455 0 discriminator 3
	addl	$1, %ebx
.L73:
	.loc 1 455 0 is_stmt 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L74
.LBB15:
	.loc 1 459 0 is_stmt 1
	pxor	%xmm0, %xmm0
	movsd	%xmm0, -200(%rbp)
	movl	$0, %ebx
	jmp	.L75
.L76:
	.loc 1 459 0 is_stmt 0 discriminator 3
	movq	-168(%rbp), %rax
	movslq	%ebx, %rdx
	addq	$6, %rdx
	movsd	(%rax,%rdx,8), %xmm1
	movq	-168(%rbp), %rax
	movslq	%ebx, %rdx
	addq	$6, %rdx
	movsd	(%rax,%rdx,8), %xmm0
	mulsd	%xmm1, %xmm0
	movsd	-200(%rbp), %xmm1
	addsd	%xmm1, %xmm0
	movsd	%xmm0, -200(%rbp)
	addl	$1, %ebx
.L75:
	.loc 1 459 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L76
.LBE15:
	.loc 1 460 0 is_stmt 1
	movsd	-200(%rbp), %xmm0
	movsd	.LC11(%rip), %xmm1
	ucomisd	%xmm1, %xmm0
	ja	.L77
	.loc 1 461 0
	movq	-200(%rbp), %rax
	movq	%rax, -256(%rbp)
	movsd	-256(%rbp), %xmm0
	call	sqrt@PLT
	movapd	%xmm0, %xmm1
	movsd	-112(%rbp), %xmm0
	divsd	%xmm1, %xmm0
	movsd	%xmm0, -104(%rbp)
.LBB16:
	.loc 1 462 0
	movl	$0, %ebx
	jmp	.L78
.L79:
	.loc 1 462 0 is_stmt 0 discriminator 3
	movq	-168(%rbp), %rax
	movslq	%ebx, %rdx
	addq	$6, %rdx
	movsd	(%rax,%rdx,8), %xmm0
	mulsd	-104(%rbp), %xmm0
	movq	-168(%rbp), %rax
	movslq	%ebx, %rdx
	addq	$6, %rdx
	movsd	%xmm0, (%rax,%rdx,8)
	addl	$1, %ebx
.L78:
	.loc 1 462 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L79
.LBE16:
.LBB17:
	.loc 1 463 0 is_stmt 1
	movl	$0, %ebx
	jmp	.L80
.L81:
	.loc 1 463 0 is_stmt 0 discriminator 3
	movslq	%ebx, %rax
	addq	$2, %rax
	movsd	-88(%rbp,%rax,8), %xmm1
	movq	-168(%rbp), %rax
	movslq	%ebx, %rdx
	addq	$6, %rdx
	movsd	(%rax,%rdx,8), %xmm0
	addsd	%xmm1, %xmm0
	movslq	%ebx, %rax
	addq	$2, %rax
	movsd	%xmm0, -88(%rbp,%rax,8)
	addl	$1, %ebx
.L80:
	.loc 1 463 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L81
.LBE17:
	.loc 1 420 0 is_stmt 1 discriminator 2
	addl	$1, %r12d
.L66:
	.loc 1 420 0 is_stmt 0 discriminator 1
	cmpl	-240(%rbp), %r12d
	jl	.L82
	.loc 1 467 0 is_stmt 1
	movq	-216(%rbp), %rax
	movq	$0, 128(%rax)
	.loc 1 468 0
	movq	-176(%rbp), %rax
	movq	128(%rax), %rax
	movq	%rax, -48(%rbp)
	.loc 1 469 0
	movq	-216(%rbp), %rax
	movq	%rax, -40(%rbp)
	.loc 1 473 0
	movq	-232(%rbp), %rcx
	movq	-96(%rbp), %rax
	movq	-88(%rbp), %rdx
	movq	%rax, (%rcx)
	movq	%rdx, 8(%rcx)
	movq	-80(%rbp), %rax
	movq	-72(%rbp), %rdx
	movq	%rax, 16(%rcx)
	movq	%rdx, 24(%rcx)
	movq	-64(%rbp), %rax
	movq	-56(%rbp), %rdx
	movq	%rax, 32(%rcx)
	movq	%rdx, 40(%rcx)
	movq	-48(%rbp), %rax
	movq	-40(%rbp), %rdx
	movq	%rax, 48(%rcx)
	movq	%rdx, 56(%rcx)
	.loc 1 474 0
	movq	-232(%rbp), %rax
	movq	-24(%rbp), %rsi
	xorq	%fs:40, %rsi
	je	.L84
	call	__stack_chk_fail@PLT
.L84:
	addq	$240, %rsp
	popq	%rbx
	popq	%r12
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE9:
	.size	uniform_testdata, .-uniform_testdata
	.globl	computegrav
	.type	computegrav, @function
computegrav:
.LFB10:
	.loc 1 507 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	pushq	%rbx
	subq	$72, %rsp
	.cfi_offset 3, -24
	movq	%rdi, -56(%rbp)
	movl	%esi, -60(%rbp)
	.loc 1 514 0
	movq	-56(%rbp), %rax
	movsd	24(%rax), %xmm0
	movsd	%xmm0, -48(%rbp)
	.loc 1 516 0
	movsd	.LC20(%rip), %xmm0
	movsd	%xmm0, -40(%rbp)
	.loc 1 518 0
	movl	NumNodes(%rip), %eax
	leal	-1(%rax), %ebx
	jmp	.L86
.L87:
	.loc 1 519 0 discriminator 3
	movq	-56(%rbp), %rax
	movq	32(%rax), %rax
	movq	%rax, -32(%rbp)
	.loc 1 520 0 discriminator 3
	movq	-56(%rbp), %rax
	movslq	%ebx, %rdx
	addq	$68, %rdx
	movq	8(%rax,%rdx,8), %rax
	movq	%rax, -24(%rbp)
	.loc 1 521 0 discriminator 3
	movsd	-40(%rbp), %xmm0
	movl	-60(%rbp), %edx
	movq	-24(%rbp), %rsi
	movq	-32(%rbp), %rcx
	movq	-48(%rbp), %rax
	movapd	%xmm0, %xmm1
	movq	%rcx, %rdi
	movq	%rax, -72(%rbp)
	movsd	-72(%rbp), %xmm0
	call	grav
	.loc 1 518 0 discriminator 3
	subl	$1, %ebx
.L86:
	.loc 1 518 0 is_stmt 0 discriminator 1
	testl	%ebx, %ebx
	jns	.L87
	.loc 1 523 0 is_stmt 1
	nop
	addq	$72, %rsp
	popq	%rbx
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE10:
	.size	computegrav, .-computegrav
	.globl	grav
	.type	grav, @function
grav:
.LFB11:
	.loc 1 527 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	pushq	%rbx
	subq	$72, %rsp
	.cfi_offset 3, -24
	movsd	%xmm0, -40(%rbp)
	movq	%rdi, -48(%rbp)
	movq	%rsi, -56(%rbp)
	movl	%edx, -60(%rbp)
	movsd	%xmm1, -72(%rbp)
	.loc 1 529 0
	movl	$0, -28(%rbp)
	.loc 1 533 0
	cmpq	$0, -56(%rbp)
	je	.L89
.LBB18:
	.loc 1 534 0
	movq	-56(%rbp), %rax
	movq	%rax, -24(%rbp)
.L89:
.LBE18:
	.loc 1 536 0
	movq	-56(%rbp), %rbx
	.loc 1 540 0
	jmp	.L90
.L91:
	.loc 1 541 0
	movsd	-72(%rbp), %xmm0
	movl	-60(%rbp), %edx
	movq	-48(%rbp), %rcx
	movq	-40(%rbp), %rax
	movapd	%xmm0, %xmm1
	movq	%rbx, %rsi
	movq	%rcx, %rdi
	movq	%rax, -80(%rbp)
	movsd	-80(%rbp), %xmm0
	call	gravstep
	.loc 1 542 0
	movq	136(%rbx), %rbx
	.loc 1 543 0
	addl	$1, -28(%rbp)
.L90:
	.loc 1 540 0
	testq	%rbx, %rbx
	jne	.L91
	.loc 1 548 0
	nop
	addq	$72, %rsp
	popq	%rbx
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE11:
	.size	grav, .-grav
	.globl	vp
	.type	vp, @function
vp:
.LFB12:
	.loc 1 551 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	pushq	%rbx
	subq	$296, %rsp
	.cfi_offset 3, -24
	movq	%rdi, -296(%rbp)
	movl	%esi, -300(%rbp)
	.loc 1 551 0
	movq	%fs:40, %rax
	movq	%rax, -24(%rbp)
	xorl	%eax, %eax
	.loc 1 555 0
	movsd	.LC20(%rip), %xmm0
	movsd	%xmm0, -288(%rbp)
	.loc 1 558 0
	cmpq	$0, -296(%rbp)
	je	.L94
.LBB19:
	.loc 1 559 0
	movq	-296(%rbp), %rax
	movq	%rax, -280(%rbp)
.LBE19:
	.loc 1 564 0
	jmp	.L94
.L144:
.LBB20:
	.loc 1 565 0
	movl	$0, %ebx
	jmp	.L95
.L96:
	.loc 1 565 0 is_stmt 0 discriminator 3
	movq	-296(%rbp), %rax
	movslq	%ebx, %rdx
	addq	$12, %rdx
	movsd	(%rax,%rdx,8), %xmm0
	movslq	%ebx, %rax
	movsd	%xmm0, -176(%rbp,%rax,8)
	addl	$1, %ebx
.L95:
	.loc 1 565 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L96
.LBE20:
	.loc 1 566 0 is_stmt 1
	cmpl	$0, -300(%rbp)
	jle	.L97
.LBB21:
	.loc 1 567 0
	movl	$0, %ebx
	jmp	.L98
.L99:
	.loc 1 567 0 is_stmt 0 discriminator 3
	movslq	%ebx, %rax
	movsd	-176(%rbp,%rax,8), %xmm0
	movq	-296(%rbp), %rax
	movslq	%ebx, %rdx
	addq	$8, %rdx
	movsd	8(%rax,%rdx,8), %xmm1
	subsd	%xmm1, %xmm0
	movslq	%ebx, %rax
	movsd	%xmm0, -144(%rbp,%rax,8)
	addl	$1, %ebx
.L98:
	.loc 1 567 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L99
.LBE21:
.LBB22:
	.loc 1 568 0 is_stmt 1
	movl	$0, %ebx
	jmp	.L100
.L101:
	.loc 1 568 0 is_stmt 0 discriminator 3
	movslq	%ebx, %rax
	movsd	-144(%rbp,%rax,8), %xmm0
	mulsd	-288(%rbp), %xmm0
	movslq	%ebx, %rax
	movsd	%xmm0, -112(%rbp,%rax,8)
	addl	$1, %ebx
.L100:
	.loc 1 568 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L101
.LBE22:
.LBB23:
	.loc 1 570 0 is_stmt 1
	movl	$0, %ebx
	jmp	.L102
.L103:
	.loc 1 570 0 is_stmt 0 discriminator 3
	movq	-296(%rbp), %rax
	movslq	%ebx, %rdx
	addq	$6, %rdx
	movsd	(%rax,%rdx,8), %xmm1
	movslq	%ebx, %rax
	movsd	-112(%rbp,%rax,8), %xmm0
	addsd	%xmm1, %xmm0
	movslq	%ebx, %rax
	movsd	%xmm0, -112(%rbp,%rax,8)
	addl	$1, %ebx
.L102:
	.loc 1 570 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L103
.LBE23:
.LBB24:
	.loc 1 571 0 is_stmt 1
	movl	$0, %ebx
	jmp	.L104
.L105:
	.loc 1 571 0 is_stmt 0 discriminator 3
	movslq	%ebx, %rax
	movsd	-112(%rbp,%rax,8), %xmm0
	movq	-296(%rbp), %rax
	movslq	%ebx, %rdx
	addq	$6, %rdx
	movsd	%xmm0, (%rax,%rdx,8)
	addl	$1, %ebx
.L104:
	.loc 1 571 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L105
.L97:
.LBE24:
.LBB25:
	.loc 1 574 0 is_stmt 1
	movq	-296(%rbp), %rax
	movsd	16(%rax), %xmm0
	movsd	%xmm0, -272(%rbp)
	.loc 1 575 0
	movq	-296(%rbp), %rax
	movsd	24(%rax), %xmm0
	movsd	%xmm0, -264(%rbp)
	.loc 1 576 0
	movq	-296(%rbp), %rax
	movsd	32(%rax), %xmm0
	movsd	%xmm0, -256(%rbp)
	.loc 1 577 0
	movsd	-272(%rbp), %xmm0
	ucomisd	-272(%rbp), %xmm0
	jnp	.L106
	.loc 1 577 0 is_stmt 0 discriminator 1
	movl	$99, %esi
	leaq	.LC9(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	call	abort@PLT
.L106:
	.loc 1 578 0 is_stmt 1
	movsd	-264(%rbp), %xmm0
	ucomisd	-264(%rbp), %xmm0
	jnp	.L107
	.loc 1 578 0 is_stmt 0 discriminator 1
	movl	$98, %esi
	leaq	.LC9(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	call	abort@PLT
.L107:
	.loc 1 579 0 is_stmt 1
	movsd	-256(%rbp), %xmm0
	ucomisd	-256(%rbp), %xmm0
	jnp	.L108
	.loc 1 579 0 is_stmt 0 discriminator 1
	movl	$97, %esi
	leaq	.LC9(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	call	abort@PLT
.L108:
	.loc 1 580 0 is_stmt 1
	movsd	-272(%rbp), %xmm1
	movq	.LC21(%rip), %xmm0
	andpd	%xmm1, %xmm0
	movsd	.LC22(%rip), %xmm1
	ucomisd	%xmm0, %xmm1
	seta	%al
	xorl	$1, %eax
	testb	%al, %al
	je	.L109
	.loc 1 580 0 is_stmt 0 discriminator 1
	movl	$96, %esi
	leaq	.LC9(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	call	abort@PLT
.L109:
	.loc 1 581 0 is_stmt 1
	movsd	-264(%rbp), %xmm1
	movq	.LC21(%rip), %xmm0
	andpd	%xmm1, %xmm0
	movsd	.LC22(%rip), %xmm1
	ucomisd	%xmm0, %xmm1
	seta	%al
	xorl	$1, %eax
	testb	%al, %al
	je	.L110
	.loc 1 581 0 is_stmt 0 discriminator 1
	movl	$95, %esi
	leaq	.LC9(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	call	abort@PLT
.L110:
	.loc 1 582 0 is_stmt 1
	movsd	-256(%rbp), %xmm1
	movq	.LC21(%rip), %xmm0
	andpd	%xmm1, %xmm0
	movsd	.LC22(%rip), %xmm1
	ucomisd	%xmm0, %xmm1
	seta	%al
	xorl	$1, %eax
	testb	%al, %al
	je	.L111
	.loc 1 582 0 is_stmt 0 discriminator 1
	movl	$94, %esi
	leaq	.LC9(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	call	abort@PLT
.L111:
.LBE25:
.LBB26:
	.loc 1 587 0 is_stmt 1
	movl	$0, %ebx
	jmp	.L112
.L113:
	.loc 1 587 0 is_stmt 0 discriminator 3
	movslq	%ebx, %rax
	movsd	-176(%rbp,%rax,8), %xmm0
	movq	-296(%rbp), %rax
	movslq	%ebx, %rdx
	addq	$8, %rdx
	movsd	%xmm0, 8(%rax,%rdx,8)
	addl	$1, %ebx
.L112:
	.loc 1 587 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L113
.LBE26:
.LBB27:
	.loc 1 589 0 is_stmt 1
	movq	-296(%rbp), %rax
	movsd	72(%rax), %xmm0
	movsd	%xmm0, -248(%rbp)
	.loc 1 590 0
	movq	-296(%rbp), %rax
	movsd	80(%rax), %xmm0
	movsd	%xmm0, -240(%rbp)
	.loc 1 591 0
	movq	-296(%rbp), %rax
	movsd	88(%rax), %xmm0
	movsd	%xmm0, -232(%rbp)
	.loc 1 592 0
	movsd	-248(%rbp), %xmm0
	ucomisd	-248(%rbp), %xmm0
	jnp	.L114
	.loc 1 592 0 is_stmt 0 discriminator 1
	movl	$89, %esi
	leaq	.LC9(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	call	abort@PLT
.L114:
	.loc 1 593 0 is_stmt 1
	movsd	-240(%rbp), %xmm0
	ucomisd	-240(%rbp), %xmm0
	jnp	.L115
	.loc 1 593 0 is_stmt 0 discriminator 1
	movl	$88, %esi
	leaq	.LC9(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	call	abort@PLT
.L115:
	.loc 1 594 0 is_stmt 1
	movsd	-232(%rbp), %xmm0
	ucomisd	-232(%rbp), %xmm0
	jnp	.L116
	.loc 1 594 0 is_stmt 0 discriminator 1
	movl	$87, %esi
	leaq	.LC9(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	call	abort@PLT
.L116:
	.loc 1 595 0 is_stmt 1
	movsd	-248(%rbp), %xmm1
	movq	.LC21(%rip), %xmm0
	andpd	%xmm1, %xmm0
	movsd	.LC23(%rip), %xmm1
	ucomisd	%xmm0, %xmm1
	seta	%al
	xorl	$1, %eax
	testb	%al, %al
	je	.L117
	.loc 1 595 0 is_stmt 0 discriminator 1
	movl	$86, %esi
	leaq	.LC9(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	call	abort@PLT
.L117:
	.loc 1 596 0 is_stmt 1
	movsd	-240(%rbp), %xmm1
	movq	.LC21(%rip), %xmm0
	andpd	%xmm1, %xmm0
	movsd	.LC23(%rip), %xmm1
	ucomisd	%xmm0, %xmm1
	seta	%al
	xorl	$1, %eax
	testb	%al, %al
	je	.L118
	.loc 1 596 0 is_stmt 0 discriminator 1
	movl	$85, %esi
	leaq	.LC9(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	call	abort@PLT
.L118:
	.loc 1 597 0 is_stmt 1
	movsd	-232(%rbp), %xmm1
	movq	.LC21(%rip), %xmm0
	andpd	%xmm1, %xmm0
	movsd	.LC23(%rip), %xmm1
	ucomisd	%xmm0, %xmm1
	seta	%al
	xorl	$1, %eax
	testb	%al, %al
	je	.L119
	.loc 1 597 0 is_stmt 0 discriminator 1
	movl	$84, %esi
	leaq	.LC9(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	call	abort@PLT
.L119:
.LBE27:
.LBB28:
	.loc 1 601 0 is_stmt 1
	movl	$0, %ebx
	jmp	.L120
.L121:
	.loc 1 601 0 is_stmt 0 discriminator 3
	movq	-296(%rbp), %rax
	movslq	%ebx, %rdx
	addq	$8, %rdx
	movsd	8(%rax,%rdx,8), %xmm0
	mulsd	-288(%rbp), %xmm0
	movslq	%ebx, %rax
	movsd	%xmm0, -112(%rbp,%rax,8)
	addl	$1, %ebx
.L120:
	.loc 1 601 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L121
.LBE28:
.LBB29:
	.loc 1 603 0 is_stmt 1
	movq	-296(%rbp), %rax
	movsd	48(%rax), %xmm0
	movsd	%xmm0, -224(%rbp)
	.loc 1 604 0
	movq	-296(%rbp), %rax
	movsd	56(%rax), %xmm0
	movsd	%xmm0, -216(%rbp)
	.loc 1 605 0
	movq	-296(%rbp), %rax
	movsd	64(%rax), %xmm0
	movsd	%xmm0, -208(%rbp)
	.loc 1 606 0
	movsd	-224(%rbp), %xmm0
	ucomisd	-224(%rbp), %xmm0
	jnp	.L122
	.loc 1 606 0 is_stmt 0 discriminator 1
	movl	$79, %esi
	leaq	.LC9(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	call	abort@PLT
.L122:
	.loc 1 607 0 is_stmt 1
	movsd	-216(%rbp), %xmm0
	ucomisd	-216(%rbp), %xmm0
	jnp	.L123
	.loc 1 607 0 is_stmt 0 discriminator 1
	movl	$78, %esi
	leaq	.LC9(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	call	abort@PLT
.L123:
	.loc 1 608 0 is_stmt 1
	movsd	-208(%rbp), %xmm0
	ucomisd	-208(%rbp), %xmm0
	jnp	.L124
	.loc 1 608 0 is_stmt 0 discriminator 1
	movl	$77, %esi
	leaq	.LC9(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	call	abort@PLT
.L124:
	.loc 1 609 0 is_stmt 1
	movsd	-224(%rbp), %xmm1
	movq	.LC21(%rip), %xmm0
	andpd	%xmm1, %xmm0
	movsd	.LC23(%rip), %xmm1
	ucomisd	%xmm0, %xmm1
	seta	%al
	xorl	$1, %eax
	testb	%al, %al
	je	.L125
	.loc 1 609 0 is_stmt 0 discriminator 1
	movl	$76, %esi
	leaq	.LC9(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	call	abort@PLT
.L125:
	.loc 1 610 0 is_stmt 1
	movsd	-216(%rbp), %xmm1
	movq	.LC21(%rip), %xmm0
	andpd	%xmm1, %xmm0
	movsd	.LC23(%rip), %xmm1
	ucomisd	%xmm0, %xmm1
	seta	%al
	xorl	$1, %eax
	testb	%al, %al
	je	.L126
	.loc 1 610 0 is_stmt 0 discriminator 1
	movl	$75, %esi
	leaq	.LC9(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	call	abort@PLT
.L126:
	.loc 1 611 0 is_stmt 1
	movsd	-208(%rbp), %xmm1
	movq	.LC21(%rip), %xmm0
	andpd	%xmm1, %xmm0
	movsd	.LC23(%rip), %xmm1
	ucomisd	%xmm0, %xmm1
	seta	%al
	xorl	$1, %eax
	testb	%al, %al
	je	.L127
	.loc 1 611 0 is_stmt 0 discriminator 1
	movl	$74, %esi
	leaq	.LC9(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	call	abort@PLT
.L127:
.LBE29:
.LBB30:
	.loc 1 614 0 is_stmt 1
	movl	$0, %ebx
	jmp	.L128
.L129:
	.loc 1 614 0 is_stmt 0 discriminator 3
	movq	-296(%rbp), %rax
	movslq	%ebx, %rdx
	addq	$6, %rdx
	movsd	(%rax,%rdx,8), %xmm1
	movslq	%ebx, %rax
	movsd	-112(%rbp,%rax,8), %xmm0
	addsd	%xmm1, %xmm0
	movslq	%ebx, %rax
	movsd	%xmm0, -80(%rbp,%rax,8)
	addl	$1, %ebx
.L128:
	.loc 1 614 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L129
.LBE30:
.LBB31:
	.loc 1 615 0 is_stmt 1
	movl	$0, %ebx
	jmp	.L130
.L131:
	.loc 1 615 0 is_stmt 0 discriminator 3
	movslq	%ebx, %rax
	movsd	-80(%rbp,%rax,8), %xmm1
	movsd	.LC6(%rip), %xmm0
	mulsd	%xmm1, %xmm0
	movslq	%ebx, %rax
	movsd	%xmm0, -48(%rbp,%rax,8)
	addl	$1, %ebx
.L130:
	.loc 1 615 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L131
.LBE31:
.LBB32:
	.loc 1 616 0 is_stmt 1
	movl	$0, %ebx
	jmp	.L132
.L133:
	.loc 1 616 0 is_stmt 0 discriminator 3
	movq	-296(%rbp), %rax
	movslq	%ebx, %rdx
	addq	$2, %rdx
	movsd	(%rax,%rdx,8), %xmm1
	movslq	%ebx, %rax
	movsd	-48(%rbp,%rax,8), %xmm0
	addsd	%xmm1, %xmm0
	movslq	%ebx, %rax
	movsd	%xmm0, -48(%rbp,%rax,8)
	addl	$1, %ebx
.L132:
	.loc 1 616 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L133
.LBE32:
.LBB33:
	.loc 1 617 0 is_stmt 1
	movl	$0, %ebx
	jmp	.L134
.L135:
	.loc 1 617 0 is_stmt 0 discriminator 3
	movslq	%ebx, %rax
	movsd	-48(%rbp,%rax,8), %xmm0
	movq	-296(%rbp), %rax
	movslq	%ebx, %rdx
	addq	$2, %rdx
	movsd	%xmm0, (%rax,%rdx,8)
	addl	$1, %ebx
.L134:
	.loc 1 617 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L135
.LBE33:
.LBB34:
	.loc 1 618 0 is_stmt 1
	movl	$0, %ebx
	jmp	.L136
.L137:
	.loc 1 618 0 is_stmt 0 discriminator 3
	movslq	%ebx, %rax
	movsd	-80(%rbp,%rax,8), %xmm1
	movslq	%ebx, %rax
	movsd	-112(%rbp,%rax,8), %xmm0
	addsd	%xmm1, %xmm0
	movq	-296(%rbp), %rax
	movslq	%ebx, %rdx
	addq	$6, %rdx
	movsd	%xmm0, (%rax,%rdx,8)
	addl	$1, %ebx
.L136:
	.loc 1 618 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L137
.LBE34:
.LBB35:
	.loc 1 620 0 is_stmt 1
	movq	-296(%rbp), %rax
	movsd	16(%rax), %xmm0
	movsd	%xmm0, -200(%rbp)
	.loc 1 621 0
	movq	-296(%rbp), %rax
	movsd	24(%rax), %xmm0
	movsd	%xmm0, -192(%rbp)
	.loc 1 622 0
	movq	-296(%rbp), %rax
	movsd	32(%rax), %xmm0
	movsd	%xmm0, -184(%rbp)
	.loc 1 623 0
	movsd	-200(%rbp), %xmm0
	ucomisd	-200(%rbp), %xmm0
	jnp	.L138
	.loc 1 623 0 is_stmt 0 discriminator 1
	movl	$69, %esi
	leaq	.LC9(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	call	abort@PLT
.L138:
	.loc 1 624 0 is_stmt 1
	movsd	-192(%rbp), %xmm0
	ucomisd	-192(%rbp), %xmm0
	jnp	.L139
	.loc 1 624 0 is_stmt 0 discriminator 1
	movl	$68, %esi
	leaq	.LC9(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	call	abort@PLT
.L139:
	.loc 1 625 0 is_stmt 1
	movsd	-184(%rbp), %xmm0
	ucomisd	-184(%rbp), %xmm0
	jnp	.L140
	.loc 1 625 0 is_stmt 0 discriminator 1
	movl	$67, %esi
	leaq	.LC9(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	call	abort@PLT
.L140:
	.loc 1 626 0 is_stmt 1
	movsd	-200(%rbp), %xmm1
	movq	.LC21(%rip), %xmm0
	andpd	%xmm1, %xmm0
	movsd	.LC23(%rip), %xmm1
	ucomisd	%xmm0, %xmm1
	seta	%al
	xorl	$1, %eax
	testb	%al, %al
	je	.L141
	.loc 1 626 0 is_stmt 0 discriminator 1
	movl	$66, %esi
	leaq	.LC9(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	call	abort@PLT
.L141:
	.loc 1 627 0 is_stmt 1
	movsd	-192(%rbp), %xmm1
	movq	.LC21(%rip), %xmm0
	andpd	%xmm1, %xmm0
	movsd	.LC23(%rip), %xmm1
	ucomisd	%xmm0, %xmm1
	seta	%al
	xorl	$1, %eax
	testb	%al, %al
	je	.L142
	.loc 1 627 0 is_stmt 0 discriminator 1
	movl	$65, %esi
	leaq	.LC9(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	call	abort@PLT
.L142:
	.loc 1 628 0 is_stmt 1
	movsd	-184(%rbp), %xmm1
	movq	.LC21(%rip), %xmm0
	andpd	%xmm1, %xmm0
	movsd	.LC23(%rip), %xmm1
	ucomisd	%xmm0, %xmm1
	seta	%al
	xorl	$1, %eax
	testb	%al, %al
	je	.L143
	.loc 1 628 0 is_stmt 0 discriminator 1
	movl	$64, %esi
	leaq	.LC9(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	call	abort@PLT
.L143:
.LBE35:
	.loc 1 564 0 is_stmt 1
	movq	-296(%rbp), %rax
	movq	136(%rax), %rax
	movq	%rax, -296(%rbp)
.L94:
	.loc 1 564 0 is_stmt 0 discriminator 1
	cmpq	$0, -296(%rbp)
	jne	.L144
	.loc 1 634 0 is_stmt 1
	nop
	movq	-24(%rbp), %rax
	xorq	%fs:40, %rax
	je	.L145
	call	__stack_chk_fail@PLT
.L145:
	addq	$296, %rsp
	popq	%rbx
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE12:
	.size	vp, .-vp
	.globl	gravstep
	.type	gravstep, @function
gravstep:
.LFB13:
	.loc 1 640 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movsd	%xmm0, -8(%rbp)
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movl	%edx, -28(%rbp)
	movsd	%xmm1, -40(%rbp)
	.loc 1 642 0
	movq	-16(%rbp), %rcx
	movq	-8(%rbp), %rdx
	movq	-24(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rdx, -48(%rbp)
	movsd	-48(%rbp), %xmm0
	movq	%rax, %rdi
	call	hackgrav
	.loc 1 643 0
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE13:
	.size	gravstep, .-gravstep
	.globl	hackgrav
	.type	hackgrav, @function
hackgrav:
.LFB14:
	.loc 1 651 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	pushq	%rbx
	subq	$216, %rsp
	.cfi_offset 3, -24
	movq	%rdi, -120(%rbp)
	movsd	%xmm0, -128(%rbp)
	movq	%rsi, -136(%rbp)
	.loc 1 651 0
	movq	%fs:40, %rax
	movq	%rax, -24(%rbp)
	xorl	%eax, %eax
	.loc 1 656 0
	movq	-120(%rbp), %rax
	movq	%rax, -96(%rbp)
.LBB36:
	.loc 1 657 0
	movl	$0, %ebx
	jmp	.L148
.L149:
	.loc 1 657 0 is_stmt 0 discriminator 3
	movq	-120(%rbp), %rax
	movslq	%ebx, %rdx
	addq	$2, %rdx
	movsd	(%rax,%rdx,8), %xmm0
	movslq	%ebx, %rax
	movsd	%xmm0, -88(%rbp,%rax,8)
	addl	$1, %ebx
.L148:
	.loc 1 657 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L149
.LBE36:
	.loc 1 658 0 is_stmt 1
	pxor	%xmm0, %xmm0
	movsd	%xmm0, -64(%rbp)
.LBB37:
	.loc 1 659 0
	movl	$0, %ebx
	jmp	.L150
.L151:
	.loc 1 659 0 is_stmt 0 discriminator 3
	movslq	%ebx, %rax
	addq	$4, %rax
	pxor	%xmm0, %xmm0
	movsd	%xmm0, -88(%rbp,%rax,8)
	addl	$1, %ebx
.L150:
	.loc 1 659 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L151
.LBE37:
	.loc 1 660 0 is_stmt 1
	movsd	-128(%rbp), %xmm0
	mulsd	-128(%rbp), %xmm0
	movsd	%xmm0, -104(%rbp)
	.loc 1 661 0
	leaq	-208(%rbp), %rax
	movsd	.LC11(%rip), %xmm0
	movq	-104(%rbp), %rsi
	movq	-136(%rbp), %rcx
	pushq	-40(%rbp)
	pushq	-48(%rbp)
	pushq	-56(%rbp)
	pushq	-64(%rbp)
	pushq	-72(%rbp)
	pushq	-80(%rbp)
	pushq	-88(%rbp)
	pushq	-96(%rbp)
	movl	$0, %edx
	movapd	%xmm0, %xmm1
	movq	%rsi, -216(%rbp)
	movsd	-216(%rbp), %xmm0
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	walksub@PLT
	addq	$64, %rsp
	movq	-208(%rbp), %rax
	movq	-200(%rbp), %rdx
	movq	%rax, -96(%rbp)
	movq	%rdx, -88(%rbp)
	movq	-192(%rbp), %rax
	movq	-184(%rbp), %rdx
	movq	%rax, -80(%rbp)
	movq	%rdx, -72(%rbp)
	movq	-176(%rbp), %rax
	movq	-168(%rbp), %rdx
	movq	%rax, -64(%rbp)
	movq	%rdx, -56(%rbp)
	movq	-160(%rbp), %rax
	movq	-152(%rbp), %rdx
	movq	%rax, -48(%rbp)
	movq	%rdx, -40(%rbp)
	.loc 1 662 0
	movsd	-64(%rbp), %xmm0
	movq	-120(%rbp), %rax
	movsd	%xmm0, 120(%rax)
.LBB38:
	.loc 1 664 0
	movl	$0, %ebx
	jmp	.L152
.L153:
	.loc 1 664 0 is_stmt 0 discriminator 3
	movslq	%ebx, %rax
	addq	$4, %rax
	movsd	-88(%rbp,%rax,8), %xmm0
	movq	-120(%rbp), %rax
	movslq	%ebx, %rdx
	addq	$12, %rdx
	movsd	%xmm0, (%rax,%rdx,8)
	addl	$1, %ebx
.L152:
	.loc 1 664 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L153
.LBE38:
	.loc 1 666 0 is_stmt 1
	nop
	movq	-24(%rbp), %rax
	xorq	%fs:40, %rax
	je	.L154
	call	__stack_chk_fail@PLT
.L154:
	movq	-8(%rbp), %rbx
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE14:
	.size	hackgrav, .-hackgrav
	.globl	gravsub
	.type	gravsub, @function
gravsub:
.LFB15:
	.loc 1 673 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	pushq	%rbx
	subq	$136, %rsp
	.cfi_offset 3, -24
	movq	%rdi, -120(%rbp)
	movq	%rsi, -128(%rbp)
	.loc 1 673 0
	movq	%fs:40, %rax
	movq	%rax, -24(%rbp)
	xorl	%eax, %eax
.LBB39:
	.loc 1 681 0
	movl	$0, %ebx
	jmp	.L156
.L157:
	.loc 1 681 0 is_stmt 0 discriminator 3
	movq	-128(%rbp), %rax
	movslq	%ebx, %rdx
	addq	$2, %rdx
	movsd	(%rax,%rdx,8), %xmm0
	movslq	%ebx, %rax
	movsd	24(%rbp,%rax,8), %xmm1
	subsd	%xmm1, %xmm0
	movslq	%ebx, %rax
	movsd	%xmm0, -48(%rbp,%rax,8)
	addl	$1, %ebx
.L156:
	.loc 1 681 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L157
.LBE39:
.LBB40:
	.loc 1 682 0 is_stmt 1
	pxor	%xmm0, %xmm0
	movsd	%xmm0, -112(%rbp)
	movl	$0, %ebx
	jmp	.L158
.L159:
	.loc 1 682 0 is_stmt 0 discriminator 3
	movslq	%ebx, %rax
	movsd	-48(%rbp,%rax,8), %xmm1
	movslq	%ebx, %rax
	movsd	-48(%rbp,%rax,8), %xmm0
	mulsd	%xmm1, %xmm0
	movsd	-112(%rbp), %xmm1
	addsd	%xmm1, %xmm0
	movsd	%xmm0, -112(%rbp)
	addl	$1, %ebx
.L158:
	.loc 1 682 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L159
.LBE40:
	.loc 1 684 0 is_stmt 1
	movsd	-112(%rbp), %xmm1
	movsd	.LC24(%rip), %xmm0
	addsd	%xmm1, %xmm0
	movsd	%xmm0, -112(%rbp)
	.loc 1 685 0
	movq	-112(%rbp), %rax
	movq	%rax, -136(%rbp)
	movsd	-136(%rbp), %xmm0
	call	sqrt@PLT
	movq	%xmm0, %rax
	movq	%rax, -104(%rbp)
	.loc 1 686 0
	movq	-128(%rbp), %rax
	movsd	8(%rax), %xmm0
	divsd	-104(%rbp), %xmm0
	movsd	%xmm0, -96(%rbp)
	.loc 1 687 0
	movsd	48(%rbp), %xmm0
	subsd	-96(%rbp), %xmm0
	movsd	%xmm0, 48(%rbp)
	.loc 1 688 0
	movsd	-96(%rbp), %xmm0
	divsd	-112(%rbp), %xmm0
	movsd	%xmm0, -88(%rbp)
.LBB41:
	.loc 1 689 0
	movl	$0, %ebx
	jmp	.L160
.L161:
	.loc 1 689 0 is_stmt 0 discriminator 3
	movslq	%ebx, %rax
	movsd	-48(%rbp,%rax,8), %xmm0
	mulsd	-88(%rbp), %xmm0
	movslq	%ebx, %rax
	movsd	%xmm0, -80(%rbp,%rax,8)
	addl	$1, %ebx
.L160:
	.loc 1 689 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L161
.LBE41:
.LBB42:
	.loc 1 690 0 is_stmt 1
	movl	$0, %ebx
	jmp	.L162
.L163:
	.loc 1 690 0 is_stmt 0 discriminator 3
	movslq	%ebx, %rax
	addq	$4, %rax
	movsd	24(%rbp,%rax,8), %xmm1
	movslq	%ebx, %rax
	movsd	-80(%rbp,%rax,8), %xmm0
	addsd	%xmm1, %xmm0
	movslq	%ebx, %rax
	addq	$4, %rax
	movsd	%xmm0, 24(%rbp,%rax,8)
	addl	$1, %ebx
.L162:
	.loc 1 690 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L163
.LBE42:
	.loc 1 707 0 is_stmt 1
	movq	-120(%rbp), %rcx
	movq	16(%rbp), %rax
	movq	24(%rbp), %rdx
	movq	%rax, (%rcx)
	movq	%rdx, 8(%rcx)
	movq	32(%rbp), %rax
	movq	40(%rbp), %rdx
	movq	%rax, 16(%rcx)
	movq	%rdx, 24(%rcx)
	movq	48(%rbp), %rax
	movq	56(%rbp), %rdx
	movq	%rax, 32(%rcx)
	movq	%rdx, 40(%rcx)
	movq	64(%rbp), %rax
	movq	72(%rbp), %rdx
	movq	%rax, 48(%rcx)
	movq	%rdx, 56(%rcx)
	.loc 1 708 0
	movq	-120(%rbp), %rax
	movq	-24(%rbp), %rsi
	xorq	%fs:40, %rsi
	je	.L165
	call	__stack_chk_fail@PLT
.L165:
	addq	$136, %rsp
	popq	%rbx
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE15:
	.size	gravsub, .-gravsub
	.globl	subdivp
	.type	subdivp, @function
subdivp:
.LFB16:
	.loc 1 730 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	pushq	%r12
	pushq	%rbx
	subq	$80, %rsp
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movq	%rdi, -72(%rbp)
	movsd	%xmm0, -80(%rbp)
	movsd	%xmm1, -88(%rbp)
	.loc 1 730 0
	movq	%fs:40, %rax
	movq	%rax, -24(%rbp)
	xorl	%eax, %eax
	.loc 1 736 0
	movq	-72(%rbp), %r12
	.loc 1 737 0
	movzwl	(%r12), %eax
	cmpw	$1, %ax
	jne	.L167
	.loc 1 738 0
	movl	$0, %eax
	jmp	.L173
.L167:
.LBB43:
	.loc 1 740 0
	movl	$0, %ebx
	jmp	.L169
.L170:
	.loc 1 740 0 is_stmt 0 discriminator 3
	movslq	%ebx, %rax
	addq	$2, %rax
	movsd	(%r12,%rax,8), %xmm0
	movslq	%ebx, %rax
	movsd	24(%rbp,%rax,8), %xmm1
	subsd	%xmm1, %xmm0
	movslq	%ebx, %rax
	movsd	%xmm0, -48(%rbp,%rax,8)
	addl	$1, %ebx
.L169:
	.loc 1 740 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L170
.LBE43:
.LBB44:
	.loc 1 741 0 is_stmt 1
	pxor	%xmm0, %xmm0
	movsd	%xmm0, -56(%rbp)
	movl	$0, %ebx
	jmp	.L171
.L172:
	.loc 1 741 0 is_stmt 0 discriminator 3
	movslq	%ebx, %rax
	movsd	-48(%rbp,%rax,8), %xmm1
	movslq	%ebx, %rax
	movsd	-48(%rbp,%rax,8), %xmm0
	mulsd	%xmm1, %xmm0
	movsd	-56(%rbp), %xmm1
	addsd	%xmm1, %xmm0
	movsd	%xmm0, -56(%rbp)
	addl	$1, %ebx
.L171:
	.loc 1 741 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L172
.LBE44:
	.loc 1 744 0 is_stmt 1
	movsd	-88(%rbp), %xmm0
	mulsd	-56(%rbp), %xmm0
	movsd	-80(%rbp), %xmm1
	ucomisd	%xmm0, %xmm1
	seta	%al
	movzbl	%al, %eax
.L173:
	.loc 1 745 0 discriminator 1
	movq	-24(%rbp), %rdx
	xorq	%fs:40, %rdx
	je	.L174
	.loc 1 745 0 is_stmt 0
	call	__stack_chk_fail@PLT
.L174:
	addq	$80, %rsp
	popq	%rbx
	popq	%r12
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE16:
	.size	subdivp, .-subdivp
	.globl	maketree
	.type	maketree, @function
maketree:
.LFB17:
	.loc 1 788 0 is_stmt 1
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	pushq	%rbx
	subq	$88, %rsp
	.cfi_offset 3, -24
	movq	%rdi, -72(%rbp)
	movl	%esi, -76(%rbp)
	movq	%rdx, -88(%rbp)
	movl	%ecx, -80(%rbp)
	movl	%r8d, -92(%rbp)
	.loc 1 788 0
	movq	%fs:40, %rax
	movq	%rax, -24(%rbp)
	xorl	%eax, %eax
	.loc 1 795 0
	movq	-88(%rbp), %rax
	movq	$0, 32(%rax)
	.loc 1 796 0
	movl	-76(%rbp), %eax
	movl	%eax, nbody(%rip)
	.loc 1 799 0
	movl	NumNodes(%rip), %eax
	subl	$1, %eax
	movl	%eax, -60(%rbp)
	jmp	.L176
.L181:
	.loc 1 800 0
	movq	-88(%rbp), %rax
	movl	-60(%rbp), %edx
	movslq	%edx, %rdx
	addq	$68, %rdx
	movq	8(%rax,%rdx,8), %rax
	movq	%rax, -72(%rbp)
	.loc 1 803 0
	movq	-72(%rbp), %rbx
	jmp	.L177
.L180:
	.loc 1 804 0
	movsd	8(%rbx), %xmm0
	pxor	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jp	.L184
	pxor	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	je	.L178
.L184:
	.loc 1 805 0
	movl	-92(%rbp), %ecx
	movl	-80(%rbp), %edx
	movq	-88(%rbp), %rax
	movq	%rax, %rsi
	movq	%rbx, %rdi
	call	expandbox
	.loc 1 806 0
	movq	-88(%rbp), %rax
	movq	%rax, %rsi
	movq	%rbx, %rdi
	call	intcoord
	movq	%rax, -48(%rbp)
	movq	%rdx, -40(%rbp)
	.loc 1 807 0
	movq	-88(%rbp), %rax
	movq	32(%rax), %rax
	movq	%rax, -56(%rbp)
	.loc 1 808 0
	movq	-88(%rbp), %rsi
	movq	-56(%rbp), %rcx
	movq	-48(%rbp), %rdx
	movq	-40(%rbp), %rax
	movq	%rsi, %r9
	movl	$536870912, %r8d
	movq	%rdx, %rsi
	movq	%rax, %rdx
	movq	%rbx, %rdi
	call	loadtree
	movq	%rax, -56(%rbp)
	.loc 1 809 0
	movq	-88(%rbp), %rax
	movq	-56(%rbp), %rdx
	movq	%rdx, 32(%rax)
.L178:
	.loc 1 803 0 discriminator 2
	movq	136(%rbx), %rbx
.L177:
	.loc 1 803 0 is_stmt 0 discriminator 1
	testq	%rbx, %rbx
	jne	.L180
	.loc 1 799 0 is_stmt 1 discriminator 2
	subl	$1, -60(%rbp)
.L176:
	.loc 1 799 0 is_stmt 0 discriminator 1
	cmpl	$0, -60(%rbp)
	jns	.L181
	.loc 1 818 0 is_stmt 1
	movq	-88(%rbp), %rax
	movq	32(%rax), %rax
	movq	%rax, %rdi
	call	hackcofm
	.loc 1 822 0
	movq	-88(%rbp), %rax
	movq	32(%rax), %rax
	.loc 1 823 0
	movq	-24(%rbp), %rdi
	xorq	%fs:40, %rdi
	je	.L183
	call	__stack_chk_fail@PLT
.L183:
	addq	$88, %rsp
	popq	%rbx
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE17:
	.size	maketree, .-maketree
	.globl	expandbox
	.type	expandbox, @function
expandbox:
.LFB18:
	.loc 1 835 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	pushq	%rbx
	subq	$1160, %rsp
	.cfi_offset 3, -24
	movq	%rdi, -1144(%rbp)
	movq	%rsi, -1152(%rbp)
	movl	%edx, -1156(%rbp)
	movl	%ecx, -1160(%rbp)
	.loc 1 835 0
	movq	%fs:40, %rax
	movq	%rax, -24(%rbp)
	xorl	%eax, %eax
	.loc 1 844 0
	movq	-1152(%rbp), %rdx
	movq	-1144(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	ic_test
	movl	%eax, -1132(%rbp)
	.loc 1 845 0
	jmp	.L186
.L195:
	.loc 1 846 0
	movq	-1152(%rbp), %rax
	movsd	24(%rax), %xmm0
	movsd	%xmm0, -1128(%rbp)
	.loc 1 848 0
	movsd	.LC25(%rip), %xmm0
	ucomisd	-1128(%rbp), %xmm0
	seta	%al
	xorl	$1, %eax
	testb	%al, %al
	je	.L187
	.loc 1 848 0 is_stmt 0 discriminator 1
	movl	$999, %esi
	leaq	.LC9(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	call	abort@PLT
.L187:
.LBB45:
	.loc 1 849 0 is_stmt 1
	movl	$0, %ebx
	jmp	.L188
.L189:
	.loc 1 849 0 is_stmt 0 discriminator 3
	movq	-1152(%rbp), %rax
	movslq	%ebx, %rdx
	movsd	(%rax,%rdx,8), %xmm1
	movsd	-1128(%rbp), %xmm2
	movsd	.LC26(%rip), %xmm0
	mulsd	%xmm2, %xmm0
	addsd	%xmm1, %xmm0
	movslq	%ebx, %rax
	movsd	%xmm0, -1088(%rbp,%rax,8)
	addl	$1, %ebx
.L188:
	.loc 1 849 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L189
.LBE45:
	.loc 1 862 0 is_stmt 1
	movl	$0, -1136(%rbp)
	jmp	.L190
.L193:
	.loc 1 863 0
	movq	-1144(%rbp), %rax
	movl	-1136(%rbp), %edx
	movslq	%edx, %rdx
	addq	$2, %rdx
	movsd	(%rax,%rdx,8), %xmm1
	movl	-1136(%rbp), %eax
	cltq
	movsd	-1088(%rbp,%rax,8), %xmm0
	ucomisd	%xmm1, %xmm0
	jbe	.L191
.LBB46:
	.loc 1 866 0
	movq	-1152(%rbp), %rax
	movl	-1136(%rbp), %edx
	movslq	%edx, %rdx
	movsd	(%rax,%rdx,8), %xmm0
	movsd	%xmm0, -1112(%rbp)
	.loc 1 867 0
	movsd	-1112(%rbp), %xmm0
	subsd	-1128(%rbp), %xmm0
	movq	-1152(%rbp), %rax
	movl	-1136(%rbp), %edx
	movslq	%edx, %rdx
	movsd	%xmm0, (%rax,%rdx,8)
.L191:
.LBE46:
	.loc 1 862 0 discriminator 2
	addl	$1, -1136(%rbp)
.L190:
	.loc 1 862 0 is_stmt 0 discriminator 1
	cmpl	$2, -1136(%rbp)
	jle	.L193
	.loc 1 870 0 is_stmt 1
	movsd	-1128(%rbp), %xmm0
	addsd	%xmm0, %xmm0
	movq	-1152(%rbp), %rax
	movsd	%xmm0, 24(%rax)
	.loc 1 873 0
	movq	-1152(%rbp), %rax
	movsd	24(%rax), %xmm0
	movsd	%xmm0, -1128(%rbp)
	.loc 1 875 0
	movq	-1152(%rbp), %rax
	movq	32(%rax), %rax
	testq	%rax, %rax
	je	.L186
.LBB47:
	.loc 1 877 0
	movl	$0, %edi
	call	cell_alloc
	movq	%rax, -1120(%rbp)
	.loc 1 879 0
	movsd	-1072(%rbp), %xmm1
	movsd	-1080(%rbp), %xmm0
	movq	-1088(%rbp), %rax
	movq	-1152(%rbp), %rdx
	movq	%rdx, %rdi
	movapd	%xmm1, %xmm2
	movapd	%xmm0, %xmm1
	movq	%rax, -1168(%rbp)
	movsd	-1168(%rbp), %xmm0
	call	intcoord1
	movq	%rax, -1104(%rbp)
	movq	%rdx, -1096(%rbp)
	.loc 1 881 0
	movzwl	-1092(%rbp), %eax
	testw	%ax, %ax
	jne	.L194
	.loc 1 881 0 is_stmt 0 discriminator 1
	movl	$1, %esi
	leaq	.LC9(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	call	abort@PLT
.L194:
	.loc 1 882 0 is_stmt 1
	movq	-1104(%rbp), %rcx
	movq	-1096(%rbp), %rax
	movl	$536870912, %edx
	movq	%rcx, %rdi
	movq	%rax, %rsi
	call	old_subindex
	movl	%eax, -1136(%rbp)
	.loc 1 883 0
	movq	-1152(%rbp), %rax
	movq	32(%rax), %rdx
	movq	-1120(%rbp), %rax
	movl	-1136(%rbp), %ecx
	movslq	%ecx, %rcx
	addq	$6, %rcx
	movq	%rdx, (%rax,%rcx,8)
	.loc 1 884 0
	movq	-1152(%rbp), %rax
	movq	-1120(%rbp), %rdx
	movq	%rdx, 32(%rax)
	.loc 1 885 0
	movq	-1152(%rbp), %rdx
	movq	-1144(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	ic_test
	movl	%eax, -1132(%rbp)
.L186:
.LBE47:
	.loc 1 845 0
	cmpl	$0, -1132(%rbp)
	je	.L195
	.loc 1 888 0
	nop
	movq	-24(%rbp), %rax
	xorq	%fs:40, %rax
	je	.L196
	call	__stack_chk_fail@PLT
.L196:
	addq	$1160, %rsp
	popq	%rbx
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE18:
	.size	expandbox, .-expandbox
	.globl	loadtree
	.type	loadtree, @function
loadtree:
.LFB19:
	.loc 1 899 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$112, %rsp
	movq	%rdi, -72(%rbp)
	movq	%rdx, %rax
	movq	%rcx, -96(%rbp)
	movl	%r8d, -100(%rbp)
	movq	%r9, -112(%rbp)
	movq	%rsi, -88(%rbp)
	movq	%rax, -80(%rbp)
	.loc 1 899 0
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	.loc 1 904 0
	cmpq	$0, -96(%rbp)
	jne	.L199
	.loc 1 906 0
	movq	-72(%rbp), %rax
	jmp	.L200
.L199:
	.loc 1 909 0
	cmpl	$0, -100(%rbp)
	jne	.L201
	.loc 1 909 0 is_stmt 0 discriminator 1
	movl	$2, %esi
	leaq	.LC9(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	call	abort@PLT
.L201:
	.loc 1 910 0 is_stmt 1
	movq	-96(%rbp), %rax
	movzwl	(%rax), %eax
	cmpw	$1, %ax
	jne	.L202
.LBB48:
	.loc 1 916 0
	movl	$0, -56(%rbp)
	.loc 1 917 0
	movl	-56(%rbp), %eax
	movl	%eax, %edi
	call	cell_alloc
	movq	%rax, -48(%rbp)
	.loc 1 918 0
	movl	-100(%rbp), %edx
	movq	-112(%rbp), %rcx
	movq	-96(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	subindex
	movl	%eax, -52(%rbp)
	.loc 1 920 0
	movq	-48(%rbp), %rax
	movl	-52(%rbp), %edx
	movslq	%edx, %rdx
	leaq	6(%rdx), %rcx
	movq	-96(%rbp), %rdx
	movq	%rdx, (%rax,%rcx,8)
	.loc 1 921 0
	movq	-48(%rbp), %rax
	movq	%rax, -96(%rbp)
.L202:
.LBE48:
	.loc 1 924 0
	movl	-100(%rbp), %edx
	movq	-88(%rbp), %rcx
	movq	-80(%rbp), %rax
	movq	%rcx, %rdi
	movq	%rax, %rsi
	call	old_subindex
	movl	%eax, -52(%rbp)
	.loc 1 925 0
	movq	-96(%rbp), %rax
	movl	-52(%rbp), %edx
	movslq	%edx, %rdx
	addq	$6, %rdx
	movq	(%rax,%rdx,8), %rax
	movq	%rax, -40(%rbp)
	.loc 1 926 0
	movl	-100(%rbp), %eax
	sarl	%eax
	movl	%eax, %r8d
	movq	-112(%rbp), %rdi
	movq	-40(%rbp), %rcx
	movq	-88(%rbp), %rsi
	movq	-80(%rbp), %rdx
	movq	-72(%rbp), %rax
	movq	%rdi, %r9
	movq	%rax, %rdi
	call	loadtree
	movq	%rax, %rcx
	movq	-96(%rbp), %rax
	movl	-52(%rbp), %edx
	movslq	%edx, %rdx
	addq	$6, %rdx
	movq	%rcx, (%rax,%rdx,8)
	.loc 1 928 0
	movq	-96(%rbp), %rax
.L200:
	.loc 1 929 0
	movq	-8(%rbp), %rdi
	xorq	%fs:40, %rdi
	je	.L203
	call	__stack_chk_fail@PLT
.L203:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE19:
	.size	loadtree, .-loadtree
	.globl	intcoord1
	.type	intcoord1, @function
intcoord1:
.LFB20:
	.loc 1 938 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$112, %rsp
	movsd	%xmm0, -72(%rbp)
	movsd	%xmm1, -80(%rbp)
	movsd	%xmm2, -88(%rbp)
	movq	%rdi, -96(%rbp)
	.loc 1 938 0
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	.loc 1 948 0
	movw	$1, -36(%rbp)
	.loc 1 950 0
	movq	-96(%rbp), %rax
	movsd	(%rax), %xmm1
	movsd	-72(%rbp), %xmm0
	subsd	%xmm1, %xmm0
	movq	-96(%rbp), %rax
	movsd	24(%rax), %xmm1
	divsd	%xmm1, %xmm0
	movsd	%xmm0, -56(%rbp)
	.loc 1 951 0
	movsd	-56(%rbp), %xmm0
	pxor	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jb	.L205
	.loc 1 951 0 is_stmt 0 discriminator 1
	movsd	.LC11(%rip), %xmm0
	ucomisd	-56(%rbp), %xmm0
	jbe	.L205
	.loc 1 952 0 is_stmt 1
	movsd	-56(%rbp), %xmm1
	movsd	.LC27(%rip), %xmm0
	mulsd	%xmm1, %xmm0
	call	floor@PLT
	cvttsd2si	%xmm0, %eax
	movl	%eax, -48(%rbp)
	jmp	.L208
.L205:
	.loc 1 955 0
	movw	$0, -36(%rbp)
.L208:
	.loc 1 958 0
	movq	-96(%rbp), %rax
	movsd	8(%rax), %xmm1
	movsd	-80(%rbp), %xmm0
	subsd	%xmm1, %xmm0
	movq	-96(%rbp), %rax
	movsd	24(%rax), %xmm1
	divsd	%xmm1, %xmm0
	movsd	%xmm0, -56(%rbp)
	.loc 1 959 0
	movsd	-56(%rbp), %xmm0
	pxor	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jb	.L209
	.loc 1 959 0 is_stmt 0 discriminator 1
	movsd	.LC11(%rip), %xmm0
	ucomisd	-56(%rbp), %xmm0
	jbe	.L209
	.loc 1 960 0 is_stmt 1
	movsd	-56(%rbp), %xmm1
	movsd	.LC27(%rip), %xmm0
	mulsd	%xmm1, %xmm0
	call	floor@PLT
	cvttsd2si	%xmm0, %eax
	movl	%eax, -44(%rbp)
	jmp	.L212
.L209:
	.loc 1 963 0
	movw	$0, -36(%rbp)
.L212:
	.loc 1 967 0
	movq	-96(%rbp), %rax
	movsd	16(%rax), %xmm1
	movsd	-88(%rbp), %xmm0
	subsd	%xmm1, %xmm0
	movq	-96(%rbp), %rax
	movsd	24(%rax), %xmm1
	divsd	%xmm1, %xmm0
	movsd	%xmm0, -56(%rbp)
	.loc 1 968 0
	movsd	-56(%rbp), %xmm0
	pxor	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jb	.L213
	.loc 1 968 0 is_stmt 0 discriminator 1
	movsd	.LC11(%rip), %xmm0
	ucomisd	-56(%rbp), %xmm0
	jbe	.L213
	.loc 1 969 0 is_stmt 1
	movsd	-56(%rbp), %xmm1
	movsd	.LC27(%rip), %xmm0
	mulsd	%xmm1, %xmm0
	call	floor@PLT
	cvttsd2si	%xmm0, %eax
	movl	%eax, -40(%rbp)
	jmp	.L216
.L213:
	.loc 1 972 0
	movw	$0, -36(%rbp)
.L216:
	.loc 1 976 0
	movq	-48(%rbp), %rax
	movq	-40(%rbp), %rdx
	movq	%rax, -32(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-32(%rbp), %rax
	movq	-24(%rbp), %rdx
	.loc 1 977 0
	movq	-8(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L218
	call	__stack_chk_fail@PLT
.L218:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE20:
	.size	intcoord1, .-intcoord1
	.globl	intcoord
	.type	intcoord, @function
intcoord:
.LFB21:
	.loc 1 986 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$112, %rsp
	movq	%rdi, -72(%rbp)
	movq	%rsi, -80(%rbp)
	.loc 1 986 0
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	.loc 1 994 0
	movw	$1, -52(%rbp)
	.loc 1 995 0
	movq	-80(%rbp), %rax
	movsd	24(%rax), %xmm5
	movsd	%xmm5, -104(%rbp)
	.loc 1 997 0
	movq	-72(%rbp), %rax
	movsd	16(%rax), %xmm0
	movsd	%xmm0, -32(%rbp)
	.loc 1 998 0
	movq	-72(%rbp), %rax
	movsd	24(%rax), %xmm0
	movsd	%xmm0, -24(%rbp)
	.loc 1 999 0
	movq	-72(%rbp), %rax
	movsd	32(%rax), %xmm0
	movsd	%xmm0, -16(%rbp)
	.loc 1 1003 0
	movsd	-32(%rbp), %xmm0
	movq	-80(%rbp), %rax
	movsd	(%rax), %xmm1
	subsd	%xmm1, %xmm0
	divsd	%xmm5, %xmm0
	movapd	%xmm0, %xmm2
	movapd	%xmm2, %xmm4
	.loc 1 1004 0
	pxor	%xmm0, %xmm0
	ucomisd	%xmm0, %xmm2
	jb	.L226
	.loc 1 1004 0 is_stmt 0 discriminator 1
	movsd	.LC11(%rip), %xmm0
	movapd	%xmm4, %xmm6
	ucomisd	%xmm6, %xmm0
	jbe	.L226
	.loc 1 1005 0 is_stmt 1
	movsd	.LC27(%rip), %xmm0
	movapd	%xmm4, %xmm7
	mulsd	%xmm7, %xmm0
	call	floor@PLT
	cvttsd2si	%xmm0, %eax
	movl	%eax, -64(%rbp)
	jmp	.L229
.L226:
	.loc 1 1007 0
	movw	$0, -52(%rbp)
	.loc 1 1008 0
	movl	$0, -64(%rbp)
.L229:
	.loc 1 1012 0
	movsd	-24(%rbp), %xmm0
	movq	-80(%rbp), %rax
	movsd	8(%rax), %xmm1
	subsd	%xmm1, %xmm0
	divsd	-104(%rbp), %xmm0
	movapd	%xmm0, %xmm3
	movapd	%xmm3, %xmm4
	.loc 1 1013 0
	pxor	%xmm0, %xmm0
	ucomisd	%xmm0, %xmm3
	jb	.L230
	.loc 1 1013 0 is_stmt 0 discriminator 1
	movsd	.LC11(%rip), %xmm0
	movapd	%xmm4, %xmm7
	ucomisd	%xmm7, %xmm0
	jbe	.L230
	.loc 1 1014 0 is_stmt 1
	movsd	.LC27(%rip), %xmm0
	movapd	%xmm4, %xmm6
	mulsd	%xmm6, %xmm0
	call	floor@PLT
	cvttsd2si	%xmm0, %eax
	movl	%eax, -60(%rbp)
	jmp	.L233
.L230:
	.loc 1 1016 0
	movw	$0, -52(%rbp)
	.loc 1 1017 0
	movl	$0, -60(%rbp)
.L233:
	.loc 1 1021 0
	movsd	-16(%rbp), %xmm0
	movq	-80(%rbp), %rax
	movsd	16(%rax), %xmm1
	subsd	%xmm1, %xmm0
	divsd	-104(%rbp), %xmm0
	movapd	%xmm0, %xmm4
	.loc 1 1022 0
	pxor	%xmm0, %xmm0
	ucomisd	%xmm0, %xmm4
	jb	.L234
	.loc 1 1022 0 is_stmt 0 discriminator 1
	movsd	.LC11(%rip), %xmm0
	movapd	%xmm4, %xmm2
	ucomisd	%xmm2, %xmm0
	jbe	.L234
	.loc 1 1023 0 is_stmt 1
	movsd	.LC27(%rip), %xmm0
	movapd	%xmm4, %xmm3
	mulsd	%xmm3, %xmm0
	call	floor@PLT
	cvttsd2si	%xmm0, %eax
	movl	%eax, -56(%rbp)
	jmp	.L237
.L234:
	.loc 1 1025 0
	movw	$0, -52(%rbp)
	.loc 1 1026 0
	movl	$0, -56(%rbp)
.L237:
	.loc 1 1031 0
	movq	-64(%rbp), %rax
	movq	-56(%rbp), %rdx
	movq	%rax, -48(%rbp)
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rax
	movq	-40(%rbp), %rdx
	.loc 1 1032 0
	movq	-8(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L239
	call	__stack_chk_fail@PLT
.L239:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE21:
	.size	intcoord, .-intcoord
	.globl	ic_test
	.type	ic_test, @function
ic_test:
.LFB22:
	.loc 1 1036 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$80, %rsp
	movq	%rdi, -72(%rbp)
	movq	%rsi, -80(%rbp)
	.loc 1 1036 0
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	.loc 1 1041 0
	movl	$1, -52(%rbp)
	.loc 1 1043 0
	movq	-72(%rbp), %rax
	movsd	16(%rax), %xmm0
	movsd	%xmm0, -32(%rbp)
	.loc 1 1044 0
	movq	-72(%rbp), %rax
	movsd	24(%rax), %xmm0
	movsd	%xmm0, -24(%rbp)
	.loc 1 1045 0
	movq	-72(%rbp), %rax
	movsd	32(%rax), %xmm0
	movsd	%xmm0, -16(%rbp)
	.loc 1 1046 0
	movq	-80(%rbp), %rax
	movsd	24(%rax), %xmm0
	movsd	%xmm0, -48(%rbp)
	.loc 1 1048 0
	movsd	-32(%rbp), %xmm0
	movq	-80(%rbp), %rax
	movsd	(%rax), %xmm1
	subsd	%xmm1, %xmm0
	divsd	-48(%rbp), %xmm0
	movsd	%xmm0, -40(%rbp)
	.loc 1 1049 0
	movsd	-40(%rbp), %xmm0
	pxor	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	setnb	%al
	xorl	$1, %eax
	testb	%al, %al
	jne	.L247
	.loc 1 1049 0 is_stmt 0 discriminator 1
	movsd	.LC11(%rip), %xmm0
	ucomisd	-40(%rbp), %xmm0
	seta	%al
	xorl	$1, %eax
	testb	%al, %al
	je	.L248
.L247:
	.loc 1 1050 0 is_stmt 1
	movl	$0, -52(%rbp)
.L248:
	.loc 1 1053 0
	movsd	-24(%rbp), %xmm0
	movq	-80(%rbp), %rax
	movsd	8(%rax), %xmm1
	subsd	%xmm1, %xmm0
	divsd	-48(%rbp), %xmm0
	movsd	%xmm0, -40(%rbp)
	.loc 1 1054 0
	movsd	-40(%rbp), %xmm0
	pxor	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	setnb	%al
	xorl	$1, %eax
	testb	%al, %al
	jne	.L249
	.loc 1 1054 0 is_stmt 0 discriminator 1
	movsd	.LC11(%rip), %xmm0
	ucomisd	-40(%rbp), %xmm0
	seta	%al
	xorl	$1, %eax
	testb	%al, %al
	je	.L250
.L249:
	.loc 1 1055 0 is_stmt 1
	movl	$0, -52(%rbp)
.L250:
	.loc 1 1058 0
	movsd	-16(%rbp), %xmm0
	movq	-80(%rbp), %rax
	movsd	16(%rax), %xmm1
	subsd	%xmm1, %xmm0
	divsd	-48(%rbp), %xmm0
	movsd	%xmm0, -40(%rbp)
	.loc 1 1059 0
	movsd	-40(%rbp), %xmm0
	pxor	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	setnb	%al
	xorl	$1, %eax
	testb	%al, %al
	jne	.L251
	.loc 1 1059 0 is_stmt 0 discriminator 1
	movsd	.LC11(%rip), %xmm0
	ucomisd	-40(%rbp), %xmm0
	seta	%al
	xorl	$1, %eax
	testb	%al, %al
	je	.L252
.L251:
	.loc 1 1060 0 is_stmt 1
	movl	$0, -52(%rbp)
.L252:
	.loc 1 1072 0
	movl	-52(%rbp), %eax
	.loc 1 1073 0
	movq	-8(%rbp), %rdx
	xorq	%fs:40, %rdx
	je	.L254
	call	__stack_chk_fail@PLT
.L254:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE22:
	.size	ic_test, .-ic_test
	.globl	subindex
	.type	subindex, @function
subindex:
.LFB23:
	.loc 1 1083 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	pushq	%r12
	pushq	%rbx
	subq	$96, %rsp
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movq	%rdi, -88(%rbp)
	movq	%rsi, -96(%rbp)
	movl	%edx, -100(%rbp)
	.loc 1 1083 0
	movq	%fs:40, %rax
	movq	%rax, -24(%rbp)
	xorl	%eax, %eax
	.loc 1 1090 0
	movq	-88(%rbp), %rax
	movsd	16(%rax), %xmm0
	movsd	%xmm0, -48(%rbp)
	.loc 1 1091 0
	movq	-88(%rbp), %rax
	movsd	24(%rax), %xmm0
	movsd	%xmm0, -40(%rbp)
	.loc 1 1092 0
	movq	-88(%rbp), %rax
	movsd	32(%rax), %xmm0
	movsd	%xmm0, -32(%rbp)
	.loc 1 1094 0
	movq	-96(%rbp), %rax
	movsd	24(%rax), %xmm2
	movsd	%xmm2, -112(%rbp)
	.loc 1 1096 0
	movsd	-48(%rbp), %xmm0
	movq	-96(%rbp), %rax
	movsd	(%rax), %xmm1
	subsd	%xmm1, %xmm0
	divsd	%xmm2, %xmm0
	movsd	%xmm0, -72(%rbp)
	.loc 1 1097 0
	movsd	-72(%rbp), %xmm0
	pxor	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	setnb	%al
	xorl	$1, %eax
	testb	%al, %al
	jne	.L256
	.loc 1 1097 0 is_stmt 0 discriminator 2
	movsd	.LC11(%rip), %xmm0
	ucomisd	-72(%rbp), %xmm0
	seta	%al
	xorl	$1, %eax
	testb	%al, %al
	je	.L257
.L256:
	.loc 1 1097 0 discriminator 3
	movl	$5, %esi
	leaq	.LC9(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	call	abort@PLT
.L257:
	.loc 1 1098 0 is_stmt 1
	movsd	-72(%rbp), %xmm1
	movsd	.LC27(%rip), %xmm0
	mulsd	%xmm1, %xmm0
	call	floor@PLT
	cvttsd2si	%xmm0, %eax
	movl	%eax, -60(%rbp)
	.loc 1 1100 0
	movsd	-40(%rbp), %xmm0
	movq	-96(%rbp), %rax
	movsd	8(%rax), %xmm1
	subsd	%xmm1, %xmm0
	divsd	-112(%rbp), %xmm0
	movsd	%xmm0, -72(%rbp)
	.loc 1 1101 0
	movsd	-72(%rbp), %xmm0
	pxor	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	setnb	%al
	xorl	$1, %eax
	testb	%al, %al
	jne	.L258
	.loc 1 1101 0 is_stmt 0 discriminator 2
	movsd	.LC11(%rip), %xmm0
	ucomisd	-72(%rbp), %xmm0
	seta	%al
	xorl	$1, %eax
	testb	%al, %al
	je	.L259
.L258:
	.loc 1 1101 0 discriminator 3
	movl	$6, %esi
	leaq	.LC9(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	call	abort@PLT
.L259:
	.loc 1 1102 0 is_stmt 1
	movsd	-72(%rbp), %xmm1
	movsd	.LC27(%rip), %xmm0
	mulsd	%xmm1, %xmm0
	call	floor@PLT
	cvttsd2si	%xmm0, %eax
	movl	%eax, -56(%rbp)
	.loc 1 1104 0
	movsd	-32(%rbp), %xmm0
	movq	-96(%rbp), %rax
	movsd	16(%rax), %xmm1
	subsd	%xmm1, %xmm0
	divsd	-112(%rbp), %xmm0
	movsd	%xmm0, -72(%rbp)
	.loc 1 1105 0
	movsd	-72(%rbp), %xmm0
	pxor	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	setnb	%al
	xorl	$1, %eax
	testb	%al, %al
	jne	.L260
	.loc 1 1105 0 is_stmt 0 discriminator 2
	movsd	.LC11(%rip), %xmm0
	ucomisd	-72(%rbp), %xmm0
	seta	%al
	xorl	$1, %eax
	testb	%al, %al
	je	.L261
.L260:
	.loc 1 1105 0 discriminator 3
	movl	$7, %esi
	leaq	.LC9(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	call	abort@PLT
.L261:
	.loc 1 1106 0 is_stmt 1
	movsd	-72(%rbp), %xmm1
	movsd	.LC27(%rip), %xmm0
	mulsd	%xmm1, %xmm0
	call	floor@PLT
	cvttsd2si	%xmm0, %eax
	movl	%eax, -52(%rbp)
	.loc 1 1109 0
	movl	$0, %r12d
	.loc 1 1110 0
	movl	$0, %ebx
	jmp	.L262
.L264:
	.loc 1 1111 0
	movslq	%ebx, %rax
	movl	-60(%rbp,%rax,4), %eax
	andl	-100(%rbp), %eax
	testl	%eax, %eax
	je	.L263
	.loc 1 1112 0
	leal	1(%rbx), %eax
	movl	$8, %edx
	movl	%eax, %ecx
	sarl	%cl, %edx
	movl	%edx, %eax
	addl	%eax, %r12d
.L263:
	.loc 1 1110 0 discriminator 2
	addl	$1, %ebx
.L262:
	.loc 1 1110 0 is_stmt 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L264
	.loc 1 1114 0 is_stmt 1
	movl	%r12d, %eax
	.loc 1 1115 0
	movq	-24(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L266
	call	__stack_chk_fail@PLT
.L266:
	addq	$96, %rsp
	popq	%rbx
	popq	%r12
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE23:
	.size	subindex, .-subindex
	.globl	old_subindex
	.type	old_subindex, @function
old_subindex:
.LFB24:
	.loc 1 1120 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	pushq	%r12
	pushq	%rbx
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movq	%rdi, %rcx
	movq	%rsi, %rax
	movl	%edx, -36(%rbp)
	movq	%rcx, -32(%rbp)
	movq	%rax, -24(%rbp)
	.loc 1 1123 0
	movl	$0, %r12d
	.loc 1 1124 0
	movl	$0, %ebx
	jmp	.L268
.L270:
	.loc 1 1125 0
	movslq	%ebx, %rax
	movl	-32(%rbp,%rax,4), %eax
	andl	-36(%rbp), %eax
	testl	%eax, %eax
	je	.L269
	.loc 1 1126 0
	leal	1(%rbx), %eax
	movl	$8, %edx
	movl	%eax, %ecx
	sarl	%cl, %edx
	movl	%edx, %eax
	addl	%eax, %r12d
.L269:
	.loc 1 1124 0 discriminator 2
	addl	$1, %ebx
.L268:
	.loc 1 1124 0 is_stmt 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L270
	.loc 1 1127 0 is_stmt 1
	movl	%r12d, %eax
	.loc 1 1128 0
	popq	%rbx
	popq	%r12
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE24:
	.size	old_subindex, .-old_subindex
	.globl	hackcofm
	.type	hackcofm, @function
hackcofm:
.LFB25:
	.loc 1 1136 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$88, %rsp
	.cfi_offset 13, -24
	.cfi_offset 12, -32
	.cfi_offset 3, -40
	movq	%rdi, -104(%rbp)
	.loc 1 1136 0
	movq	%fs:40, %rax
	movq	%rax, -40(%rbp)
	xorl	%eax, %eax
	.loc 1 1144 0
	movq	-104(%rbp), %rax
	movzwl	(%rax), %eax
	cmpw	$2, %ax
	jne	.L273
	.loc 1 1145 0
	pxor	%xmm3, %xmm3
	movsd	%xmm3, -112(%rbp)
.LBB49:
	.loc 1 1146 0
	movl	$0, %ebx
	jmp	.L274
.L275:
	.loc 1 1146 0 is_stmt 0 discriminator 3
	movslq	%ebx, %rax
	pxor	%xmm0, %xmm0
	movsd	%xmm0, -64(%rbp,%rax,8)
	addl	$1, %ebx
.L274:
	.loc 1 1146 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L275
.LBE49:
	.loc 1 1147 0 is_stmt 1
	movl	$0, %r13d
	jmp	.L276
.L282:
	.loc 1 1148 0
	movq	-104(%rbp), %rax
	movslq	%r13d, %rdx
	addq	$6, %rdx
	movq	(%rax,%rdx,8), %r12
	.loc 1 1149 0
	testq	%r12, %r12
	je	.L277
	.loc 1 1150 0
	movq	%r12, %rdi
	call	hackcofm
	movapd	%xmm0, %xmm7
	.loc 1 1151 0
	movsd	-112(%rbp), %xmm2
	addsd	%xmm0, %xmm2
	movsd	%xmm2, -112(%rbp)
.LBB50:
	.loc 1 1152 0
	movl	$0, %ebx
	jmp	.L278
.L279:
	.loc 1 1152 0 is_stmt 0 discriminator 3
	movslq	%ebx, %rax
	addq	$2, %rax
	movsd	(%r12,%rax,8), %xmm0
	movapd	%xmm7, %xmm4
	mulsd	%xmm4, %xmm0
	movslq	%ebx, %rax
	movsd	%xmm0, -96(%rbp,%rax,8)
	addl	$1, %ebx
.L278:
	.loc 1 1152 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L279
.LBE50:
.LBB51:
	.loc 1 1153 0 is_stmt 1
	movl	$0, %ebx
	jmp	.L280
.L281:
	.loc 1 1153 0 is_stmt 0 discriminator 3
	movslq	%ebx, %rax
	movsd	-64(%rbp,%rax,8), %xmm1
	movslq	%ebx, %rax
	movsd	-96(%rbp,%rax,8), %xmm0
	addsd	%xmm1, %xmm0
	movslq	%ebx, %rax
	movsd	%xmm0, -64(%rbp,%rax,8)
	addl	$1, %ebx
.L280:
	.loc 1 1153 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L281
.L277:
.LBE51:
	.loc 1 1147 0 is_stmt 1 discriminator 2
	addl	$1, %r13d
.L276:
	.loc 1 1147 0 is_stmt 0 discriminator 1
	cmpl	$7, %r13d
	jle	.L282
	.loc 1 1157 0 is_stmt 1
	movq	-104(%rbp), %rax
	movsd	-112(%rbp), %xmm5
	movsd	%xmm5, 8(%rax)
	.loc 1 1159 0
	movsd	-64(%rbp), %xmm0
	movq	-104(%rbp), %rax
	movsd	%xmm0, 16(%rax)
	.loc 1 1160 0
	movsd	-56(%rbp), %xmm0
	movq	-104(%rbp), %rax
	movsd	%xmm0, 24(%rax)
	.loc 1 1161 0
	movsd	-48(%rbp), %xmm0
	movq	-104(%rbp), %rax
	movsd	%xmm0, 32(%rax)
.LBB52:
	.loc 1 1162 0
	movl	$0, %ebx
	jmp	.L283
.L284:
	.loc 1 1162 0 is_stmt 0 discriminator 3
	movq	-104(%rbp), %rax
	movslq	%ebx, %rdx
	addq	$2, %rdx
	movsd	(%rax,%rdx,8), %xmm0
	movq	-104(%rbp), %rax
	movsd	8(%rax), %xmm1
	divsd	%xmm1, %xmm0
	movq	-104(%rbp), %rax
	movslq	%ebx, %rdx
	addq	$2, %rdx
	movsd	%xmm0, (%rax,%rdx,8)
	addl	$1, %ebx
.L283:
	.loc 1 1162 0 discriminator 1
	cmpl	$2, %ebx
	jle	.L284
.LBE52:
	.loc 1 1166 0 is_stmt 1
	movsd	-112(%rbp), %xmm0
	jmp	.L286
.L273:
	.loc 1 1170 0
	movq	-104(%rbp), %rax
	movsd	8(%rax), %xmm6
	.loc 1 1174 0
	movapd	%xmm6, %xmm0
.L286:
	.loc 1 1175 0 discriminator 1
	movq	-40(%rbp), %rax
	xorq	%fs:40, %rax
	je	.L287
	.loc 1 1175 0 is_stmt 0
	call	__stack_chk_fail@PLT
.L287:
	addq	$88, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE25:
	.size	hackcofm, .-hackcofm
	.globl	printtree
	.type	printtree, @function
printtree:
.LFB26:
	.loc 1 1181 0 is_stmt 1
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	.loc 1 1181 0
	movq	-8(%rbp), %rax
	movl	$0, %esi
	movq	%rax, %rdi
	call	ptree
	.loc 1 1182 0
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE26:
	.size	printtree, .-printtree
	.section	.rodata
.LC28:
	.string	"%2d BODY@%x %f, %f, %f\n"
.LC29:
	.string	"%2d CELL@%x %f, %f, %f\n"
.LC30:
	.string	"%2d NULL TREE\n"
	.text
	.globl	ptree
	.type	ptree, @function
ptree:
.LFB27:
	.loc 1 1185 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	.loc 1 1189 0
	cmpq	$0, -24(%rbp)
	je	.L290
	.loc 1 1190 0
	movq	-24(%rbp), %rax
	movzwl	(%rax), %eax
	cmpw	$1, %ax
	jne	.L291
	.loc 1 1191 0
	movq	-24(%rbp), %rax
	movsd	32(%rax), %xmm1
	movq	-24(%rbp), %rax
	movsd	24(%rax), %xmm0
	movq	-24(%rbp), %rax
	movq	16(%rax), %rcx
	movq	-24(%rbp), %rdx
	movl	-28(%rbp), %eax
	movapd	%xmm1, %xmm2
	movapd	%xmm0, %xmm1
	movq	%rcx, -40(%rbp)
	movsd	-40(%rbp), %xmm0
	movl	%eax, %esi
	leaq	.LC28(%rip), %rdi
	movl	$3, %eax
	call	printf@PLT
	.loc 1 1205 0
	jmp	.L296
.L291:
.LBB53:
	.loc 1 1196 0
	movq	-24(%rbp), %rax
	movsd	32(%rax), %xmm1
	movq	-24(%rbp), %rax
	movsd	24(%rax), %xmm0
	movq	-24(%rbp), %rax
	movq	16(%rax), %rcx
	movq	-24(%rbp), %rdx
	movl	-28(%rbp), %eax
	movapd	%xmm1, %xmm2
	movapd	%xmm0, %xmm1
	movq	%rcx, -40(%rbp)
	movsd	-40(%rbp), %xmm0
	movl	%eax, %esi
	leaq	.LC29(%rip), %rdi
	movl	$3, %eax
	call	printf@PLT
	.loc 1 1197 0
	movl	$0, -12(%rbp)
	jmp	.L293
.L294:
	.loc 1 1198 0 discriminator 3
	movq	-24(%rbp), %rax
	movl	-12(%rbp), %edx
	movslq	%edx, %rdx
	addq	$6, %rdx
	movq	(%rax,%rdx,8), %rax
	movq	%rax, -8(%rbp)
	.loc 1 1199 0 discriminator 3
	movl	-28(%rbp), %eax
	leal	1(%rax), %edx
	movq	-8(%rbp), %rax
	movl	%edx, %esi
	movq	%rax, %rdi
	call	ptree
	.loc 1 1197 0 discriminator 3
	addl	$1, -12(%rbp)
.L293:
	.loc 1 1197 0 is_stmt 0 discriminator 1
	cmpl	$7, -12(%rbp)
	jle	.L294
.LBE53:
	.loc 1 1205 0 is_stmt 1
	jmp	.L296
.L290:
	.loc 1 1204 0
	movl	-28(%rbp), %eax
	movl	%eax, %esi
	leaq	.LC30(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
.L296:
	.loc 1 1205 0
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE27:
	.size	ptree, .-ptree
	.globl	dis_number
	.type	dis_number, @function
dis_number:
.LFB28:
	.loc 1 1218 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	.loc 1 1219 0
	movl	nbody(%rip), %eax
	cvtsi2sd	%eax, %xmm0
	movl	NumNodes(%rip), %eax
	cvtsi2sd	%eax, %xmm1
	divsd	%xmm1, %xmm0
	call	ceil@PLT
	cvttsd2si	%xmm0, %eax
	movl	%eax, -4(%rbp)
	.loc 1 1221 0
	movl	-4(%rbp), %edx
	movq	-24(%rbp), %rax
	movl	$-1, %esi
	movq	%rax, %rdi
	call	dis2_number
	.loc 1 1222 0
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE28:
	.size	dis_number, .-dis_number
	.globl	dis2_number
	.type	dis2_number, @function
dis2_number:
.LFB29:
	.loc 1 1225 0
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	pushq	%r12
	pushq	%rbx
	subq	$16, %rsp
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	%edx, -32(%rbp)
	.loc 1 1227 0
	cmpq	$0, -24(%rbp)
	jne	.L299
	.loc 1 1228 0
	movl	-28(%rbp), %eax
	jmp	.L300
.L299:
	.loc 1 1230 0
	movq	-24(%rbp), %rax
	movzwl	(%rax), %eax
	cmpw	$1, %ax
	jne	.L301
	.loc 1 1231 0
	movl	-28(%rbp), %eax
	addl	$1, %eax
	cltd
	idivl	-32(%rbp)
	movl	%eax, %edx
	movq	-24(%rbp), %rax
	movl	%edx, 44(%rax)
	.loc 1 1232 0
	movl	-28(%rbp), %eax
	addl	$1, %eax
	jmp	.L300
.L301:
.LBB54:
	.loc 1 1240 0
	movl	$0, %ebx
	jmp	.L302
.L303:
	.loc 1 1241 0 discriminator 3
	movq	-24(%rbp), %rax
	movslq	%ebx, %rdx
	addq	$6, %rdx
	movq	(%rax,%rdx,8), %r12
	.loc 1 1242 0 discriminator 3
	movl	-32(%rbp), %edx
	movl	-28(%rbp), %eax
	movl	%eax, %esi
	movq	%r12, %rdi
	call	dis2_number
	movl	%eax, -28(%rbp)
	.loc 1 1240 0 discriminator 3
	addl	$1, %ebx
.L302:
	.loc 1 1240 0 is_stmt 0 discriminator 1
	cmpl	$7, %ebx
	jle	.L303
	.loc 1 1246 0 is_stmt 1
	movl	-28(%rbp), %eax
.L300:
.LBE54:
	.loc 1 1248 0
	addq	$16, %rsp
	popq	%rbx
	popq	%r12
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE29:
	.size	dis2_number, .-dis2_number
	.section	.rodata
	.align 8
.LC1:
	.long	0
	.long	-1073741824
	.align 8
.LC2:
	.long	0
	.long	1074790400
	.align 8
.LC6:
	.long	2576980378
	.long	1065982361
	.align 8
.LC7:
	.long	1546188227
	.long	1073742479
	.align 8
.LC8:
	.long	0
	.long	1079951360
	.align 8
.LC10:
	.long	2134057426
	.long	1071831420
	.align 8
.LC11:
	.long	0
	.long	1072693248
	.align 8
.LC13:
	.long	3642132267
	.long	1072691150
	.align 8
.LC14:
	.long	1431655765
	.long	-1075489451
	.align 8
.LC15:
	.long	2576980378
	.long	1069128089
	.align 8
.LC16:
	.long	0
	.long	1074528256
	.align 8
.LC17:
	.long	1719614413
	.long	1073127582
	.align 8
.LC18:
	.long	0
	.long	1070596096
	.align 8
.LC19:
	.long	0
	.long	-1074790400
	.align 8
.LC20:
	.long	2576980378
	.long	1064933785
	.align 16
.LC21:
	.long	4294967295
	.long	2147483647
	.long	0
	.long	0
	.align 8
.LC22:
	.long	0
	.long	1076101120
	.align 8
.LC23:
	.long	0
	.long	1086556160
	.align 8
.LC24:
	.long	1202590844
	.long	1063549665
	.align 8
.LC25:
	.long	0
	.long	1083129856
	.align 8
.LC26:
	.long	0
	.long	1071644672
	.align 8
.LC27:
	.long	0
	.long	1104150528
	.text
.Letext0:
	.file 2 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h"
	.file 3 "/usr/include/x86_64-linux-gnu/bits/types.h"
	.file 4 "/usr/include/x86_64-linux-gnu/bits/libio.h"
	.file 5 "/usr/include/stdio.h"
	.file 6 "../olden/bh/src/defs.h"
	.file 7 "../olden/bh/src/stdinc.h"
	.file 8 "../olden/bh/src/vectmath.h"
	.section	.debug_info,"",@progbits
.Ldebug_info0:
	.long	0x1ed4
	.value	0x4
	.long	.Ldebug_abbrev0
	.byte	0x8
	.uleb128 0x1
	.long	.LASF183
	.byte	0xc
	.long	.LASF184
	.long	.LASF185
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.long	.Ldebug_line0
	.uleb128 0x2
	.long	.LASF7
	.byte	0x2
	.byte	0xd8
	.long	0x38
	.uleb128 0x3
	.byte	0x8
	.byte	0x7
	.long	.LASF0
	.uleb128 0x3
	.byte	0x1
	.byte	0x8
	.long	.LASF1
	.uleb128 0x3
	.byte	0x2
	.byte	0x7
	.long	.LASF2
	.uleb128 0x3
	.byte	0x4
	.byte	0x7
	.long	.LASF3
	.uleb128 0x3
	.byte	0x1
	.byte	0x6
	.long	.LASF4
	.uleb128 0x3
	.byte	0x2
	.byte	0x5
	.long	.LASF5
	.uleb128 0x4
	.byte	0x4
	.byte	0x5
	.string	"int"
	.uleb128 0x3
	.byte	0x8
	.byte	0x5
	.long	.LASF6
	.uleb128 0x2
	.long	.LASF8
	.byte	0x3
	.byte	0x8c
	.long	0x69
	.uleb128 0x2
	.long	.LASF9
	.byte	0x3
	.byte	0x8d
	.long	0x69
	.uleb128 0x5
	.byte	0x8
	.uleb128 0x6
	.byte	0x8
	.long	0x8e
	.uleb128 0x3
	.byte	0x1
	.byte	0x6
	.long	.LASF10
	.uleb128 0x7
	.long	.LASF40
	.byte	0xd8
	.byte	0x4
	.byte	0xf5
	.long	0x215
	.uleb128 0x8
	.long	.LASF11
	.byte	0x4
	.byte	0xf6
	.long	0x62
	.byte	0
	.uleb128 0x8
	.long	.LASF12
	.byte	0x4
	.byte	0xfb
	.long	0x88
	.byte	0x8
	.uleb128 0x8
	.long	.LASF13
	.byte	0x4
	.byte	0xfc
	.long	0x88
	.byte	0x10
	.uleb128 0x8
	.long	.LASF14
	.byte	0x4
	.byte	0xfd
	.long	0x88
	.byte	0x18
	.uleb128 0x8
	.long	.LASF15
	.byte	0x4
	.byte	0xfe
	.long	0x88
	.byte	0x20
	.uleb128 0x8
	.long	.LASF16
	.byte	0x4
	.byte	0xff
	.long	0x88
	.byte	0x28
	.uleb128 0x9
	.long	.LASF17
	.byte	0x4
	.value	0x100
	.long	0x88
	.byte	0x30
	.uleb128 0x9
	.long	.LASF18
	.byte	0x4
	.value	0x101
	.long	0x88
	.byte	0x38
	.uleb128 0x9
	.long	.LASF19
	.byte	0x4
	.value	0x102
	.long	0x88
	.byte	0x40
	.uleb128 0x9
	.long	.LASF20
	.byte	0x4
	.value	0x104
	.long	0x88
	.byte	0x48
	.uleb128 0x9
	.long	.LASF21
	.byte	0x4
	.value	0x105
	.long	0x88
	.byte	0x50
	.uleb128 0x9
	.long	.LASF22
	.byte	0x4
	.value	0x106
	.long	0x88
	.byte	0x58
	.uleb128 0x9
	.long	.LASF23
	.byte	0x4
	.value	0x108
	.long	0x24d
	.byte	0x60
	.uleb128 0x9
	.long	.LASF24
	.byte	0x4
	.value	0x10a
	.long	0x253
	.byte	0x68
	.uleb128 0x9
	.long	.LASF25
	.byte	0x4
	.value	0x10c
	.long	0x62
	.byte	0x70
	.uleb128 0x9
	.long	.LASF26
	.byte	0x4
	.value	0x110
	.long	0x62
	.byte	0x74
	.uleb128 0x9
	.long	.LASF27
	.byte	0x4
	.value	0x112
	.long	0x70
	.byte	0x78
	.uleb128 0x9
	.long	.LASF28
	.byte	0x4
	.value	0x116
	.long	0x46
	.byte	0x80
	.uleb128 0x9
	.long	.LASF29
	.byte	0x4
	.value	0x117
	.long	0x54
	.byte	0x82
	.uleb128 0x9
	.long	.LASF30
	.byte	0x4
	.value	0x118
	.long	0x259
	.byte	0x83
	.uleb128 0x9
	.long	.LASF31
	.byte	0x4
	.value	0x11c
	.long	0x269
	.byte	0x88
	.uleb128 0x9
	.long	.LASF32
	.byte	0x4
	.value	0x125
	.long	0x7b
	.byte	0x90
	.uleb128 0x9
	.long	.LASF33
	.byte	0x4
	.value	0x12d
	.long	0x86
	.byte	0x98
	.uleb128 0x9
	.long	.LASF34
	.byte	0x4
	.value	0x12e
	.long	0x86
	.byte	0xa0
	.uleb128 0x9
	.long	.LASF35
	.byte	0x4
	.value	0x12f
	.long	0x86
	.byte	0xa8
	.uleb128 0x9
	.long	.LASF36
	.byte	0x4
	.value	0x130
	.long	0x86
	.byte	0xb0
	.uleb128 0x9
	.long	.LASF37
	.byte	0x4
	.value	0x132
	.long	0x2d
	.byte	0xb8
	.uleb128 0x9
	.long	.LASF38
	.byte	0x4
	.value	0x133
	.long	0x62
	.byte	0xc0
	.uleb128 0x9
	.long	.LASF39
	.byte	0x4
	.value	0x135
	.long	0x26f
	.byte	0xc4
	.byte	0
	.uleb128 0xa
	.long	.LASF186
	.byte	0x4
	.byte	0x9a
	.uleb128 0x7
	.long	.LASF41
	.byte	0x18
	.byte	0x4
	.byte	0xa0
	.long	0x24d
	.uleb128 0x8
	.long	.LASF42
	.byte	0x4
	.byte	0xa1
	.long	0x24d
	.byte	0
	.uleb128 0x8
	.long	.LASF43
	.byte	0x4
	.byte	0xa2
	.long	0x253
	.byte	0x8
	.uleb128 0x8
	.long	.LASF44
	.byte	0x4
	.byte	0xa6
	.long	0x62
	.byte	0x10
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x21c
	.uleb128 0x6
	.byte	0x8
	.long	0x95
	.uleb128 0xb
	.long	0x8e
	.long	0x269
	.uleb128 0xc
	.long	0x38
	.byte	0
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x215
	.uleb128 0xb
	.long	0x8e
	.long	0x27f
	.uleb128 0xc
	.long	0x38
	.byte	0x13
	.byte	0
	.uleb128 0xd
	.long	.LASF187
	.uleb128 0xe
	.long	.LASF45
	.byte	0x4
	.value	0x13f
	.long	0x27f
	.uleb128 0xe
	.long	.LASF46
	.byte	0x4
	.value	0x140
	.long	0x27f
	.uleb128 0xe
	.long	.LASF47
	.byte	0x4
	.value	0x141
	.long	0x27f
	.uleb128 0xf
	.long	.LASF48
	.byte	0x5
	.byte	0x87
	.long	0x253
	.uleb128 0xf
	.long	.LASF49
	.byte	0x5
	.byte	0x88
	.long	0x253
	.uleb128 0xf
	.long	.LASF50
	.byte	0x5
	.byte	0x89
	.long	0x253
	.uleb128 0x10
	.long	.LASF51
	.byte	0x6
	.byte	0x14
	.long	0x62
	.uleb128 0x9
	.byte	0x3
	.quad	NumNodes
	.uleb128 0x3
	.byte	0x4
	.byte	0x4
	.long	.LASF52
	.uleb128 0x3
	.byte	0x8
	.byte	0x4
	.long	.LASF53
	.uleb128 0x3
	.byte	0x8
	.byte	0x5
	.long	.LASF54
	.uleb128 0x2
	.long	.LASF55
	.byte	0x7
	.byte	0x2a
	.long	0x5b
	.uleb128 0x2
	.long	.LASF56
	.byte	0x7
	.byte	0x42
	.long	0x2e5
	.uleb128 0x2
	.long	.LASF57
	.byte	0x8
	.byte	0x19
	.long	0x314
	.uleb128 0xb
	.long	0x2fe
	.long	0x324
	.uleb128 0xc
	.long	0x38
	.byte	0x2
	.byte	0
	.uleb128 0x7
	.long	.LASF58
	.byte	0x30
	.byte	0x6
	.byte	0x3a
	.long	0x36d
	.uleb128 0x8
	.long	.LASF59
	.byte	0x6
	.byte	0x3b
	.long	0x5b
	.byte	0
	.uleb128 0x8
	.long	.LASF60
	.byte	0x6
	.byte	0x3c
	.long	0x2fe
	.byte	0x8
	.uleb128 0x11
	.string	"pos"
	.byte	0x6
	.byte	0x3d
	.long	0x309
	.byte	0x10
	.uleb128 0x8
	.long	.LASF61
	.byte	0x6
	.byte	0x3e
	.long	0x62
	.byte	0x28
	.uleb128 0x8
	.long	.LASF62
	.byte	0x6
	.byte	0x3f
	.long	0x62
	.byte	0x2c
	.byte	0
	.uleb128 0x2
	.long	.LASF63
	.byte	0x6
	.byte	0x43
	.long	0x378
	.uleb128 0x6
	.byte	0x8
	.long	0x324
	.uleb128 0x2
	.long	.LASF64
	.byte	0x6
	.byte	0x58
	.long	0x389
	.uleb128 0x6
	.byte	0x8
	.long	0x38f
	.uleb128 0x7
	.long	.LASF65
	.byte	0x90
	.byte	0x6
	.byte	0x5a
	.long	0x420
	.uleb128 0x8
	.long	.LASF59
	.byte	0x6
	.byte	0x5b
	.long	0x5b
	.byte	0
	.uleb128 0x8
	.long	.LASF60
	.byte	0x6
	.byte	0x5c
	.long	0x2fe
	.byte	0x8
	.uleb128 0x11
	.string	"pos"
	.byte	0x6
	.byte	0x5d
	.long	0x309
	.byte	0x10
	.uleb128 0x8
	.long	.LASF61
	.byte	0x6
	.byte	0x5e
	.long	0x62
	.byte	0x28
	.uleb128 0x8
	.long	.LASF62
	.byte	0x6
	.byte	0x5f
	.long	0x62
	.byte	0x2c
	.uleb128 0x11
	.string	"vel"
	.byte	0x6
	.byte	0x63
	.long	0x309
	.byte	0x30
	.uleb128 0x11
	.string	"acc"
	.byte	0x6
	.byte	0x64
	.long	0x309
	.byte	0x48
	.uleb128 0x8
	.long	.LASF66
	.byte	0x6
	.byte	0x65
	.long	0x309
	.byte	0x60
	.uleb128 0x11
	.string	"phi"
	.byte	0x6
	.byte	0x66
	.long	0x2fe
	.byte	0x78
	.uleb128 0x8
	.long	.LASF67
	.byte	0x6
	.byte	0x67
	.long	0x37e
	.byte	0x80
	.uleb128 0x8
	.long	.LASF68
	.byte	0x6
	.byte	0x68
	.long	0x37e
	.byte	0x88
	.byte	0
	.uleb128 0x2
	.long	.LASF69
	.byte	0x6
	.byte	0x82
	.long	0x42b
	.uleb128 0x6
	.byte	0x8
	.long	0x431
	.uleb128 0x7
	.long	.LASF70
	.byte	0x78
	.byte	0x6
	.byte	0x84
	.long	0x492
	.uleb128 0x8
	.long	.LASF59
	.byte	0x6
	.byte	0x85
	.long	0x5b
	.byte	0
	.uleb128 0x8
	.long	.LASF60
	.byte	0x6
	.byte	0x86
	.long	0x2fe
	.byte	0x8
	.uleb128 0x11
	.string	"pos"
	.byte	0x6
	.byte	0x87
	.long	0x309
	.byte	0x10
	.uleb128 0x8
	.long	.LASF61
	.byte	0x6
	.byte	0x88
	.long	0x62
	.byte	0x28
	.uleb128 0x8
	.long	.LASF62
	.byte	0x6
	.byte	0x89
	.long	0x62
	.byte	0x2c
	.uleb128 0x8
	.long	.LASF71
	.byte	0x6
	.byte	0x8d
	.long	0x492
	.byte	0x30
	.uleb128 0x8
	.long	.LASF67
	.byte	0x6
	.byte	0x8e
	.long	0x420
	.byte	0x70
	.byte	0
	.uleb128 0xb
	.long	0x36d
	.long	0x4a2
	.uleb128 0xc
	.long	0x38
	.byte	0x7
	.byte	0
	.uleb128 0x12
	.value	0x428
	.byte	0x6
	.byte	0x9a
	.long	0x4e9
	.uleb128 0x8
	.long	.LASF72
	.byte	0x6
	.byte	0x9b
	.long	0x314
	.byte	0
	.uleb128 0x8
	.long	.LASF73
	.byte	0x6
	.byte	0x9c
	.long	0x2fe
	.byte	0x18
	.uleb128 0x8
	.long	.LASF74
	.byte	0x6
	.byte	0x9d
	.long	0x36d
	.byte	0x20
	.uleb128 0x8
	.long	.LASF75
	.byte	0x6
	.byte	0x9e
	.long	0x4e9
	.byte	0x28
	.uleb128 0x13
	.long	.LASF76
	.byte	0x6
	.byte	0x9f
	.long	0x4e9
	.value	0x228
	.byte	0
	.uleb128 0xb
	.long	0x37e
	.long	0x4f9
	.uleb128 0xc
	.long	0x38
	.byte	0x3f
	.byte	0
	.uleb128 0x2
	.long	.LASF77
	.byte	0x6
	.byte	0xa0
	.long	0x4a2
	.uleb128 0x2
	.long	.LASF78
	.byte	0x6
	.byte	0xa0
	.long	0x50f
	.uleb128 0x6
	.byte	0x8
	.long	0x4a2
	.uleb128 0x14
	.byte	0x10
	.byte	0x6
	.byte	0xb5
	.long	0x535
	.uleb128 0x11
	.string	"xp"
	.byte	0x6
	.byte	0xb6
	.long	0x535
	.byte	0
	.uleb128 0x11
	.string	"inb"
	.byte	0x6
	.byte	0xb7
	.long	0x2f3
	.byte	0xc
	.byte	0
	.uleb128 0xb
	.long	0x62
	.long	0x545
	.uleb128 0xc
	.long	0x38
	.byte	0x2
	.byte	0
	.uleb128 0x2
	.long	.LASF79
	.byte	0x6
	.byte	0xb8
	.long	0x515
	.uleb128 0x10
	.long	.LASF74
	.byte	0x6
	.byte	0xc3
	.long	0x36d
	.uleb128 0x9
	.byte	0x3
	.quad	root
	.uleb128 0x10
	.long	.LASF72
	.byte	0x6
	.byte	0xc9
	.long	0x309
	.uleb128 0x9
	.byte	0x3
	.quad	rmin
	.uleb128 0x10
	.long	.LASF80
	.byte	0x6
	.byte	0xcb
	.long	0x2fe
	.uleb128 0x9
	.byte	0x3
	.quad	xxxrsize
	.uleb128 0xf
	.long	.LASF81
	.byte	0x6
	.byte	0xee
	.long	0x62
	.uleb128 0x15
	.long	0x58f
	.byte	0x1
	.byte	0x10
	.uleb128 0x9
	.byte	0x3
	.quad	nbody
	.uleb128 0xf
	.long	.LASF82
	.byte	0x1
	.byte	0x15
	.long	0x62
	.uleb128 0x14
	.byte	0x40
	.byte	0x1
	.byte	0x1e
	.long	0x5ef
	.uleb128 0x11
	.string	"cmr"
	.byte	0x1
	.byte	0x1f
	.long	0x309
	.byte	0
	.uleb128 0x11
	.string	"cmv"
	.byte	0x1
	.byte	0x20
	.long	0x309
	.byte	0x18
	.uleb128 0x8
	.long	.LASF83
	.byte	0x1
	.byte	0x21
	.long	0x37e
	.byte	0x30
	.uleb128 0x8
	.long	.LASF84
	.byte	0x1
	.byte	0x22
	.long	0x37e
	.byte	0x38
	.byte	0
	.uleb128 0x2
	.long	.LASF85
	.byte	0x1
	.byte	0x23
	.long	0x5b6
	.uleb128 0x10
	.long	.LASF86
	.byte	0x1
	.byte	0x34
	.long	0x62
	.uleb128 0x9
	.byte	0x3
	.quad	arg1
	.uleb128 0xe
	.long	.LASF87
	.byte	0x1
	.value	0x11a
	.long	0x62
	.uleb128 0x16
	.long	.LASF88
	.byte	0x1
	.value	0x157
	.long	0x36d
	.uleb128 0x9
	.byte	0x3
	.quad	cp_free_list
	.uleb128 0x16
	.long	.LASF89
	.byte	0x1
	.value	0x158
	.long	0x37e
	.uleb128 0x9
	.byte	0x3
	.quad	bp_free_list
	.uleb128 0x17
	.byte	0x40
	.byte	0x1
	.value	0x1eb
	.long	0x685
	.uleb128 0x9
	.long	.LASF90
	.byte	0x1
	.value	0x1ec
	.long	0x37e
	.byte	0
	.uleb128 0x9
	.long	.LASF91
	.byte	0x1
	.value	0x1ed
	.long	0x309
	.byte	0x8
	.uleb128 0x9
	.long	.LASF92
	.byte	0x1
	.value	0x1ee
	.long	0x2fe
	.byte	0x20
	.uleb128 0x9
	.long	.LASF93
	.byte	0x1
	.value	0x1ef
	.long	0x309
	.byte	0x28
	.byte	0
	.uleb128 0x18
	.long	.LASF94
	.byte	0x1
	.value	0x1f0
	.long	0x647
	.uleb128 0x19
	.long	.LASF101
	.byte	0x1
	.value	0x4c8
	.long	0x62
	.quad	.LFB29
	.quad	.LFE29-.LFB29
	.uleb128 0x1
	.byte	0x9c
	.long	0x709
	.uleb128 0x1a
	.string	"n"
	.byte	0x1
	.value	0x4c8
	.long	0x36d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1b
	.long	.LASF95
	.byte	0x1
	.value	0x4c8
	.long	0x62
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1b
	.long	.LASF96
	.byte	0x1
	.value	0x4c8
	.long	0x62
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1c
	.quad	.LBB54
	.quad	.LBE54-.LBB54
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x4d4
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x1d
	.string	"r"
	.byte	0x1
	.value	0x4d5
	.long	0x36d
	.uleb128 0x1
	.byte	0x5c
	.byte	0
	.byte	0
	.uleb128 0x1e
	.long	.LASF97
	.byte	0x1
	.value	0x4c1
	.quad	.LFB28
	.quad	.LFE28-.LFB28
	.uleb128 0x1
	.byte	0x9c
	.long	0x744
	.uleb128 0x1a
	.string	"n"
	.byte	0x1
	.value	0x4c1
	.long	0x36d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1f
	.long	.LASF96
	.byte	0x1
	.value	0x4c3
	.long	0x62
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x1e
	.long	.LASF98
	.byte	0x1
	.value	0x4a0
	.quad	.LFB27
	.quad	.LFE27-.LFB27
	.uleb128 0x1
	.byte	0x9c
	.long	0x7ab
	.uleb128 0x1a
	.string	"n"
	.byte	0x1
	.value	0x4a0
	.long	0x36d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1b
	.long	.LASF99
	.byte	0x1
	.value	0x4a0
	.long	0x62
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1d
	.string	"r"
	.byte	0x1
	.value	0x4a2
	.long	0x36d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1c
	.quad	.LBB53
	.quad	.LBE53-.LBB53
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x4aa
	.long	0x62
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.byte	0
	.uleb128 0x1e
	.long	.LASF100
	.byte	0x1
	.value	0x49c
	.quad	.LFB26
	.quad	.LFE26-.LFB26
	.uleb128 0x1
	.byte	0x9c
	.long	0x7d7
	.uleb128 0x1a
	.string	"n"
	.byte	0x1
	.value	0x49c
	.long	0x36d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x19
	.long	.LASF102
	.byte	0x1
	.value	0x46f
	.long	0x2fe
	.quad	.LFB25
	.quad	.LFE25-.LFB25
	.uleb128 0x1
	.byte	0x9c
	.long	0x8dc
	.uleb128 0x1a
	.string	"q"
	.byte	0x1
	.value	0x46f
	.long	0x36d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x471
	.long	0x62
	.uleb128 0x1
	.byte	0x5d
	.uleb128 0x1d
	.string	"r"
	.byte	0x1
	.value	0x472
	.long	0x36d
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x1f
	.long	.LASF103
	.byte	0x1
	.value	0x473
	.long	0x309
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x1f
	.long	.LASF104
	.byte	0x1
	.value	0x474
	.long	0x309
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x20
	.string	"mq"
	.byte	0x1
	.value	0x475
	.long	0x2fe
	.uleb128 0x1d
	.string	"mr"
	.byte	0x1
	.value	0x475
	.long	0x2fe
	.uleb128 0x1
	.byte	0x68
	.uleb128 0x21
	.quad	.LBB49
	.quad	.LBE49-.LBB49
	.long	0x879
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x47a
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x21
	.quad	.LBB50
	.quad	.LBE50-.LBB50
	.long	0x89b
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x480
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x21
	.quad	.LBB51
	.quad	.LBE51-.LBB51
	.long	0x8bd
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x481
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x1c
	.quad	.LBB52
	.quad	.LBE52-.LBB52
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x48a
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.byte	0
	.uleb128 0x22
	.long	.LASF105
	.byte	0x1
	.value	0x45f
	.long	0x62
	.quad	.LFB24
	.quad	.LFE24-.LFB24
	.uleb128 0x1
	.byte	0x9c
	.long	0x932
	.uleb128 0x1a
	.string	"ic"
	.byte	0x1
	.value	0x45f
	.long	0x545
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1a
	.string	"l"
	.byte	0x1
	.value	0x45f
	.long	0x62
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x461
	.long	0x62
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x1d
	.string	"k"
	.byte	0x1
	.value	0x461
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x19
	.long	.LASF106
	.byte	0x1
	.value	0x43a
	.long	0x62
	.quad	.LFB23
	.quad	.LFE23-.LFB23
	.uleb128 0x1
	.byte	0x9c
	.long	0x9e7
	.uleb128 0x1a
	.string	"p"
	.byte	0x1
	.value	0x43a
	.long	0x37e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x1a
	.string	"t"
	.byte	0x1
	.value	0x43a
	.long	0x504
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x1a
	.string	"l"
	.byte	0x1
	.value	0x43a
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x43c
	.long	0x62
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x1d
	.string	"k"
	.byte	0x1
	.value	0x43c
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x23
	.long	.LASF73
	.byte	0x1
	.value	0x43d
	.long	0x2fe
	.uleb128 0x1d
	.string	"xsc"
	.byte	0x1
	.value	0x43e
	.long	0x2e5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x24
	.long	.LASF108
	.byte	0x1
	.value	0x43e
	.long	0x2e5
	.long	0x9c8
	.uleb128 0x25
	.long	0x2e5
	.byte	0
	.uleb128 0x1d
	.string	"xp"
	.byte	0x1
	.value	0x43f
	.long	0x535
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x1d
	.string	"pos"
	.byte	0x1
	.value	0x440
	.long	0x309
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0x19
	.long	.LASF107
	.byte	0x1
	.value	0x40b
	.long	0x62
	.quad	.LFB22
	.quad	.LFE22-.LFB22
	.uleb128 0x1
	.byte	0x9c
	.long	0xa79
	.uleb128 0x1a
	.string	"p"
	.byte	0x1
	.value	0x40b
	.long	0x37e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x1a
	.string	"t"
	.byte	0x1
	.value	0x40b
	.long	0x504
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x1d
	.string	"xsc"
	.byte	0x1
	.value	0x40d
	.long	0x2e5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x1f
	.long	.LASF73
	.byte	0x1
	.value	0x40d
	.long	0x2e5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x24
	.long	.LASF108
	.byte	0x1
	.value	0x40d
	.long	0x2e5
	.long	0xa59
	.uleb128 0x25
	.long	0x2e5
	.byte	0
	.uleb128 0x1f
	.long	.LASF109
	.byte	0x1
	.value	0x40e
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x1d
	.string	"pos"
	.byte	0x1
	.value	0x40f
	.long	0x309
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0x19
	.long	.LASF110
	.byte	0x1
	.value	0x3d9
	.long	0x545
	.quad	.LFB21
	.quad	.LFE21-.LFB21
	.uleb128 0x1
	.byte	0x9c
	.long	0xb06
	.uleb128 0x1a
	.string	"p"
	.byte	0x1
	.value	0x3d9
	.long	0x37e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x1a
	.string	"t"
	.byte	0x1
	.value	0x3d9
	.long	0x504
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x1d
	.string	"xsc"
	.byte	0x1
	.value	0x3db
	.long	0x2e5
	.uleb128 0x1
	.byte	0x65
	.uleb128 0x24
	.long	.LASF108
	.byte	0x1
	.value	0x3dc
	.long	0x2e5
	.long	0xadb
	.uleb128 0x25
	.long	0x2e5
	.byte	0
	.uleb128 0x1d
	.string	"ic"
	.byte	0x1
	.value	0x3dd
	.long	0x545
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x23
	.long	.LASF73
	.byte	0x1
	.value	0x3de
	.long	0x2fe
	.uleb128 0x1d
	.string	"pos"
	.byte	0x1
	.value	0x3df
	.long	0x309
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0x19
	.long	.LASF111
	.byte	0x1
	.value	0x3a9
	.long	0x545
	.quad	.LFB20
	.quad	.LFE20-.LFB20
	.uleb128 0x1
	.byte	0x9c
	.long	0xb9b
	.uleb128 0x1a
	.string	"rp0"
	.byte	0x1
	.value	0x3a9
	.long	0x2e5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x1a
	.string	"rp1"
	.byte	0x1
	.value	0x3a9
	.long	0x2e5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x1a
	.string	"rp2"
	.byte	0x1
	.value	0x3a9
	.long	0x2e5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x1a
	.string	"t"
	.byte	0x1
	.value	0x3a9
	.long	0x504
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x1d
	.string	"xsc"
	.byte	0x1
	.value	0x3ab
	.long	0x2e5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x24
	.long	.LASF108
	.byte	0x1
	.value	0x3ab
	.long	0x2e5
	.long	0xb8c
	.uleb128 0x25
	.long	0x2e5
	.byte	0
	.uleb128 0x1d
	.string	"ic"
	.byte	0x1
	.value	0x3ad
	.long	0x545
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0x19
	.long	.LASF112
	.byte	0x1
	.value	0x382
	.long	0x36d
	.quad	.LFB19
	.quad	.LFE19-.LFB19
	.uleb128 0x1
	.byte	0x9c
	.long	0xc79
	.uleb128 0x1a
	.string	"p"
	.byte	0x1
	.value	0x382
	.long	0x37e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x1b
	.long	.LASF113
	.byte	0x1
	.value	0x382
	.long	0x545
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x1a
	.string	"t"
	.byte	0x1
	.value	0x382
	.long	0x36d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x1a
	.string	"l"
	.byte	0x1
	.value	0x382
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x1a
	.string	"tr"
	.byte	0x1
	.value	0x382
	.long	0x504
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x1d
	.string	"si"
	.byte	0x1
	.value	0x384
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x1d
	.string	"c"
	.byte	0x1
	.value	0x385
	.long	0x420
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x1d
	.string	"rt"
	.byte	0x1
	.value	0x386
	.long	0x36d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x1c
	.quad	.LBB48
	.quad	.LBE48-.LBB48
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x38f
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x20
	.string	"j"
	.byte	0x1
	.value	0x38f
	.long	0x62
	.uleb128 0x1d
	.string	"pic"
	.byte	0x1
	.value	0x390
	.long	0x545
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1d
	.string	"tic"
	.byte	0x1
	.value	0x390
	.long	0x545
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.byte	0
	.uleb128 0x1e
	.long	.LASF114
	.byte	0x1
	.value	0x342
	.quad	.LFB18
	.quad	.LFE18-.LFB18
	.uleb128 0x1
	.byte	0x9c
	.long	0xda5
	.uleb128 0x1a
	.string	"p"
	.byte	0x1
	.value	0x342
	.long	0x37e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1160
	.uleb128 0x1a
	.string	"t"
	.byte	0x1
	.value	0x342
	.long	0x504
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1168
	.uleb128 0x1b
	.long	.LASF115
	.byte	0x1
	.value	0x342
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1172
	.uleb128 0x1b
	.long	.LASF61
	.byte	0x1
	.value	0x342
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1176
	.uleb128 0x1d
	.string	"ic"
	.byte	0x1
	.value	0x344
	.long	0x545
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1120
	.uleb128 0x1d
	.string	"k"
	.byte	0x1
	.value	0x345
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1152
	.uleb128 0x1f
	.long	.LASF116
	.byte	0x1
	.value	0x346
	.long	0x309
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1104
	.uleb128 0x1f
	.long	.LASF117
	.byte	0x1
	.value	0x347
	.long	0x420
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1136
	.uleb128 0x1d
	.string	"tmp"
	.byte	0x1
	.value	0x348
	.long	0x4f9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1104
	.uleb128 0x1f
	.long	.LASF73
	.byte	0x1
	.value	0x349
	.long	0x2fe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1144
	.uleb128 0x1f
	.long	.LASF118
	.byte	0x1
	.value	0x34a
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1148
	.uleb128 0x21
	.quad	.LBB45
	.quad	.LBE45-.LBB45
	.long	0xd62
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x351
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x21
	.quad	.LBB46
	.quad	.LBE46-.LBB46
	.long	0xd88
	.uleb128 0x1f
	.long	.LASF72
	.byte	0x1
	.value	0x361
	.long	0x2fe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1128
	.byte	0
	.uleb128 0x1c
	.quad	.LBB47
	.quad	.LBE47-.LBB47
	.uleb128 0x20
	.string	"i"
	.byte	0x1
	.value	0x36c
	.long	0x62
	.byte	0
	.byte	0
	.uleb128 0x19
	.long	.LASF119
	.byte	0x1
	.value	0x313
	.long	0x36d
	.quad	.LFB17
	.quad	.LFE17-.LFB17
	.uleb128 0x1
	.byte	0x9c
	.long	0xe5c
	.uleb128 0x1b
	.long	.LASF120
	.byte	0x1
	.value	0x313
	.long	0x37e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x1a
	.string	"nb"
	.byte	0x1
	.value	0x313
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x1a
	.string	"t"
	.byte	0x1
	.value	0x313
	.long	0x504
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x1b
	.long	.LASF115
	.byte	0x1
	.value	0x313
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x1b
	.long	.LASF61
	.byte	0x1
	.value	0x313
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x1d
	.string	"q"
	.byte	0x1
	.value	0x315
	.long	0x37e
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x1d
	.string	"tmp"
	.byte	0x1
	.value	0x316
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x1f
	.long	.LASF121
	.byte	0x1
	.value	0x317
	.long	0x36d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x1f
	.long	.LASF122
	.byte	0x1
	.value	0x318
	.long	0x545
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x23
	.long	.LASF123
	.byte	0x1
	.value	0x319
	.long	0x62
	.byte	0
	.uleb128 0x19
	.long	.LASF124
	.byte	0x1
	.value	0x2d9
	.long	0x2f3
	.quad	.LFB16
	.quad	.LFE16-.LFB16
	.uleb128 0x1
	.byte	0x9c
	.long	0xf36
	.uleb128 0x1a
	.string	"p"
	.byte	0x1
	.value	0x2d9
	.long	0x36d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x1a
	.string	"dsq"
	.byte	0x1
	.value	0x2d9
	.long	0x2fe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x1b
	.long	.LASF125
	.byte	0x1
	.value	0x2d9
	.long	0x2fe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x1a
	.string	"hg"
	.byte	0x1
	.value	0x2d9
	.long	0x685
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1f
	.long	.LASF126
	.byte	0x1
	.value	0x2db
	.long	0x36d
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x1d
	.string	"dr"
	.byte	0x1
	.value	0x2dc
	.long	0x309
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x1d
	.string	"pos"
	.byte	0x1
	.value	0x2dd
	.long	0x309
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x1f
	.long	.LASF127
	.byte	0x1
	.value	0x2de
	.long	0x2fe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x21
	.quad	.LBB43
	.quad	.LBE43-.LBB43
	.long	0xf17
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x2e4
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x1c
	.quad	.LBB44
	.quad	.LBE44-.LBB44
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x2e5
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.byte	0
	.uleb128 0x19
	.long	.LASF128
	.byte	0x1
	.value	0x2a0
	.long	0x685
	.quad	.LFB15
	.quad	.LFE15-.LFB15
	.uleb128 0x1
	.byte	0x9c
	.long	0x1089
	.uleb128 0x1a
	.string	"p"
	.byte	0x1
	.value	0x2a0
	.long	0x36d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x1a
	.string	"hg"
	.byte	0x1
	.value	0x2a0
	.long	0x685
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1f
	.long	.LASF129
	.byte	0x1
	.value	0x2a2
	.long	0x2fe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x1f
	.long	.LASF130
	.byte	0x1
	.value	0x2a2
	.long	0x2fe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x1f
	.long	.LASF131
	.byte	0x1
	.value	0x2a2
	.long	0x2fe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x1d
	.string	"ai"
	.byte	0x1
	.value	0x2a3
	.long	0x309
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x1f
	.long	.LASF132
	.byte	0x1
	.value	0x2a3
	.long	0x309
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x23
	.long	.LASF133
	.byte	0x1
	.value	0x2a4
	.long	0x2fe
	.uleb128 0x23
	.long	.LASF134
	.byte	0x1
	.value	0x2a4
	.long	0x2fe
	.uleb128 0x23
	.long	.LASF135
	.byte	0x1
	.value	0x2a4
	.long	0x2fe
	.uleb128 0x1d
	.string	"dr"
	.byte	0x1
	.value	0x2a5
	.long	0x309
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x1f
	.long	.LASF127
	.byte	0x1
	.value	0x2a6
	.long	0x2fe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x21
	.quad	.LBB39
	.quad	.LBE39-.LBB39
	.long	0x1026
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x2a9
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x21
	.quad	.LBB40
	.quad	.LBE40-.LBB40
	.long	0x1048
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x2aa
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x21
	.quad	.LBB41
	.quad	.LBE41-.LBB41
	.long	0x106a
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x2b1
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x1c
	.quad	.LBB42
	.quad	.LBE42-.LBB42
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x2b2
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.byte	0
	.uleb128 0x1e
	.long	.LASF136
	.byte	0x1
	.value	0x28a
	.quad	.LFB14
	.quad	.LFE14-.LFB14
	.uleb128 0x1
	.byte	0x9c
	.long	0x1156
	.uleb128 0x1a
	.string	"p"
	.byte	0x1
	.value	0x28a
	.long	0x37e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x1b
	.long	.LASF73
	.byte	0x1
	.value	0x28a
	.long	0x2fe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x1a
	.string	"rt"
	.byte	0x1
	.value	0x28a
	.long	0x36d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x1d
	.string	"hg"
	.byte	0x1
	.value	0x28c
	.long	0x685
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x1f
	.long	.LASF137
	.byte	0x1
	.value	0x28d
	.long	0x2fe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x21
	.quad	.LBB36
	.quad	.LBE36-.LBB36
	.long	0x1115
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x291
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x21
	.quad	.LBB37
	.quad	.LBE37-.LBB37
	.long	0x1137
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x293
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x1c
	.quad	.LBB38
	.quad	.LBE38-.LBB38
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x298
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.byte	0
	.uleb128 0x1e
	.long	.LASF138
	.byte	0x1
	.value	0x27f
	.quad	.LFB13
	.quad	.LFE13-.LFB13
	.uleb128 0x1
	.byte	0x9c
	.long	0x11bd
	.uleb128 0x1b
	.long	.LASF73
	.byte	0x1
	.value	0x27f
	.long	0x2fe
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1a
	.string	"rt"
	.byte	0x1
	.value	0x27f
	.long	0x36d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1a
	.string	"p"
	.byte	0x1
	.value	0x27f
	.long	0x37e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1b
	.long	.LASF139
	.byte	0x1
	.value	0x27f
	.long	0x62
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1b
	.long	.LASF140
	.byte	0x1
	.value	0x27f
	.long	0x2fe
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0x26
	.string	"vp"
	.byte	0x1
	.value	0x226
	.quad	.LFB12
	.quad	.LFE12-.LFB12
	.uleb128 0x1
	.byte	0x9c
	.long	0x151e
	.uleb128 0x1a
	.string	"q"
	.byte	0x1
	.value	0x226
	.long	0x37e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -312
	.uleb128 0x1b
	.long	.LASF139
	.byte	0x1
	.value	0x226
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -316
	.uleb128 0x1f
	.long	.LASF140
	.byte	0x1
	.value	0x228
	.long	0x2fe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -304
	.uleb128 0x1f
	.long	.LASF141
	.byte	0x1
	.value	0x229
	.long	0x309
	.uleb128 0x3
	.byte	0x91
	.sleb128 -192
	.uleb128 0x1f
	.long	.LASF142
	.byte	0x1
	.value	0x229
	.long	0x309
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x1f
	.long	.LASF143
	.byte	0x1
	.value	0x229
	.long	0x309
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x1f
	.long	.LASF144
	.byte	0x1
	.value	0x229
	.long	0x309
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x1f
	.long	.LASF145
	.byte	0x1
	.value	0x229
	.long	0x309
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x21
	.quad	.LBB19
	.quad	.LBE19-.LBB19
	.long	0x127d
	.uleb128 0x1d
	.string	"foo"
	.byte	0x1
	.value	0x22f
	.long	0x37e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -296
	.byte	0
	.uleb128 0x21
	.quad	.LBB20
	.quad	.LBE20-.LBB20
	.long	0x129f
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x235
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x21
	.quad	.LBB21
	.quad	.LBE21-.LBB21
	.long	0x12c1
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x237
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x21
	.quad	.LBB22
	.quad	.LBE22-.LBB22
	.long	0x12e3
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x238
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x21
	.quad	.LBB23
	.quad	.LBE23-.LBB23
	.long	0x1305
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x23a
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x21
	.quad	.LBB24
	.quad	.LBE24-.LBB24
	.long	0x1327
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x23b
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x21
	.quad	.LBB25
	.quad	.LBE25-.LBB25
	.long	0x136a
	.uleb128 0x1d
	.string	"p0"
	.byte	0x1
	.value	0x23d
	.long	0x2fe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -288
	.uleb128 0x1d
	.string	"p1"
	.byte	0x1
	.value	0x23d
	.long	0x2fe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -280
	.uleb128 0x1d
	.string	"p2"
	.byte	0x1
	.value	0x23d
	.long	0x2fe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -272
	.byte	0
	.uleb128 0x21
	.quad	.LBB26
	.quad	.LBE26-.LBB26
	.long	0x138c
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x24b
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x21
	.quad	.LBB27
	.quad	.LBE27-.LBB27
	.long	0x13cf
	.uleb128 0x1d
	.string	"p0"
	.byte	0x1
	.value	0x24c
	.long	0x2fe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -264
	.uleb128 0x1d
	.string	"p1"
	.byte	0x1
	.value	0x24c
	.long	0x2fe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -256
	.uleb128 0x1d
	.string	"p2"
	.byte	0x1
	.value	0x24c
	.long	0x2fe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -248
	.byte	0
	.uleb128 0x21
	.quad	.LBB28
	.quad	.LBE28-.LBB28
	.long	0x13f1
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x259
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x21
	.quad	.LBB29
	.quad	.LBE29-.LBB29
	.long	0x1434
	.uleb128 0x1d
	.string	"p0"
	.byte	0x1
	.value	0x25a
	.long	0x2fe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -240
	.uleb128 0x1d
	.string	"p1"
	.byte	0x1
	.value	0x25a
	.long	0x2fe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -232
	.uleb128 0x1d
	.string	"p2"
	.byte	0x1
	.value	0x25a
	.long	0x2fe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -224
	.byte	0
	.uleb128 0x21
	.quad	.LBB30
	.quad	.LBE30-.LBB30
	.long	0x1456
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x266
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x21
	.quad	.LBB31
	.quad	.LBE31-.LBB31
	.long	0x1478
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x267
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x21
	.quad	.LBB32
	.quad	.LBE32-.LBB32
	.long	0x149a
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x268
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x21
	.quad	.LBB33
	.quad	.LBE33-.LBB33
	.long	0x14bc
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x269
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x21
	.quad	.LBB34
	.quad	.LBE34-.LBB34
	.long	0x14de
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x26a
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x1c
	.quad	.LBB35
	.quad	.LBE35-.LBB35
	.uleb128 0x1d
	.string	"p0"
	.byte	0x1
	.value	0x26b
	.long	0x2fe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -216
	.uleb128 0x1d
	.string	"p1"
	.byte	0x1
	.value	0x26b
	.long	0x2fe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -208
	.uleb128 0x1d
	.string	"p2"
	.byte	0x1
	.value	0x26b
	.long	0x2fe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -200
	.byte	0
	.byte	0
	.uleb128 0x1e
	.long	.LASF146
	.byte	0x1
	.value	0x20e
	.quad	.LFB11
	.quad	.LFE11-.LFB11
	.uleb128 0x1
	.byte	0x9c
	.long	0x15ce
	.uleb128 0x1b
	.long	.LASF73
	.byte	0x1
	.value	0x20e
	.long	0x2fe
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x1a
	.string	"rt"
	.byte	0x1
	.value	0x20e
	.long	0x36d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x1b
	.long	.LASF147
	.byte	0x1
	.value	0x20e
	.long	0x37e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x1b
	.long	.LASF139
	.byte	0x1
	.value	0x20e
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x1b
	.long	.LASF140
	.byte	0x1
	.value	0x20e
	.long	0x2fe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x20
	.string	"p"
	.byte	0x1
	.value	0x210
	.long	0x37e
	.uleb128 0x1d
	.string	"q"
	.byte	0x1
	.value	0x210
	.long	0x37e
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x211
	.long	0x62
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1c
	.quad	.LBB18
	.quad	.LBE18-.LBB18
	.uleb128 0x1d
	.string	"foo"
	.byte	0x1
	.value	0x216
	.long	0x37e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x1e
	.long	.LASF148
	.byte	0x1
	.value	0x1fa
	.quad	.LFB10
	.quad	.LFE10-.LFB10
	.uleb128 0x1
	.byte	0x9c
	.long	0x1653
	.uleb128 0x1a
	.string	"t"
	.byte	0x1
	.value	0x1fa
	.long	0x504
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x1b
	.long	.LASF139
	.byte	0x1
	.value	0x1fa
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x1fb
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x1f
	.long	.LASF73
	.byte	0x1
	.value	0x1fc
	.long	0x2fe
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x1f
	.long	.LASF140
	.byte	0x1
	.value	0x1fd
	.long	0x2fe
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x1f
	.long	.LASF74
	.byte	0x1
	.value	0x1fe
	.long	0x36d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1f
	.long	.LASF149
	.byte	0x1
	.value	0x1ff
	.long	0x37e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x19
	.long	.LASF150
	.byte	0x1
	.value	0x18f
	.long	0x5ef
	.quad	.LFB9
	.quad	.LFE9-.LFB9
	.uleb128 0x1
	.byte	0x9c
	.long	0x188b
	.uleb128 0x1b
	.long	.LASF61
	.byte	0x1
	.value	0x18f
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -252
	.uleb128 0x1b
	.long	.LASF151
	.byte	0x1
	.value	0x18f
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -256
	.uleb128 0x1b
	.long	.LASF152
	.byte	0x1
	.value	0x18f
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -260
	.uleb128 0x1f
	.long	.LASF153
	.byte	0x1
	.value	0x191
	.long	0x5ef
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x1d
	.string	"rsc"
	.byte	0x1
	.value	0x192
	.long	0x2fe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -208
	.uleb128 0x1d
	.string	"vsc"
	.byte	0x1
	.value	0x192
	.long	0x2fe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -200
	.uleb128 0x1d
	.string	"r"
	.byte	0x1
	.value	0x192
	.long	0x2fe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -240
	.uleb128 0x1d
	.string	"v"
	.byte	0x1
	.value	0x192
	.long	0x2fe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x1d
	.string	"x"
	.byte	0x1
	.value	0x192
	.long	0x2fe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x1d
	.string	"y"
	.byte	0x1
	.value	0x192
	.long	0x2fe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x1f
	.long	.LASF154
	.byte	0x1
	.value	0x193
	.long	0x37e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -192
	.uleb128 0x1d
	.string	"p"
	.byte	0x1
	.value	0x193
	.long	0x37e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -184
	.uleb128 0x1f
	.long	.LASF155
	.byte	0x1
	.value	0x193
	.long	0x37e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -232
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x194
	.long	0x62
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x1f
	.long	.LASF156
	.byte	0x1
	.value	0x195
	.long	0x2e5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -168
	.uleb128 0x1d
	.string	"t1"
	.byte	0x1
	.value	0x195
	.long	0x2e5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -176
	.uleb128 0x1f
	.long	.LASF157
	.byte	0x1
	.value	0x196
	.long	0x2e5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -224
	.uleb128 0x1d
	.string	"k"
	.byte	0x1
	.value	0x197
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x1d
	.string	"rsq"
	.byte	0x1
	.value	0x198
	.long	0x2e5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -216
	.uleb128 0x1f
	.long	.LASF158
	.byte	0x1
	.value	0x198
	.long	0x2e5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x1d
	.string	"rad"
	.byte	0x1
	.value	0x199
	.long	0x2fe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x1f
	.long	.LASF159
	.byte	0x1
	.value	0x19a
	.long	0x2fe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x21
	.quad	.LBB12
	.quad	.LBE12-.LBB12
	.long	0x17e4
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x19f
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x21
	.quad	.LBB13
	.quad	.LBE13-.LBB13
	.long	0x1806
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x1a0
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x21
	.quad	.LBB14
	.quad	.LBE14-.LBB14
	.long	0x1828
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x1ba
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x21
	.quad	.LBB15
	.quad	.LBE15-.LBB15
	.long	0x184a
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x1cb
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x21
	.quad	.LBB16
	.quad	.LBE16-.LBB16
	.long	0x186c
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x1ce
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x1c
	.quad	.LBB17
	.quad	.LBE17-.LBB17
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x1cf
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.byte	0
	.uleb128 0x19
	.long	.LASF160
	.byte	0x1
	.value	0x177
	.long	0x420
	.quad	.LFB8
	.quad	.LFE8-.LFB8
	.uleb128 0x1
	.byte	0x9c
	.long	0x18d5
	.uleb128 0x1a
	.string	"p"
	.byte	0x1
	.value	0x177
	.long	0x62
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1d
	.string	"tmp"
	.byte	0x1
	.value	0x178
	.long	0x420
	.uleb128 0x1
	.byte	0x53
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x179
	.long	0x62
	.uleb128 0x1
	.byte	0x5c
	.byte	0
	.uleb128 0x19
	.long	.LASF161
	.byte	0x1
	.value	0x169
	.long	0x37e
	.quad	.LFB7
	.quad	.LFE7-.LFB7
	.uleb128 0x1
	.byte	0x9c
	.long	0x1913
	.uleb128 0x1a
	.string	"p"
	.byte	0x1
	.value	0x169
	.long	0x62
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1d
	.string	"tmp"
	.byte	0x1
	.value	0x16a
	.long	0x37e
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x27
	.long	.LASF162
	.byte	0x1
	.value	0x15c
	.quad	.LFB6
	.quad	.LFE6-.LFB6
	.uleb128 0x1
	.byte	0x9c
	.long	0x193f
	.uleb128 0x1a
	.string	"n"
	.byte	0x1
	.value	0x15c
	.long	0x36d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x1e
	.long	.LASF163
	.byte	0x1
	.value	0x141
	.quad	.LFB5
	.quad	.LFE5-.LFB5
	.uleb128 0x1
	.byte	0x9c
	.long	0x1983
	.uleb128 0x1a
	.string	"n"
	.byte	0x1
	.value	0x141
	.long	0x36d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1d
	.string	"r"
	.byte	0x1
	.value	0x143
	.long	0x36d
	.uleb128 0x1
	.byte	0x5c
	.uleb128 0x1d
	.string	"i"
	.byte	0x1
	.value	0x144
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x1e
	.long	.LASF164
	.byte	0x1
	.value	0x138
	.quad	.LFB4
	.quad	.LFE4-.LFB4
	.uleb128 0x1
	.byte	0x9c
	.long	0x19d1
	.uleb128 0x1a
	.string	"n"
	.byte	0x1
	.value	0x138
	.long	0x36d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x20
	.string	"t1"
	.byte	0x1
	.value	0x13a
	.long	0x38
	.uleb128 0x20
	.string	"t2"
	.byte	0x1
	.value	0x13a
	.long	0x38
	.uleb128 0x20
	.string	"foo"
	.byte	0x1
	.value	0x13b
	.long	0x62
	.byte	0
	.uleb128 0x1e
	.long	.LASF165
	.byte	0x1
	.value	0x11c
	.quad	.LFB3
	.quad	.LFE3-.LFB3
	.uleb128 0x1
	.byte	0x9c
	.long	0x1a79
	.uleb128 0x1a
	.string	"t"
	.byte	0x1
	.value	0x11c
	.long	0x504
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1b
	.long	.LASF139
	.byte	0x1
	.value	0x11c
	.long	0x62
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1d
	.string	"bt"
	.byte	0x1
	.value	0x11d
	.long	0x37e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x20
	.string	"bt0"
	.byte	0x1
	.value	0x11d
	.long	0x37e
	.uleb128 0x20
	.string	"q"
	.byte	0x1
	.value	0x11d
	.long	0x37e
	.uleb128 0x20
	.string	"i"
	.byte	0x1
	.value	0x11e
	.long	0x62
	.uleb128 0x1f
	.long	.LASF74
	.byte	0x1
	.value	0x11f
	.long	0x36d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x23
	.long	.LASF166
	.byte	0x1
	.value	0x121
	.long	0x62
	.uleb128 0x23
	.long	.LASF167
	.byte	0x1
	.value	0x121
	.long	0x62
	.uleb128 0x23
	.long	.LASF168
	.byte	0x1
	.value	0x121
	.long	0x62
	.uleb128 0x23
	.long	.LASF169
	.byte	0x1
	.value	0x121
	.long	0x62
	.byte	0
	.uleb128 0x28
	.long	.LASF170
	.byte	0x1
	.byte	0xc2
	.long	0x37e
	.quad	.LFB2
	.quad	.LFE2-.LFB2
	.uleb128 0x1
	.byte	0x9c
	.long	0x1c1d
	.uleb128 0x29
	.string	"rsc"
	.byte	0x1
	.byte	0xc4
	.long	0x2fe
	.uleb128 0x29
	.string	"vsc"
	.byte	0x1
	.byte	0xc4
	.long	0x2fe
	.uleb128 0x29
	.string	"r"
	.byte	0x1
	.byte	0xc4
	.long	0x2fe
	.uleb128 0x29
	.string	"v"
	.byte	0x1
	.byte	0xc4
	.long	0x2fe
	.uleb128 0x29
	.string	"x"
	.byte	0x1
	.byte	0xc4
	.long	0x2fe
	.uleb128 0x29
	.string	"y"
	.byte	0x1
	.byte	0xc4
	.long	0x2fe
	.uleb128 0x2a
	.string	"cmr"
	.byte	0x1
	.byte	0xc5
	.long	0x309
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2a
	.string	"cmv"
	.byte	0x1
	.byte	0xc5
	.long	0x309
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2b
	.long	.LASF154
	.byte	0x1
	.byte	0xc6
	.long	0x37e
	.uleb128 0x29
	.string	"p"
	.byte	0x1
	.byte	0xc6
	.long	0x37e
	.uleb128 0x2b
	.long	.LASF155
	.byte	0x1
	.byte	0xc6
	.long	0x37e
	.uleb128 0x29
	.string	"i"
	.byte	0x1
	.byte	0xc7
	.long	0x62
	.uleb128 0x2b
	.long	.LASF156
	.byte	0x1
	.byte	0xc8
	.long	0x2e5
	.uleb128 0x29
	.string	"t1"
	.byte	0x1
	.byte	0xc8
	.long	0x2e5
	.uleb128 0x2c
	.long	.LASF157
	.byte	0x1
	.byte	0xc9
	.long	0x2e5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x29
	.string	"k"
	.byte	0x1
	.byte	0xca
	.long	0x62
	.uleb128 0x29
	.string	"rsq"
	.byte	0x1
	.byte	0xcb
	.long	0x2e5
	.uleb128 0x2b
	.long	.LASF158
	.byte	0x1
	.byte	0xcb
	.long	0x2e5
	.uleb128 0x29
	.string	"rad"
	.byte	0x1
	.byte	0xcc
	.long	0x2fe
	.uleb128 0x2d
	.long	0x1b74
	.uleb128 0x29
	.string	"i"
	.byte	0x1
	.byte	0xd1
	.long	0x62
	.byte	0
	.uleb128 0x2d
	.long	0x1b83
	.uleb128 0x29
	.string	"i"
	.byte	0x1
	.byte	0xd2
	.long	0x62
	.byte	0
	.uleb128 0x2d
	.long	0x1b92
	.uleb128 0x29
	.string	"i"
	.byte	0x1
	.byte	0xec
	.long	0x62
	.byte	0
	.uleb128 0x2d
	.long	0x1ba1
	.uleb128 0x29
	.string	"i"
	.byte	0x1
	.byte	0xef
	.long	0x62
	.byte	0
	.uleb128 0x2d
	.long	0x1bb0
	.uleb128 0x29
	.string	"i"
	.byte	0x1
	.byte	0xf1
	.long	0x62
	.byte	0
	.uleb128 0x2d
	.long	0x1bc0
	.uleb128 0x20
	.string	"i"
	.byte	0x1
	.value	0x102
	.long	0x62
	.byte	0
	.uleb128 0x2d
	.long	0x1bd0
	.uleb128 0x20
	.string	"i"
	.byte	0x1
	.value	0x105
	.long	0x62
	.byte	0
	.uleb128 0x2d
	.long	0x1be0
	.uleb128 0x20
	.string	"i"
	.byte	0x1
	.value	0x106
	.long	0x62
	.byte	0
	.uleb128 0x2d
	.long	0x1bf0
	.uleb128 0x20
	.string	"i"
	.byte	0x1
	.value	0x10e
	.long	0x62
	.byte	0
	.uleb128 0x2d
	.long	0x1c00
	.uleb128 0x20
	.string	"i"
	.byte	0x1
	.value	0x10f
	.long	0x62
	.byte	0
	.uleb128 0x2d
	.long	0x1c10
	.uleb128 0x20
	.string	"i"
	.byte	0x1
	.value	0x111
	.long	0x62
	.byte	0
	.uleb128 0x2e
	.uleb128 0x20
	.string	"i"
	.byte	0x1
	.value	0x112
	.long	0x62
	.byte	0
	.byte	0
	.uleb128 0x28
	.long	.LASF171
	.byte	0x1
	.byte	0x45
	.long	0x504
	.quad	.LFB1
	.quad	.LFE1-.LFB1
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e77
	.uleb128 0x2c
	.long	.LASF172
	.byte	0x1
	.byte	0x46
	.long	0x2fe
	.uleb128 0x3
	.byte	0x91
	.sleb128 -928
	.uleb128 0x2b
	.long	.LASF173
	.byte	0x1
	.byte	0x47
	.long	0x2fe
	.uleb128 0x2a
	.string	"i"
	.byte	0x1
	.byte	0x48
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -948
	.uleb128 0x2c
	.long	.LASF115
	.byte	0x1
	.byte	0x48
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -936
	.uleb128 0x2b
	.long	.LASF174
	.byte	0x1
	.byte	0x48
	.long	0x62
	.uleb128 0x2a
	.string	"t"
	.byte	0x1
	.byte	0x49
	.long	0x504
	.uleb128 0x3
	.byte	0x91
	.sleb128 -904
	.uleb128 0x29
	.string	"bt0"
	.byte	0x1
	.byte	0x4a
	.long	0x37e
	.uleb128 0x2a
	.string	"p"
	.byte	0x1
	.byte	0x4a
	.long	0x37e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -920
	.uleb128 0x29
	.string	"t1"
	.byte	0x1
	.byte	0x4b
	.long	0x69
	.uleb128 0x29
	.string	"t2"
	.byte	0x1
	.byte	0x4b
	.long	0x69
	.uleb128 0x2a
	.string	"cmr"
	.byte	0x1
	.byte	0x4c
	.long	0x309
	.uleb128 0x3
	.byte	0x91
	.sleb128 -880
	.uleb128 0x2a
	.string	"cmv"
	.byte	0x1
	.byte	0x4c
	.long	0x309
	.uleb128 0x3
	.byte	0x91
	.sleb128 -848
	.uleb128 0x2c
	.long	.LASF155
	.byte	0x1
	.byte	0x4d
	.long	0x37e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -912
	.uleb128 0x2a
	.string	"tmp"
	.byte	0x1
	.byte	0x4e
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -944
	.uleb128 0x2c
	.long	.LASF175
	.byte	0x1
	.byte	0x4e
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -940
	.uleb128 0x2c
	.long	.LASF176
	.byte	0x1
	.byte	0x4f
	.long	0x1e77
	.uleb128 0x3
	.byte	0x91
	.sleb128 -816
	.uleb128 0x2c
	.long	.LASF177
	.byte	0x1
	.byte	0x50
	.long	0x4e9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -560
	.uleb128 0x21
	.quad	.LBB2
	.quad	.LBE2-.LBB2
	.long	0x1d42
	.uleb128 0x2a
	.string	"i"
	.byte	0x1
	.byte	0x5c
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x21
	.quad	.LBB3
	.quad	.LBE3-.LBB3
	.long	0x1d63
	.uleb128 0x2a
	.string	"i"
	.byte	0x1
	.byte	0x5d
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x21
	.quad	.LBB4
	.quad	.LBE4-.LBB4
	.long	0x1dd5
	.uleb128 0x2c
	.long	.LASF178
	.byte	0x1
	.byte	0x62
	.long	0x5ef
	.uleb128 0x3
	.byte	0x91
	.sleb128 -560
	.uleb128 0x2c
	.long	.LASF179
	.byte	0x1
	.byte	0x63
	.long	0x62
	.uleb128 0x3
	.byte	0x91
	.sleb128 -932
	.uleb128 0x21
	.quad	.LBB5
	.quad	.LBE5-.LBB5
	.long	0x1db7
	.uleb128 0x2a
	.string	"i"
	.byte	0x1
	.byte	0x6b
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x1c
	.quad	.LBB6
	.quad	.LBE6-.LBB6
	.uleb128 0x2a
	.string	"i"
	.byte	0x1
	.byte	0x6c
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.byte	0
	.uleb128 0x21
	.quad	.LBB7
	.quad	.LBE7-.LBB7
	.long	0x1df6
	.uleb128 0x2a
	.string	"i"
	.byte	0x1
	.byte	0x70
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x21
	.quad	.LBB8
	.quad	.LBE8-.LBB8
	.long	0x1e17
	.uleb128 0x2a
	.string	"i"
	.byte	0x1
	.byte	0x71
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x1c
	.quad	.LBB9
	.quad	.LBE9-.LBB9
	.uleb128 0x2c
	.long	.LASF122
	.byte	0x1
	.byte	0x7a
	.long	0x545
	.uleb128 0x3
	.byte	0x91
	.sleb128 -896
	.uleb128 0x21
	.quad	.LBB10
	.quad	.LBE10-.LBB10
	.long	0x1e58
	.uleb128 0x2a
	.string	"i"
	.byte	0x1
	.byte	0x7c
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.uleb128 0x1c
	.quad	.LBB11
	.quad	.LBE11-.LBB11
	.uleb128 0x2a
	.string	"i"
	.byte	0x1
	.byte	0x7d
	.long	0x62
	.uleb128 0x1
	.byte	0x53
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xb
	.long	0x62
	.long	0x1e87
	.uleb128 0xc
	.long	0x38
	.byte	0x3f
	.byte	0
	.uleb128 0x2f
	.long	.LASF180
	.byte	0x1
	.byte	0x37
	.long	0x62
	.quad	.LFB0
	.quad	.LFE0-.LFB0
	.uleb128 0x1
	.byte	0x9c
	.long	0x1ed1
	.uleb128 0x30
	.long	.LASF181
	.byte	0x1
	.byte	0x37
	.long	0x62
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x30
	.long	.LASF182
	.byte	0x1
	.byte	0x37
	.long	0x1ed1
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2a
	.string	"t"
	.byte	0x1
	.byte	0x38
	.long	0x504
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x88
	.byte	0
	.section	.debug_abbrev,"",@progbits
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0xe
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1b
	.uleb128 0xe
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x10
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0x1
	.byte	0x1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0x13
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xf
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x10
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x11
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x12
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0x5
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x13
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0x5
	.byte	0
	.byte	0
	.uleb128 0x14
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x15
	.uleb128 0x34
	.byte	0
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x16
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x17
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x18
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x19
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1a
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x1b
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x1c
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.byte	0
	.byte	0
	.uleb128 0x1d
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x1e
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1f
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x20
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x21
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x22
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x23
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x24
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x25
	.uleb128 0x5
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x26
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x27
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x28
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x29
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2a
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x2b
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2c
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x2d
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2e
	.uleb128 0xb
	.byte	0x1
	.byte	0
	.byte	0
	.uleb128 0x2f
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x30
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_aranges,"",@progbits
	.long	0x2c
	.value	0x2
	.long	.Ldebug_info0
	.byte	0x8
	.byte	0
	.value	0
	.value	0
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.quad	0
	.quad	0
	.section	.debug_line,"",@progbits
.Ldebug_line0:
	.section	.debug_str,"MS",@progbits,1
.LASF8:
	.string	"__off_t"
.LASF12:
	.string	"_IO_read_ptr"
.LASF24:
	.string	"_chain"
.LASF73:
	.string	"rsize"
.LASF93:
	.string	"acc0"
.LASF78:
	.string	"treeptr"
.LASF138:
	.string	"gravstep"
.LASF7:
	.string	"size_t"
.LASF30:
	.string	"_shortbuf"
.LASF145:
	.string	"dpos"
.LASF173:
	.string	"tout"
.LASF183:
	.string	"GNU C11 7.5.0 -mtune=generic -march=x86-64 -g -fstack-protector-strong"
.LASF155:
	.string	"prev"
.LASF123:
	.string	"holder"
.LASF89:
	.string	"bp_free_list"
.LASF59:
	.string	"type"
.LASF47:
	.string	"_IO_2_1_stderr_"
.LASF18:
	.string	"_IO_buf_base"
.LASF71:
	.string	"subp"
.LASF57:
	.string	"vector"
.LASF174:
	.string	"nprocs"
.LASF114:
	.string	"expandbox"
.LASF67:
	.string	"next"
.LASF81:
	.string	"nbody"
.LASF96:
	.string	"tnperproc"
.LASF185:
	.string	"/home/leonardo/Documents/Maestria/Tesis/sodden/build"
.LASF54:
	.string	"long long int"
.LASF4:
	.string	"signed char"
.LASF122:
	.string	"xqic"
.LASF152:
	.string	"seedfactor"
.LASF25:
	.string	"_fileno"
.LASF167:
	.string	"cflctdiff"
.LASF13:
	.string	"_IO_read_end"
.LASF79:
	.string	"icstruct"
.LASF160:
	.string	"cell_alloc"
.LASF156:
	.string	"temp"
.LASF6:
	.string	"long int"
.LASF106:
	.string	"subindex"
.LASF11:
	.string	"_flags"
.LASF166:
	.string	"barge"
.LASF127:
	.string	"drsq"
.LASF19:
	.string	"_IO_buf_end"
.LASF28:
	.string	"_cur_column"
.LASF65:
	.string	"bnode"
.LASF125:
	.string	"tolsq"
.LASF153:
	.string	"retval"
.LASF100:
	.string	"printtree"
.LASF53:
	.string	"double"
.LASF154:
	.string	"head"
.LASF27:
	.string	"_old_offset"
.LASF32:
	.string	"_offset"
.LASF180:
	.string	"main"
.LASF92:
	.string	"phi0"
.LASF116:
	.string	"rmid"
.LASF80:
	.string	"xxxrsize"
.LASF101:
	.string	"dis2_number"
.LASF103:
	.string	"tmpv"
.LASF60:
	.string	"mass"
.LASF115:
	.string	"nsteps"
.LASF91:
	.string	"pos0"
.LASF41:
	.string	"_IO_marker"
.LASF48:
	.string	"stdin"
.LASF3:
	.string	"unsigned int"
.LASF176:
	.string	"bodiesper"
.LASF113:
	.string	"xpic"
.LASF51:
	.string	"NumNodes"
.LASF102:
	.string	"hackcofm"
.LASF150:
	.string	"uniform_testdata"
.LASF157:
	.string	"seed"
.LASF0:
	.string	"long unsigned int"
.LASF187:
	.string	"_IO_FILE_plus"
.LASF16:
	.string	"_IO_write_ptr"
.LASF130:
	.string	"phii"
.LASF119:
	.string	"maketree"
.LASF43:
	.string	"_sbuf"
.LASF140:
	.string	"dthf"
.LASF99:
	.string	"level"
.LASF66:
	.string	"new_acc"
.LASF95:
	.string	"prev_bodies"
.LASF2:
	.string	"short unsigned int"
.LASF129:
	.string	"drabs"
.LASF20:
	.string	"_IO_save_base"
.LASF137:
	.string	"szsq"
.LASF88:
	.string	"cp_free_list"
.LASF94:
	.string	"hgstruct"
.LASF184:
	.string	"../olden/bh/src/newbh.c"
.LASF55:
	.string	"bool"
.LASF31:
	.string	"_lock"
.LASF108:
	.string	"floor"
.LASF141:
	.string	"acc1"
.LASF26:
	.string	"_flags2"
.LASF38:
	.string	"_mode"
.LASF49:
	.string	"stdout"
.LASF107:
	.string	"ic_test"
.LASF118:
	.string	"inbox"
.LASF139:
	.string	"nstep"
.LASF147:
	.string	"bodies"
.LASF45:
	.string	"_IO_2_1_stdin_"
.LASF133:
	.string	"dr5inv"
.LASF105:
	.string	"old_subindex"
.LASF84:
	.string	"tail"
.LASF131:
	.string	"mor3"
.LASF158:
	.string	"rsc1"
.LASF146:
	.string	"grav"
.LASF149:
	.string	"blist"
.LASF17:
	.string	"_IO_write_end"
.LASF178:
	.string	"points"
.LASF72:
	.string	"rmin"
.LASF186:
	.string	"_IO_lock_t"
.LASF40:
	.string	"_IO_FILE"
.LASF61:
	.string	"proc"
.LASF151:
	.string	"nbodyx"
.LASF112:
	.string	"loadtree"
.LASF175:
	.string	"range"
.LASF52:
	.string	"float"
.LASF134:
	.string	"phiquad"
.LASF44:
	.string	"_pos"
.LASF168:
	.string	"misstemp"
.LASF23:
	.string	"_markers"
.LASF142:
	.string	"dacc"
.LASF128:
	.string	"gravsub"
.LASF162:
	.string	"my_free"
.LASF63:
	.string	"nodeptr"
.LASF1:
	.string	"unsigned char"
.LASF58:
	.string	"node"
.LASF164:
	.string	"freetree1"
.LASF120:
	.string	"btab"
.LASF5:
	.string	"short int"
.LASF121:
	.string	"node1"
.LASF29:
	.string	"_vtable_offset"
.LASF46:
	.string	"_IO_2_1_stdout_"
.LASF75:
	.string	"bodytab"
.LASF143:
	.string	"dvel"
.LASF136:
	.string	"hackgrav"
.LASF104:
	.string	"tmp_pos"
.LASF170:
	.string	"testdata"
.LASF82:
	.string	"BhDebug"
.LASF135:
	.string	"drquaddr"
.LASF10:
	.string	"char"
.LASF68:
	.string	"proc_next"
.LASF62:
	.string	"new_proc"
.LASF177:
	.string	"ptrper"
.LASF69:
	.string	"cellptr"
.LASF42:
	.string	"_next"
.LASF9:
	.string	"__off64_t"
.LASF169:
	.string	"diff"
.LASF159:
	.string	"coeff"
.LASF14:
	.string	"_IO_read_base"
.LASF87:
	.string	"EventCount"
.LASF22:
	.string	"_IO_save_end"
.LASF97:
	.string	"dis_number"
.LASF86:
	.string	"arg1"
.LASF126:
	.string	"local_p"
.LASF33:
	.string	"__pad1"
.LASF34:
	.string	"__pad2"
.LASF35:
	.string	"__pad3"
.LASF36:
	.string	"__pad4"
.LASF37:
	.string	"__pad5"
.LASF70:
	.string	"cnode"
.LASF85:
	.string	"datapoints"
.LASF39:
	.string	"_unused2"
.LASF50:
	.string	"stderr"
.LASF182:
	.string	"argv"
.LASF90:
	.string	"pskip"
.LASF161:
	.string	"ubody_alloc"
.LASF77:
	.string	"tree"
.LASF165:
	.string	"stepsystem"
.LASF171:
	.string	"old_main"
.LASF21:
	.string	"_IO_backup_base"
.LASF144:
	.string	"vel1"
.LASF163:
	.string	"freetree"
.LASF179:
	.string	"processor"
.LASF132:
	.string	"quaddr"
.LASF124:
	.string	"subdivp"
.LASF110:
	.string	"intcoord"
.LASF181:
	.string	"argc"
.LASF148:
	.string	"computegrav"
.LASF56:
	.string	"real"
.LASF98:
	.string	"ptree"
.LASF64:
	.string	"bodyptr"
.LASF172:
	.string	"tnow"
.LASF83:
	.string	"list"
.LASF76:
	.string	"bodiesperproc"
.LASF15:
	.string	"_IO_write_base"
.LASF109:
	.string	"result"
.LASF111:
	.string	"intcoord1"
.LASF117:
	.string	"newt"
.LASF74:
	.string	"root"
	.ident	"GCC: (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0"
	.section	.note.GNU-stack,"",@progbits
